// Code generated by octo-go; DO NOT EDIT.

package components

import "encoding/json"

type ActionsBillingUsage struct {

	// The amount of free GitHub Actions minutes available.
	IncludedMinutes      json.Number `json:"included_minutes,omitempty"`
	MinutesUsedBreakdown struct {
		ActionsBillingUsageMinutesUsedBreakdown
	} `json:"minutes_used_breakdown,omitempty"`

	// The sum of the free and paid GitHub Actions minutes used.
	TotalMinutesUsed json.Number `json:"total_minutes_used,omitempty"`

	// The total paid GitHub Actions minutes used.
	TotalPaidMinutesUsed json.Number `json:"total_paid_minutes_used,omitempty"`
}

type ActionsBillingUsageMinutesUsedBreakdown struct {

	// Total minutes used on macOS runner machines.
	MACOS json.Number `json:"MACOS,omitempty"`

	// Total minutes used on Ubuntu runner machines.
	UBUNTU json.Number `json:"UBUNTU,omitempty"`

	// Total minutes used on Windows runner machines.
	WINDOWS json.Number `json:"WINDOWS,omitempty"`
}

type ActionsPublicKey struct {
	Key   string `json:"key,omitempty"`
	KeyId string `json:"key_id,omitempty"`
}

type ActionsSecret struct {
	CreatedAt string `json:"created_at,omitempty"`
	Name      string `json:"name,omitempty"`
	UpdatedAt string `json:"updated_at,omitempty"`
}

type ActionsSecret2 struct {
	CreatedAt string `json:"created_at"`
	Name      string `json:"name"`
	UpdatedAt string `json:"updated_at"`
}

type ApiOverview struct {
	Api                []string `json:"api,omitempty"`
	Git                []string `json:"git,omitempty"`
	Hooks              []string `json:"hooks,omitempty"`
	Importer           []string `json:"importer,omitempty"`
	Pages              []string `json:"pages,omitempty"`
	SshKeyFingerprints struct {
		ApiOverviewSshKeyFingerprints
	} `json:"ssh_key_fingerprints,omitempty"`
	VerifiablePasswordAuthentication bool     `json:"verifiable_password_authentication,omitempty"`
	Web                              []string `json:"web,omitempty"`
}

type ApiOverviewSshKeyFingerprints struct {
	MD5DSA    string `json:"MD5_DSA,omitempty"`
	MD5RSA    string `json:"MD5_RSA,omitempty"`
	SHA256DSA string `json:"SHA256_DSA,omitempty"`
	SHA256RSA string `json:"SHA256_RSA,omitempty"`
}

type ApplicationGrant struct {
	App struct {
		ApplicationGrantApp
	} `json:"app,omitempty"`
	CreatedAt string   `json:"created_at,omitempty"`
	Id        int64    `json:"id,omitempty"`
	Scopes    []string `json:"scopes,omitempty"`
	UpdatedAt string   `json:"updated_at,omitempty"`
	Url       string   `json:"url,omitempty"`
}

type ApplicationGrantApp struct {
	ClientId string `json:"client_id,omitempty"`
	Name     string `json:"name,omitempty"`
	Url      string `json:"url,omitempty"`
}

type Artifact struct {
	ArchiveDownloadUrl string `json:"archive_download_url,omitempty"`
	CreatedAt          string `json:"created_at,omitempty"`
	Expired            bool   `json:"expired,omitempty"`
	ExpiresAt          string `json:"expires_at,omitempty"`
	Id                 int64  `json:"id,omitempty"`
	Name               string `json:"name,omitempty"`
	NodeId             string `json:"node_id,omitempty"`
	SizeInBytes        int64  `json:"size_in_bytes,omitempty"`
	Url                string `json:"url,omitempty"`
}

type Artifact2 struct {
	ArchiveDownloadUrl string `json:"archive_download_url"`
	CreatedAt          string `json:"created_at"`
	Expired            bool   `json:"expired"`
	ExpiresAt          string `json:"expires_at"`
	Id                 int64  `json:"id"`
	Name               string `json:"name"`
	NodeId             string `json:"node_id"`
	SizeInBytes        int64  `json:"size_in_bytes"`
	Url                string `json:"url"`
}

type AuthenticationToken struct {
	ExpiresAt string `json:"expires_at,omitempty"`
	Token     string `json:"token,omitempty"`
}

type Authorization struct {
	App struct {
		AuthorizationApp
	} `json:"app,omitempty"`
	CreatedAt      string   `json:"created_at,omitempty"`
	Fingerprint    string   `json:"fingerprint,omitempty"`
	HashedToken    string   `json:"hashed_token,omitempty"`
	Id             int64    `json:"id,omitempty"`
	Note           string   `json:"note,omitempty"`
	NoteUrl        string   `json:"note_url,omitempty"`
	Scopes         []string `json:"scopes,omitempty"`
	Token          string   `json:"token,omitempty"`
	TokenLastEight string   `json:"token_last_eight,omitempty"`
	UpdatedAt      string   `json:"updated_at,omitempty"`
	Url            string   `json:"url,omitempty"`
}

type AuthorizationApp struct {
	ClientId string `json:"client_id,omitempty"`
	Name     string `json:"name,omitempty"`
	Url      string `json:"url,omitempty"`
}

type AuthorizationWithUser struct {
	App struct {
		AuthorizationWithUserApp
	} `json:"app,omitempty"`
	CreatedAt      string   `json:"created_at,omitempty"`
	Fingerprint    string   `json:"fingerprint,omitempty"`
	HashedToken    string   `json:"hashed_token,omitempty"`
	Id             int64    `json:"id,omitempty"`
	Note           string   `json:"note,omitempty"`
	NoteUrl        string   `json:"note_url,omitempty"`
	Scopes         []string `json:"scopes,omitempty"`
	Token          string   `json:"token,omitempty"`
	TokenLastEight string   `json:"token_last_eight,omitempty"`
	UpdatedAt      string   `json:"updated_at,omitempty"`
	Url            string   `json:"url,omitempty"`
	User           struct {
		AuthorizationWithUserUser
	} `json:"user,omitempty"`
}

type AuthorizationWithUserApp struct {
	ClientId string `json:"client_id,omitempty"`
	Name     string `json:"name,omitempty"`
	Url      string `json:"url,omitempty"`
}

type AuthorizationWithUserUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type BaseGist struct {
	Comments    int64  `json:"comments,omitempty"`
	CommentsUrl string `json:"comments_url,omitempty"`
	CommitsUrl  string `json:"commits_url,omitempty"`
	CreatedAt   string `json:"created_at,omitempty"`
	Description string `json:"description,omitempty"`
	Files       map[string]struct {
		Filename string      `json:"filename,omitempty"`
		Language string      `json:"language,omitempty"`
		RawUrl   string      `json:"raw_url,omitempty"`
		Size     json.Number `json:"size,omitempty"`
		Type     string      `json:"type,omitempty"`
	} `json:"files,omitempty"`
	ForksUrl   string `json:"forks_url,omitempty"`
	GitPullUrl string `json:"git_pull_url,omitempty"`
	GitPushUrl string `json:"git_push_url,omitempty"`
	HtmlUrl    string `json:"html_url,omitempty"`
	Id         string `json:"id,omitempty"`
	NodeId     string `json:"node_id,omitempty"`
	Owner      struct {
		BaseGistOwner
	} `json:"owner,omitempty"`
	Public    bool   `json:"public,omitempty"`
	Truncated bool   `json:"truncated,omitempty"`
	UpdatedAt string `json:"updated_at,omitempty"`
	Url       string `json:"url,omitempty"`
	User      string `json:"user,omitempty"`
}

type BaseGistOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type BaseInstallation struct {
	AccessTokensUrl string `json:"access_tokens_url,omitempty"`
	Account         struct {
		BaseInstallationAccount
	} `json:"account,omitempty"`
	AppId       int64    `json:"app_id,omitempty"`
	Events      []string `json:"events,omitempty"`
	HtmlUrl     string   `json:"html_url,omitempty"`
	Id          int64    `json:"id,omitempty"`
	Permissions struct {
		BaseInstallationPermissions
	} `json:"permissions,omitempty"`
	RepositoriesUrl     string `json:"repositories_url,omitempty"`
	RepositorySelection string `json:"repository_selection,omitempty"`
	SingleFileName      string `json:"single_file_name,omitempty"`
	TargetId            int64  `json:"target_id,omitempty"`
	TargetType          string `json:"target_type,omitempty"`
}

type BaseInstallationAccount struct {
	AvatarUrl        string `json:"avatar_url,omitempty"`
	Description      string `json:"description,omitempty"`
	EventsUrl        string `json:"events_url,omitempty"`
	HooksUrl         string `json:"hooks_url,omitempty"`
	Id               int64  `json:"id,omitempty"`
	IssuesUrl        string `json:"issues_url,omitempty"`
	Login            string `json:"login,omitempty"`
	MembersUrl       string `json:"members_url,omitempty"`
	NodeId           string `json:"node_id,omitempty"`
	PublicMembersUrl string `json:"public_members_url,omitempty"`
	ReposUrl         string `json:"repos_url,omitempty"`
	Url              string `json:"url,omitempty"`
}

type BaseInstallationForAuthUser struct {
	AccessTokensUrl string `json:"access_tokens_url"`
	Account         struct {
		BaseInstallationForAuthUserAccount
	} `json:"account"`
	AppId       int64    `json:"app_id"`
	Events      []string `json:"events"`
	HtmlUrl     string   `json:"html_url"`
	Id          int64    `json:"id"`
	Permissions struct {
		BaseInstallationForAuthUserPermissions
	} `json:"permissions"`
	RepositoriesUrl string `json:"repositories_url"`
	SingleFileName  string `json:"single_file_name"`
	TargetId        int64  `json:"target_id"`
	TargetType      string `json:"target_type"`
}

type BaseInstallationForAuthUserAccount struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	Description       string `json:"description,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HooksUrl          string `json:"hooks_url,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	IssuesUrl         string `json:"issues_url,omitempty"`
	Login             string `json:"login,omitempty"`
	MembersUrl        string `json:"members_url,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	PublicMembersUrl  string `json:"public_members_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type BaseInstallationForAuthUserPermissions struct {
	Checks   string `json:"checks,omitempty"`
	Contents string `json:"contents,omitempty"`
	Metadata string `json:"metadata,omitempty"`
}

type BaseInstallationPermissions struct {
	Checks   string `json:"checks,omitempty"`
	Contents string `json:"contents,omitempty"`
	Metadata string `json:"metadata,omitempty"`
}

type Blob struct {
	Content  string      `json:"content,omitempty"`
	Encoding string      `json:"encoding,omitempty"`
	Sha      string      `json:"sha,omitempty"`
	Size     json.Number `json:"size,omitempty"`
	Url      string      `json:"url,omitempty"`
}

type BranchProtection struct {
	AllowDeletions struct {
		BranchProtectionAllowDeletions
	} `json:"allow_deletions,omitempty"`
	AllowForcePushes struct {
		BranchProtectionAllowForcePushes
	} `json:"allow_force_pushes,omitempty"`
	EnforceAdmins struct {
		BranchProtectionEnforceAdmins
	} `json:"enforce_admins,omitempty"`
	RequiredLinearHistory struct {
		BranchProtectionRequiredLinearHistory
	} `json:"required_linear_history,omitempty"`
	RequiredPullRequestReviews struct {
		BranchProtectionRequiredPullRequestReviews
	} `json:"required_pull_request_reviews,omitempty"`
	RequiredStatusChecks struct {
		BranchProtectionRequiredStatusChecks
	} `json:"required_status_checks,omitempty"`
	Restrictions struct {
		BranchProtectionRestrictions
	} `json:"restrictions,omitempty"`
	Url string `json:"url,omitempty"`
}

type BranchProtectionAllowDeletions struct {
	Enabled bool `json:"enabled,omitempty"`
}

type BranchProtectionAllowForcePushes struct {
	Enabled bool `json:"enabled,omitempty"`
}

type BranchProtectionEnforceAdmins struct {
	Enabled bool   `json:"enabled,omitempty"`
	Url     string `json:"url,omitempty"`
}

type BranchProtectionRequiredLinearHistory struct {
	Enabled bool `json:"enabled,omitempty"`
}

type BranchProtectionRequiredPullRequestReviews struct {
	DismissStaleReviews   bool `json:"dismiss_stale_reviews,omitempty"`
	DismissalRestrictions struct {
		BranchProtectionRequiredPullRequestReviewsDismissalRestrictions
	} `json:"dismissal_restrictions,omitempty"`
	RequireCodeOwnerReviews      bool   `json:"require_code_owner_reviews,omitempty"`
	RequiredApprovingReviewCount int64  `json:"required_approving_review_count,omitempty"`
	Url                          string `json:"url,omitempty"`
}

type BranchProtectionRequiredPullRequestReviewsDismissalRestrictions struct {
	Teams []struct {
		BranchProtectionRequiredPullRequestReviewsDismissalRestrictionsTeam
	} `json:"teams,omitempty"`
	TeamsUrl string `json:"teams_url,omitempty"`
	Url      string `json:"url,omitempty"`
	Users    []struct {
		BranchProtectionRequiredPullRequestReviewsDismissalRestrictionsUser
	} `json:"users,omitempty"`
	UsersUrl string `json:"users_url,omitempty"`
}

type BranchProtectionRequiredPullRequestReviewsDismissalRestrictionsTeam struct {
	Description     string      `json:"description,omitempty"`
	HtmlUrl         string      `json:"html_url,omitempty"`
	Id              int64       `json:"id,omitempty"`
	MembersUrl      string      `json:"members_url,omitempty"`
	Name            string      `json:"name,omitempty"`
	NodeId          string      `json:"node_id,omitempty"`
	Parent          interface{} `json:"parent,omitempty"`
	Permission      string      `json:"permission,omitempty"`
	Privacy         string      `json:"privacy,omitempty"`
	RepositoriesUrl string      `json:"repositories_url,omitempty"`
	Slug            string      `json:"slug,omitempty"`
	Url             string      `json:"url,omitempty"`
}

type BranchProtectionRequiredPullRequestReviewsDismissalRestrictionsUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type BranchProtectionRequiredStatusChecks struct {
	Contexts    []string `json:"contexts,omitempty"`
	ContextsUrl string   `json:"contexts_url,omitempty"`
	Strict      bool     `json:"strict,omitempty"`
	Url         string   `json:"url,omitempty"`
}

type BranchProtectionRestrictions struct {
	Apps []struct {
		BranchProtectionRestrictionsApp
	} `json:"apps,omitempty"`
	AppsUrl string `json:"apps_url,omitempty"`
	Teams   []struct {
		BranchProtectionRestrictionsTeam
	} `json:"teams,omitempty"`
	TeamsUrl string `json:"teams_url,omitempty"`
	Url      string `json:"url,omitempty"`
	Users    []struct {
		BranchProtectionRestrictionsUser
	} `json:"users,omitempty"`
	UsersUrl string `json:"users_url,omitempty"`
}

type BranchProtectionRestrictionsApp struct {
	CreatedAt   string   `json:"created_at,omitempty"`
	Description string   `json:"description,omitempty"`
	Events      []string `json:"events,omitempty"`
	ExternalUrl string   `json:"external_url,omitempty"`
	HtmlUrl     string   `json:"html_url,omitempty"`
	Id          int64    `json:"id,omitempty"`
	Name        string   `json:"name,omitempty"`
	NodeId      string   `json:"node_id,omitempty"`
	Owner       struct {
		BranchProtectionRestrictionsAppOwner
	} `json:"owner,omitempty"`
	Permissions struct {
		BranchProtectionRestrictionsAppPermissions
	} `json:"permissions,omitempty"`
	Slug      string `json:"slug,omitempty"`
	UpdatedAt string `json:"updated_at,omitempty"`
}

type BranchProtectionRestrictionsAppOwner struct {
	AvatarUrl        string `json:"avatar_url,omitempty"`
	Description      string `json:"description,omitempty"`
	EventsUrl        string `json:"events_url,omitempty"`
	HooksUrl         string `json:"hooks_url,omitempty"`
	Id               int64  `json:"id,omitempty"`
	IssuesUrl        string `json:"issues_url,omitempty"`
	Login            string `json:"login,omitempty"`
	MembersUrl       string `json:"members_url,omitempty"`
	NodeId           string `json:"node_id,omitempty"`
	PublicMembersUrl string `json:"public_members_url,omitempty"`
	ReposUrl         string `json:"repos_url,omitempty"`
	Url              string `json:"url,omitempty"`
}

type BranchProtectionRestrictionsAppPermissions struct {
	Contents   string `json:"contents,omitempty"`
	Issues     string `json:"issues,omitempty"`
	Metadata   string `json:"metadata,omitempty"`
	SingleFile string `json:"single_file,omitempty"`
}

type BranchProtectionRestrictionsTeam struct {
	Description     string      `json:"description,omitempty"`
	HtmlUrl         string      `json:"html_url,omitempty"`
	Id              int64       `json:"id,omitempty"`
	MembersUrl      string      `json:"members_url,omitempty"`
	Name            string      `json:"name,omitempty"`
	NodeId          string      `json:"node_id,omitempty"`
	Parent          interface{} `json:"parent,omitempty"`
	Permission      string      `json:"permission,omitempty"`
	Privacy         string      `json:"privacy,omitempty"`
	RepositoriesUrl string      `json:"repositories_url,omitempty"`
	Slug            string      `json:"slug,omitempty"`
	Url             string      `json:"url,omitempty"`
}

type BranchProtectionRestrictionsUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type BranchRestrictionPolicy struct {
	Apps []struct {
		BranchRestrictionPolicyApp
	} `json:"apps,omitempty"`
	AppsUrl string `json:"apps_url,omitempty"`
	Teams   []struct {
		BranchRestrictionPolicyTeam
	} `json:"teams,omitempty"`
	TeamsUrl string `json:"teams_url,omitempty"`
	Url      string `json:"url,omitempty"`
	Users    []struct {
		BranchRestrictionPolicyUser
	} `json:"users,omitempty"`
	UsersUrl string `json:"users_url,omitempty"`
}

type BranchRestrictionPolicyApp struct {
	CreatedAt   string   `json:"created_at,omitempty"`
	Description string   `json:"description,omitempty"`
	Events      []string `json:"events,omitempty"`
	ExternalUrl string   `json:"external_url,omitempty"`
	HtmlUrl     string   `json:"html_url,omitempty"`
	Id          int64    `json:"id,omitempty"`
	Name        string   `json:"name,omitempty"`
	NodeId      string   `json:"node_id,omitempty"`
	Owner       struct {
		BranchRestrictionPolicyAppOwner
	} `json:"owner,omitempty"`
	Permissions struct {
		BranchRestrictionPolicyAppPermissions
	} `json:"permissions,omitempty"`
	Slug      string `json:"slug,omitempty"`
	UpdatedAt string `json:"updated_at,omitempty"`
}

type BranchRestrictionPolicyAppOwner struct {
	AvatarUrl        string `json:"avatar_url,omitempty"`
	Description      string `json:"description,omitempty"`
	EventsUrl        string `json:"events_url,omitempty"`
	HooksUrl         string `json:"hooks_url,omitempty"`
	Id               int64  `json:"id,omitempty"`
	IssuesUrl        string `json:"issues_url,omitempty"`
	Login            string `json:"login,omitempty"`
	MembersUrl       string `json:"members_url,omitempty"`
	NodeId           string `json:"node_id,omitempty"`
	PublicMembersUrl string `json:"public_members_url,omitempty"`
	ReposUrl         string `json:"repos_url,omitempty"`
	Url              string `json:"url,omitempty"`
}

type BranchRestrictionPolicyAppPermissions struct {
	Contents   string `json:"contents,omitempty"`
	Issues     string `json:"issues,omitempty"`
	Metadata   string `json:"metadata,omitempty"`
	SingleFile string `json:"single_file,omitempty"`
}

type BranchRestrictionPolicyTeam struct {
	Description     string      `json:"description,omitempty"`
	HtmlUrl         string      `json:"html_url,omitempty"`
	Id              int64       `json:"id,omitempty"`
	MembersUrl      string      `json:"members_url,omitempty"`
	Name            string      `json:"name,omitempty"`
	NodeId          string      `json:"node_id,omitempty"`
	Parent          interface{} `json:"parent,omitempty"`
	Permission      string      `json:"permission,omitempty"`
	Privacy         string      `json:"privacy,omitempty"`
	RepositoriesUrl string      `json:"repositories_url,omitempty"`
	Slug            string      `json:"slug,omitempty"`
	Url             string      `json:"url,omitempty"`
}

type BranchRestrictionPolicyUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type BranchShort struct {
	Commit struct {
		BranchShortCommit
	} `json:"commit,omitempty"`
	Name      string `json:"name,omitempty"`
	Protected bool   `json:"protected,omitempty"`
}

type BranchShortCommit struct {
	Sha string `json:"sha,omitempty"`
	Url string `json:"url,omitempty"`
}

type BranchWithProtection struct {
	Links struct {
		BranchWithProtectionLinks
	} `json:"_links,omitempty"`
	Commit struct {
		BranchWithProtectionCommit
	} `json:"commit,omitempty"`
	Name       string `json:"name,omitempty"`
	Protected  bool   `json:"protected,omitempty"`
	Protection struct {
		BranchWithProtectionProtection
	} `json:"protection,omitempty"`
	ProtectionUrl string `json:"protection_url,omitempty"`
}

type BranchWithProtectionLinks struct {
	Html string `json:"html,omitempty"`
	Self string `json:"self,omitempty"`
}

type BranchWithProtectionCommit struct {
	Author struct {
		BranchWithProtectionCommitAuthor
	} `json:"author,omitempty"`
	Commit struct {
		BranchWithProtectionCommitCommit
	} `json:"commit,omitempty"`
	Committer struct {
		BranchWithProtectionCommitCommitter
	} `json:"committer,omitempty"`
	NodeId  string `json:"node_id,omitempty"`
	Parents []struct {
		BranchWithProtectionCommitParent
	} `json:"parents,omitempty"`
	Sha string `json:"sha,omitempty"`
	Url string `json:"url,omitempty"`
}

type BranchWithProtectionCommitAuthor struct {
	AvatarUrl  string `json:"avatar_url,omitempty"`
	GravatarId string `json:"gravatar_id,omitempty"`
	Id         int64  `json:"id,omitempty"`
	Login      string `json:"login,omitempty"`
	Url        string `json:"url,omitempty"`
}

type BranchWithProtectionCommitCommit struct {
	Author struct {
		BranchWithProtectionCommitCommitAuthor
	} `json:"author,omitempty"`
	Committer struct {
		BranchWithProtectionCommitCommitCommitter
	} `json:"committer,omitempty"`
	Message string `json:"message,omitempty"`
	Tree    struct {
		BranchWithProtectionCommitCommitTree
	} `json:"tree,omitempty"`
	Url          string `json:"url,omitempty"`
	Verification struct {
		BranchWithProtectionCommitCommitVerification
	} `json:"verification,omitempty"`
}

type BranchWithProtectionCommitCommitAuthor struct {
	Date  string `json:"date,omitempty"`
	Email string `json:"email,omitempty"`
	Name  string `json:"name,omitempty"`
}

type BranchWithProtectionCommitCommitCommitter struct {
	Date  string `json:"date,omitempty"`
	Email string `json:"email,omitempty"`
	Name  string `json:"name,omitempty"`
}

type BranchWithProtectionCommitCommitTree struct {
	Sha string `json:"sha,omitempty"`
	Url string `json:"url,omitempty"`
}

type BranchWithProtectionCommitCommitVerification struct {
	Payload   string `json:"payload,omitempty"`
	Reason    string `json:"reason,omitempty"`
	Signature string `json:"signature,omitempty"`
	Verified  bool   `json:"verified,omitempty"`
}

type BranchWithProtectionCommitCommitter struct {
	AvatarUrl  string `json:"avatar_url,omitempty"`
	GravatarId string `json:"gravatar_id,omitempty"`
	Id         int64  `json:"id,omitempty"`
	Login      string `json:"login,omitempty"`
	Url        string `json:"url,omitempty"`
}

type BranchWithProtectionCommitParent struct {
	Sha string `json:"sha"`
	Url string `json:"url"`
}

type BranchWithProtectionProtection struct {
	Enabled              bool `json:"enabled,omitempty"`
	RequiredStatusChecks struct {
		BranchWithProtectionProtectionRequiredStatusChecks
	} `json:"required_status_checks,omitempty"`
}

type BranchWithProtectionProtectionRequiredStatusChecks struct {
	Contexts         []string `json:"contexts,omitempty"`
	EnforcementLevel string   `json:"enforcement_level,omitempty"`
}

type CheckAnnotation struct {
	AnnotationLevel string `json:"annotation_level,omitempty"`
	EndColumn       int64  `json:"end_column,omitempty"`
	EndLine         int64  `json:"end_line,omitempty"`
	Message         string `json:"message,omitempty"`
	Path            string `json:"path,omitempty"`
	RawDetails      string `json:"raw_details,omitempty"`
	StartColumn     int64  `json:"start_column,omitempty"`
	StartLine       int64  `json:"start_line,omitempty"`
	Title           string `json:"title,omitempty"`
}

type CheckRun struct {
	App struct {
		CheckRunApp
	} `json:"app,omitempty"`
	CheckSuite struct {
		CheckRunCheckSuite
	} `json:"check_suite,omitempty"`
	CompletedAt string `json:"completed_at,omitempty"`
	Conclusion  string `json:"conclusion,omitempty"`
	DetailsUrl  string `json:"details_url,omitempty"`
	ExternalId  string `json:"external_id,omitempty"`
	HeadSha     string `json:"head_sha,omitempty"`
	HtmlUrl     string `json:"html_url,omitempty"`
	Id          int64  `json:"id,omitempty"`
	Name        string `json:"name,omitempty"`
	NodeId      string `json:"node_id,omitempty"`
	Output      struct {
		CheckRunOutput
	} `json:"output,omitempty"`
	PullRequests []struct {
		CheckRunPullRequest
	} `json:"pull_requests,omitempty"`
	StartedAt string `json:"started_at,omitempty"`
	Status    string `json:"status,omitempty"`
	Url       string `json:"url,omitempty"`
}

type CheckRun2 struct {
	App struct {
		CheckRun2App
	} `json:"app,omitempty"`
	CheckSuite struct {
		CheckRun2CheckSuite
	} `json:"check_suite,omitempty"`
	CompletedAt string `json:"completed_at,omitempty"`
	Conclusion  string `json:"conclusion,omitempty"`
	DetailsUrl  string `json:"details_url,omitempty"`
	ExternalId  string `json:"external_id,omitempty"`
	HeadSha     string `json:"head_sha,omitempty"`
	HtmlUrl     string `json:"html_url,omitempty"`
	Id          int64  `json:"id,omitempty"`
	Name        string `json:"name,omitempty"`
	NodeId      string `json:"node_id,omitempty"`
	Output      struct {
		CheckRun2Output
	} `json:"output,omitempty"`
	PullRequests []struct {
		CheckRun2PullRequest
	} `json:"pull_requests,omitempty"`
	StartedAt string `json:"started_at,omitempty"`
	Status    string `json:"status,omitempty"`
	Url       string `json:"url,omitempty"`
}

type CheckRun2App struct {
	CreatedAt   string   `json:"created_at,omitempty"`
	Description string   `json:"description,omitempty"`
	Events      []string `json:"events,omitempty"`
	ExternalUrl string   `json:"external_url,omitempty"`
	HtmlUrl     string   `json:"html_url,omitempty"`
	Id          int64    `json:"id,omitempty"`
	Name        string   `json:"name,omitempty"`
	NodeId      string   `json:"node_id,omitempty"`
	Owner       struct {
		CheckRun2AppOwner
	} `json:"owner,omitempty"`
	Permissions struct {
		CheckRun2AppPermissions
	} `json:"permissions,omitempty"`
	Slug      string `json:"slug,omitempty"`
	UpdatedAt string `json:"updated_at,omitempty"`
}

type CheckRun2AppOwner struct {
	AvatarUrl        string `json:"avatar_url,omitempty"`
	Description      string `json:"description,omitempty"`
	EventsUrl        string `json:"events_url,omitempty"`
	HooksUrl         string `json:"hooks_url,omitempty"`
	Id               int64  `json:"id,omitempty"`
	IssuesUrl        string `json:"issues_url,omitempty"`
	Login            string `json:"login,omitempty"`
	MembersUrl       string `json:"members_url,omitempty"`
	NodeId           string `json:"node_id,omitempty"`
	PublicMembersUrl string `json:"public_members_url,omitempty"`
	ReposUrl         string `json:"repos_url,omitempty"`
	Url              string `json:"url,omitempty"`
}

type CheckRun2AppPermissions struct {
	Contents   string `json:"contents,omitempty"`
	Issues     string `json:"issues,omitempty"`
	Metadata   string `json:"metadata,omitempty"`
	SingleFile string `json:"single_file,omitempty"`
}

type CheckRun2CheckSuite struct {
	Id int64 `json:"id,omitempty"`
}

type CheckRun2Output struct {
	AnnotationsCount int64  `json:"annotations_count,omitempty"`
	AnnotationsUrl   string `json:"annotations_url,omitempty"`
	Summary          string `json:"summary,omitempty"`
	Text             string `json:"text,omitempty"`
	Title            string `json:"title,omitempty"`
}

type CheckRun2PullRequest struct {
	Base struct {
		CheckRun2PullRequestBase
	} `json:"base,omitempty"`
	Head struct {
		CheckRun2PullRequestHead
	} `json:"head,omitempty"`
	Id     int64  `json:"id,omitempty"`
	Number int64  `json:"number,omitempty"`
	Url    string `json:"url,omitempty"`
}

type CheckRun2PullRequestBase struct {
	Ref  string `json:"ref,omitempty"`
	Repo struct {
		CheckRun2PullRequestBaseRepo
	} `json:"repo,omitempty"`
	Sha string `json:"sha,omitempty"`
}

type CheckRun2PullRequestBaseRepo struct {
	Id   int64  `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	Url  string `json:"url,omitempty"`
}

type CheckRun2PullRequestHead struct {
	Ref  string `json:"ref,omitempty"`
	Repo struct {
		CheckRun2PullRequestHeadRepo
	} `json:"repo,omitempty"`
	Sha string `json:"sha,omitempty"`
}

type CheckRun2PullRequestHeadRepo struct {
	Id   int64  `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	Url  string `json:"url,omitempty"`
}

type CheckRunApp struct {
	CreatedAt   string   `json:"created_at,omitempty"`
	Description string   `json:"description,omitempty"`
	Events      []string `json:"events,omitempty"`
	ExternalUrl string   `json:"external_url,omitempty"`
	HtmlUrl     string   `json:"html_url,omitempty"`
	Id          int64    `json:"id,omitempty"`
	Name        string   `json:"name,omitempty"`
	NodeId      string   `json:"node_id,omitempty"`
	Owner       struct {
		CheckRunAppOwner
	} `json:"owner,omitempty"`
	Permissions struct {
		CheckRunAppPermissions
	} `json:"permissions,omitempty"`
	Slug      string `json:"slug,omitempty"`
	UpdatedAt string `json:"updated_at,omitempty"`
}

type CheckRunAppOwner struct {
	AvatarUrl        string `json:"avatar_url,omitempty"`
	Description      string `json:"description,omitempty"`
	EventsUrl        string `json:"events_url,omitempty"`
	HooksUrl         string `json:"hooks_url,omitempty"`
	Id               int64  `json:"id,omitempty"`
	IssuesUrl        string `json:"issues_url,omitempty"`
	Login            string `json:"login,omitempty"`
	MembersUrl       string `json:"members_url,omitempty"`
	NodeId           string `json:"node_id,omitempty"`
	PublicMembersUrl string `json:"public_members_url,omitempty"`
	ReposUrl         string `json:"repos_url,omitempty"`
	Url              string `json:"url,omitempty"`
}

type CheckRunAppPermissions struct {
	Contents   string `json:"contents,omitempty"`
	Issues     string `json:"issues,omitempty"`
	Metadata   string `json:"metadata,omitempty"`
	SingleFile string `json:"single_file,omitempty"`
}

type CheckRunCheckSuite struct {
	Id int64 `json:"id,omitempty"`
}

type CheckRunOutput struct {
	AnnotationsCount int64  `json:"annotations_count,omitempty"`
	AnnotationsUrl   string `json:"annotations_url,omitempty"`
	Summary          string `json:"summary,omitempty"`
	Text             string `json:"text,omitempty"`
	Title            string `json:"title,omitempty"`
}

type CheckRunPullRequest struct {
	Base struct {
		CheckRunPullRequestBase
	} `json:"base,omitempty"`
	Head struct {
		CheckRunPullRequestHead
	} `json:"head,omitempty"`
	Id     int64  `json:"id,omitempty"`
	Number int64  `json:"number,omitempty"`
	Url    string `json:"url,omitempty"`
}

type CheckRunPullRequestBase struct {
	Ref  string `json:"ref,omitempty"`
	Repo struct {
		CheckRunPullRequestBaseRepo
	} `json:"repo,omitempty"`
	Sha string `json:"sha,omitempty"`
}

type CheckRunPullRequestBaseRepo struct {
	Id   int64  `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	Url  string `json:"url,omitempty"`
}

type CheckRunPullRequestHead struct {
	Ref  string `json:"ref,omitempty"`
	Repo struct {
		CheckRunPullRequestHeadRepo
	} `json:"repo,omitempty"`
	Sha string `json:"sha,omitempty"`
}

type CheckRunPullRequestHeadRepo struct {
	Id   int64  `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	Url  string `json:"url,omitempty"`
}

type CheckSuite struct {
	After string `json:"after,omitempty"`
	App   struct {
		CheckSuiteApp
	} `json:"app,omitempty"`
	Before       string        `json:"before,omitempty"`
	Conclusion   string        `json:"conclusion,omitempty"`
	HeadBranch   string        `json:"head_branch,omitempty"`
	HeadSha      string        `json:"head_sha,omitempty"`
	Id           int64         `json:"id,omitempty"`
	NodeId       string        `json:"node_id,omitempty"`
	PullRequests []interface{} `json:"pull_requests,omitempty"`
	Repository   struct {
		CheckSuiteRepository
	} `json:"repository,omitempty"`
	Status string `json:"status,omitempty"`
	Url    string `json:"url,omitempty"`
}

type CheckSuiteApp struct {
	CreatedAt   string   `json:"created_at,omitempty"`
	Description string   `json:"description,omitempty"`
	Events      []string `json:"events,omitempty"`
	ExternalUrl string   `json:"external_url,omitempty"`
	HtmlUrl     string   `json:"html_url,omitempty"`
	Id          int64    `json:"id,omitempty"`
	Name        string   `json:"name,omitempty"`
	NodeId      string   `json:"node_id,omitempty"`
	Owner       struct {
		CheckSuiteAppOwner
	} `json:"owner,omitempty"`
	Permissions struct {
		CheckSuiteAppPermissions
	} `json:"permissions,omitempty"`
	Slug      string `json:"slug,omitempty"`
	UpdatedAt string `json:"updated_at,omitempty"`
}

type CheckSuiteAppOwner struct {
	AvatarUrl        string `json:"avatar_url,omitempty"`
	Description      string `json:"description,omitempty"`
	EventsUrl        string `json:"events_url,omitempty"`
	HooksUrl         string `json:"hooks_url,omitempty"`
	Id               int64  `json:"id,omitempty"`
	IssuesUrl        string `json:"issues_url,omitempty"`
	Login            string `json:"login,omitempty"`
	MembersUrl       string `json:"members_url,omitempty"`
	NodeId           string `json:"node_id,omitempty"`
	PublicMembersUrl string `json:"public_members_url,omitempty"`
	ReposUrl         string `json:"repos_url,omitempty"`
	Url              string `json:"url,omitempty"`
}

type CheckSuiteAppPermissions struct {
	Contents   string `json:"contents,omitempty"`
	Issues     string `json:"issues,omitempty"`
	Metadata   string `json:"metadata,omitempty"`
	SingleFile string `json:"single_file,omitempty"`
}

type CheckSuitePreference struct {
	Preferences struct {
		CheckSuitePreferencePreferences
	} `json:"preferences,omitempty"`
	Repository struct {
		CheckSuitePreferenceRepository
	} `json:"repository,omitempty"`
}

type CheckSuitePreferencePreferences struct {
	AutoTriggerChecks []struct {
		CheckSuitePreferencePreferencesAutoTriggerCheck
	} `json:"auto_trigger_checks,omitempty"`
}

type CheckSuitePreferencePreferencesAutoTriggerCheck struct {
	AppId   int64 `json:"app_id"`
	Setting bool  `json:"setting"`
}

type CheckSuitePreferenceRepository struct {
	AllowMergeCommit    bool   `json:"allow_merge_commit,omitempty"`
	AllowRebaseMerge    bool   `json:"allow_rebase_merge,omitempty"`
	AllowSquashMerge    bool   `json:"allow_squash_merge,omitempty"`
	ArchiveUrl          string `json:"archive_url,omitempty"`
	Archived            bool   `json:"archived,omitempty"`
	AssigneesUrl        string `json:"assignees_url,omitempty"`
	BlobsUrl            string `json:"blobs_url,omitempty"`
	BranchesUrl         string `json:"branches_url,omitempty"`
	CloneUrl            string `json:"clone_url,omitempty"`
	CollaboratorsUrl    string `json:"collaborators_url,omitempty"`
	CommentsUrl         string `json:"comments_url,omitempty"`
	CommitsUrl          string `json:"commits_url,omitempty"`
	CompareUrl          string `json:"compare_url,omitempty"`
	ContentsUrl         string `json:"contents_url,omitempty"`
	ContributorsUrl     string `json:"contributors_url,omitempty"`
	CreatedAt           string `json:"created_at,omitempty"`
	DefaultBranch       string `json:"default_branch,omitempty"`
	DeleteBranchOnMerge bool   `json:"delete_branch_on_merge,omitempty"`
	DeploymentsUrl      string `json:"deployments_url,omitempty"`
	Description         string `json:"description,omitempty"`
	Disabled            bool   `json:"disabled,omitempty"`
	DownloadsUrl        string `json:"downloads_url,omitempty"`
	EventsUrl           string `json:"events_url,omitempty"`
	Fork                bool   `json:"fork,omitempty"`
	ForksCount          int64  `json:"forks_count,omitempty"`
	ForksUrl            string `json:"forks_url,omitempty"`
	FullName            string `json:"full_name,omitempty"`
	GitCommitsUrl       string `json:"git_commits_url,omitempty"`
	GitRefsUrl          string `json:"git_refs_url,omitempty"`
	GitTagsUrl          string `json:"git_tags_url,omitempty"`
	GitUrl              string `json:"git_url,omitempty"`
	HasDownloads        bool   `json:"has_downloads,omitempty"`
	HasIssues           bool   `json:"has_issues,omitempty"`
	HasPages            bool   `json:"has_pages,omitempty"`
	HasProjects         bool   `json:"has_projects,omitempty"`
	HasWiki             bool   `json:"has_wiki,omitempty"`
	Homepage            string `json:"homepage,omitempty"`
	HooksUrl            string `json:"hooks_url,omitempty"`
	HtmlUrl             string `json:"html_url,omitempty"`
	Id                  int64  `json:"id,omitempty"`
	IsTemplate          bool   `json:"is_template,omitempty"`
	IssueCommentUrl     string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl      string `json:"issue_events_url,omitempty"`
	IssuesUrl           string `json:"issues_url,omitempty"`
	KeysUrl             string `json:"keys_url,omitempty"`
	LabelsUrl           string `json:"labels_url,omitempty"`
	Language            string `json:"language,omitempty"`
	LanguagesUrl        string `json:"languages_url,omitempty"`
	MergesUrl           string `json:"merges_url,omitempty"`
	MilestonesUrl       string `json:"milestones_url,omitempty"`
	MirrorUrl           string `json:"mirror_url,omitempty"`
	Name                string `json:"name,omitempty"`
	NetworkCount        int64  `json:"network_count,omitempty"`
	NodeId              string `json:"node_id,omitempty"`
	NotificationsUrl    string `json:"notifications_url,omitempty"`
	OpenIssuesCount     int64  `json:"open_issues_count,omitempty"`
	Owner               struct {
		CheckSuitePreferenceRepositoryOwner
	} `json:"owner,omitempty"`
	Permissions struct {
		CheckSuitePreferenceRepositoryPermissions
	} `json:"permissions,omitempty"`
	Private            bool        `json:"private,omitempty"`
	PullsUrl           string      `json:"pulls_url,omitempty"`
	PushedAt           string      `json:"pushed_at,omitempty"`
	ReleasesUrl        string      `json:"releases_url,omitempty"`
	Size               json.Number `json:"size,omitempty"`
	SshUrl             string      `json:"ssh_url,omitempty"`
	StargazersCount    int64       `json:"stargazers_count,omitempty"`
	StargazersUrl      string      `json:"stargazers_url,omitempty"`
	StatusesUrl        string      `json:"statuses_url,omitempty"`
	SubscribersCount   int64       `json:"subscribers_count,omitempty"`
	SubscribersUrl     string      `json:"subscribers_url,omitempty"`
	SubscriptionUrl    string      `json:"subscription_url,omitempty"`
	SvnUrl             string      `json:"svn_url,omitempty"`
	TagsUrl            string      `json:"tags_url,omitempty"`
	TeamsUrl           string      `json:"teams_url,omitempty"`
	TempCloneToken     string      `json:"temp_clone_token,omitempty"`
	TemplateRepository interface{} `json:"template_repository,omitempty"`
	Topics             []string    `json:"topics,omitempty"`
	TreesUrl           string      `json:"trees_url,omitempty"`
	UpdatedAt          string      `json:"updated_at,omitempty"`
	Url                string      `json:"url,omitempty"`
	Visibility         string      `json:"visibility,omitempty"`
	WatchersCount      int64       `json:"watchers_count,omitempty"`
}

type CheckSuitePreferenceRepositoryOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type CheckSuitePreferenceRepositoryPermissions struct {
	Admin bool `json:"admin,omitempty"`
	Pull  bool `json:"pull,omitempty"`
	Push  bool `json:"push,omitempty"`
}

type CheckSuiteRepository struct {
	AllowMergeCommit    bool   `json:"allow_merge_commit,omitempty"`
	AllowRebaseMerge    bool   `json:"allow_rebase_merge,omitempty"`
	AllowSquashMerge    bool   `json:"allow_squash_merge,omitempty"`
	ArchiveUrl          string `json:"archive_url,omitempty"`
	Archived            bool   `json:"archived,omitempty"`
	AssigneesUrl        string `json:"assignees_url,omitempty"`
	BlobsUrl            string `json:"blobs_url,omitempty"`
	BranchesUrl         string `json:"branches_url,omitempty"`
	CloneUrl            string `json:"clone_url,omitempty"`
	CollaboratorsUrl    string `json:"collaborators_url,omitempty"`
	CommentsUrl         string `json:"comments_url,omitempty"`
	CommitsUrl          string `json:"commits_url,omitempty"`
	CompareUrl          string `json:"compare_url,omitempty"`
	ContentsUrl         string `json:"contents_url,omitempty"`
	ContributorsUrl     string `json:"contributors_url,omitempty"`
	CreatedAt           string `json:"created_at,omitempty"`
	DefaultBranch       string `json:"default_branch,omitempty"`
	DeleteBranchOnMerge bool   `json:"delete_branch_on_merge,omitempty"`
	DeploymentsUrl      string `json:"deployments_url,omitempty"`
	Description         string `json:"description,omitempty"`
	Disabled            bool   `json:"disabled,omitempty"`
	DownloadsUrl        string `json:"downloads_url,omitempty"`
	EventsUrl           string `json:"events_url,omitempty"`
	Fork                bool   `json:"fork,omitempty"`
	ForksCount          int64  `json:"forks_count,omitempty"`
	ForksUrl            string `json:"forks_url,omitempty"`
	FullName            string `json:"full_name,omitempty"`
	GitCommitsUrl       string `json:"git_commits_url,omitempty"`
	GitRefsUrl          string `json:"git_refs_url,omitempty"`
	GitTagsUrl          string `json:"git_tags_url,omitempty"`
	GitUrl              string `json:"git_url,omitempty"`
	HasDownloads        bool   `json:"has_downloads,omitempty"`
	HasIssues           bool   `json:"has_issues,omitempty"`
	HasPages            bool   `json:"has_pages,omitempty"`
	HasProjects         bool   `json:"has_projects,omitempty"`
	HasWiki             bool   `json:"has_wiki,omitempty"`
	Homepage            string `json:"homepage,omitempty"`
	HooksUrl            string `json:"hooks_url,omitempty"`
	HtmlUrl             string `json:"html_url,omitempty"`
	Id                  int64  `json:"id,omitempty"`
	IsTemplate          bool   `json:"is_template,omitempty"`
	IssueCommentUrl     string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl      string `json:"issue_events_url,omitempty"`
	IssuesUrl           string `json:"issues_url,omitempty"`
	KeysUrl             string `json:"keys_url,omitempty"`
	LabelsUrl           string `json:"labels_url,omitempty"`
	Language            string `json:"language,omitempty"`
	LanguagesUrl        string `json:"languages_url,omitempty"`
	MergesUrl           string `json:"merges_url,omitempty"`
	MilestonesUrl       string `json:"milestones_url,omitempty"`
	MirrorUrl           string `json:"mirror_url,omitempty"`
	Name                string `json:"name,omitempty"`
	NetworkCount        int64  `json:"network_count,omitempty"`
	NodeId              string `json:"node_id,omitempty"`
	NotificationsUrl    string `json:"notifications_url,omitempty"`
	OpenIssuesCount     int64  `json:"open_issues_count,omitempty"`
	Owner               struct {
		CheckSuiteRepositoryOwner
	} `json:"owner,omitempty"`
	Permissions struct {
		CheckSuiteRepositoryPermissions
	} `json:"permissions,omitempty"`
	Private            bool        `json:"private,omitempty"`
	PullsUrl           string      `json:"pulls_url,omitempty"`
	PushedAt           string      `json:"pushed_at,omitempty"`
	ReleasesUrl        string      `json:"releases_url,omitempty"`
	Size               json.Number `json:"size,omitempty"`
	SshUrl             string      `json:"ssh_url,omitempty"`
	StargazersCount    int64       `json:"stargazers_count,omitempty"`
	StargazersUrl      string      `json:"stargazers_url,omitempty"`
	StatusesUrl        string      `json:"statuses_url,omitempty"`
	SubscribersCount   int64       `json:"subscribers_count,omitempty"`
	SubscribersUrl     string      `json:"subscribers_url,omitempty"`
	SubscriptionUrl    string      `json:"subscription_url,omitempty"`
	SvnUrl             string      `json:"svn_url,omitempty"`
	TagsUrl            string      `json:"tags_url,omitempty"`
	TeamsUrl           string      `json:"teams_url,omitempty"`
	TempCloneToken     string      `json:"temp_clone_token,omitempty"`
	TemplateRepository interface{} `json:"template_repository,omitempty"`
	Topics             []string    `json:"topics,omitempty"`
	TreesUrl           string      `json:"trees_url,omitempty"`
	UpdatedAt          string      `json:"updated_at,omitempty"`
	Url                string      `json:"url,omitempty"`
	Visibility         string      `json:"visibility,omitempty"`
	WatchersCount      int64       `json:"watchers_count,omitempty"`
}

type CheckSuiteRepositoryOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type CheckSuiteRepositoryPermissions struct {
	Admin bool `json:"admin,omitempty"`
	Pull  bool `json:"pull,omitempty"`
	Push  bool `json:"push,omitempty"`
}

type CloneTraffic struct {
	Clones []struct {
		CloneTrafficClone
	} `json:"clones,omitempty"`
	Count   int64 `json:"count,omitempty"`
	Uniques int64 `json:"uniques,omitempty"`
}

type CloneTrafficClone struct {
	Count     int64  `json:"count"`
	Timestamp string `json:"timestamp"`
	Uniques   int64  `json:"uniques"`
}

type CodeFrequencyStat []json.Number

type CodeOfConduct struct {
	Body string `json:"body,omitempty"`
	Key  string `json:"key,omitempty"`
	Name string `json:"name,omitempty"`
	Url  string `json:"url,omitempty"`
}

type CodeOfConductSimple struct {
	Key  string `json:"key,omitempty"`
	Name string `json:"name,omitempty"`
	Url  string `json:"url,omitempty"`
}

type CodeScanningAlert struct {
	ClosedAt        string `json:"closed_at,omitempty"`
	ClosedBy        string `json:"closed_by,omitempty"`
	CreatedAt       string `json:"created_at,omitempty"`
	HtmlUrl         string `json:"html_url,omitempty"`
	Open            bool   `json:"open,omitempty"`
	RuleDescription string `json:"rule_description,omitempty"`
	RuleId          string `json:"rule_id,omitempty"`
	RuleSeverity    string `json:"rule_severity,omitempty"`
	Tool            string `json:"tool,omitempty"`
	Url             string `json:"url,omitempty"`
}

type CodeSearchResultItem struct {
	GitUrl     string `json:"git_url,omitempty"`
	HtmlUrl    string `json:"html_url,omitempty"`
	Name       string `json:"name,omitempty"`
	Path       string `json:"path,omitempty"`
	Repository struct {
		CodeSearchResultItemRepository
	} `json:"repository,omitempty"`
	Score json.Number `json:"score,omitempty"`
	Sha   string      `json:"sha,omitempty"`
	Url   string      `json:"url,omitempty"`
}

type CodeSearchResultItemRepository struct {
	ArchiveUrl       string `json:"archive_url,omitempty"`
	AssigneesUrl     string `json:"assignees_url,omitempty"`
	BlobsUrl         string `json:"blobs_url,omitempty"`
	BranchesUrl      string `json:"branches_url,omitempty"`
	CollaboratorsUrl string `json:"collaborators_url,omitempty"`
	CommentsUrl      string `json:"comments_url,omitempty"`
	CommitsUrl       string `json:"commits_url,omitempty"`
	CompareUrl       string `json:"compare_url,omitempty"`
	ContentsUrl      string `json:"contents_url,omitempty"`
	ContributorsUrl  string `json:"contributors_url,omitempty"`
	Description      string `json:"description,omitempty"`
	DownloadsUrl     string `json:"downloads_url,omitempty"`
	EventsUrl        string `json:"events_url,omitempty"`
	Fork             bool   `json:"fork,omitempty"`
	ForksUrl         string `json:"forks_url,omitempty"`
	FullName         string `json:"full_name,omitempty"`
	GitCommitsUrl    string `json:"git_commits_url,omitempty"`
	GitRefsUrl       string `json:"git_refs_url,omitempty"`
	GitTagsUrl       string `json:"git_tags_url,omitempty"`
	HooksUrl         string `json:"hooks_url,omitempty"`
	HtmlUrl          string `json:"html_url,omitempty"`
	Id               int64  `json:"id,omitempty"`
	IssueCommentUrl  string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl   string `json:"issue_events_url,omitempty"`
	IssuesUrl        string `json:"issues_url,omitempty"`
	KeysUrl          string `json:"keys_url,omitempty"`
	LabelsUrl        string `json:"labels_url,omitempty"`
	LanguagesUrl     string `json:"languages_url,omitempty"`
	MergesUrl        string `json:"merges_url,omitempty"`
	MilestonesUrl    string `json:"milestones_url,omitempty"`
	Name             string `json:"name,omitempty"`
	NodeId           string `json:"node_id,omitempty"`
	NotificationsUrl string `json:"notifications_url,omitempty"`
	Owner            struct {
		CodeSearchResultItemRepositoryOwner
	} `json:"owner,omitempty"`
	Private         bool   `json:"private,omitempty"`
	PullsUrl        string `json:"pulls_url,omitempty"`
	StargazersUrl   string `json:"stargazers_url,omitempty"`
	StatusesUrl     string `json:"statuses_url,omitempty"`
	SubscribersUrl  string `json:"subscribers_url,omitempty"`
	SubscriptionUrl string `json:"subscription_url,omitempty"`
	TagsUrl         string `json:"tags_url,omitempty"`
	TeamsUrl        string `json:"teams_url,omitempty"`
	TreesUrl        string `json:"trees_url,omitempty"`
	Url             string `json:"url,omitempty"`
}

type CodeSearchResultItemRepositoryOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type Collaborator struct {
	AvatarUrl        string `json:"avatar_url,omitempty"`
	EventsUrl        string `json:"events_url,omitempty"`
	FollowersUrl     string `json:"followers_url,omitempty"`
	FollowingUrl     string `json:"following_url,omitempty"`
	GistsUrl         string `json:"gists_url,omitempty"`
	GravatarId       string `json:"gravatar_id,omitempty"`
	HtmlUrl          string `json:"html_url,omitempty"`
	Id               int64  `json:"id,omitempty"`
	Login            string `json:"login,omitempty"`
	NodeId           string `json:"node_id,omitempty"`
	OrganizationsUrl string `json:"organizations_url,omitempty"`
	Permissions      struct {
		CollaboratorPermissions
	} `json:"permissions,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type CollaboratorPermissions struct {
	Admin bool `json:"admin,omitempty"`
	Pull  bool `json:"pull,omitempty"`
	Push  bool `json:"push,omitempty"`
}

type CombinedBillingUsage struct {

	// Numbers of days left in billing cycle.
	DaysLeftInBillingCycle json.Number `json:"days_left_in_billing_cycle,omitempty"`

	// Estimated storage space (GB) used in billing cycle.
	EstimatedPaidStorageForMonth json.Number `json:"estimated_paid_storage_for_month,omitempty"`

	// Estimated sum of free and paid storage space (GB) used in billing cycle.
	EstimatedStorageForMonth json.Number `json:"estimated_storage_for_month,omitempty"`
}

type CombinedCommitStatus struct {
	CommitUrl  string `json:"commit_url,omitempty"`
	Repository struct {
		CombinedCommitStatusRepository
	} `json:"repository,omitempty"`
	Sha      string `json:"sha,omitempty"`
	State    string `json:"state,omitempty"`
	Statuses []struct {
		CombinedCommitStatusStatus
	} `json:"statuses,omitempty"`
	TotalCount int64  `json:"total_count,omitempty"`
	Url        string `json:"url,omitempty"`
}

type CombinedCommitStatusRepository struct {
	ArchiveUrl       string `json:"archive_url,omitempty"`
	AssigneesUrl     string `json:"assignees_url,omitempty"`
	BlobsUrl         string `json:"blobs_url,omitempty"`
	BranchesUrl      string `json:"branches_url,omitempty"`
	CollaboratorsUrl string `json:"collaborators_url,omitempty"`
	CommentsUrl      string `json:"comments_url,omitempty"`
	CommitsUrl       string `json:"commits_url,omitempty"`
	CompareUrl       string `json:"compare_url,omitempty"`
	ContentsUrl      string `json:"contents_url,omitempty"`
	ContributorsUrl  string `json:"contributors_url,omitempty"`
	DeploymentsUrl   string `json:"deployments_url,omitempty"`
	Description      string `json:"description,omitempty"`
	DownloadsUrl     string `json:"downloads_url,omitempty"`
	EventsUrl        string `json:"events_url,omitempty"`
	Fork             bool   `json:"fork,omitempty"`
	ForksUrl         string `json:"forks_url,omitempty"`
	FullName         string `json:"full_name,omitempty"`
	GitCommitsUrl    string `json:"git_commits_url,omitempty"`
	GitRefsUrl       string `json:"git_refs_url,omitempty"`
	GitTagsUrl       string `json:"git_tags_url,omitempty"`
	GitUrl           string `json:"git_url,omitempty"`
	HtmlUrl          string `json:"html_url,omitempty"`
	Id               int64  `json:"id,omitempty"`
	IssueCommentUrl  string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl   string `json:"issue_events_url,omitempty"`
	IssuesUrl        string `json:"issues_url,omitempty"`
	KeysUrl          string `json:"keys_url,omitempty"`
	LabelsUrl        string `json:"labels_url,omitempty"`
	LanguagesUrl     string `json:"languages_url,omitempty"`
	MergesUrl        string `json:"merges_url,omitempty"`
	MilestonesUrl    string `json:"milestones_url,omitempty"`
	Name             string `json:"name,omitempty"`
	NodeId           string `json:"node_id,omitempty"`
	NotificationsUrl string `json:"notifications_url,omitempty"`
	Owner            struct {
		CombinedCommitStatusRepositoryOwner
	} `json:"owner,omitempty"`
	Private         bool   `json:"private,omitempty"`
	PullsUrl        string `json:"pulls_url,omitempty"`
	ReleasesUrl     string `json:"releases_url,omitempty"`
	SshUrl          string `json:"ssh_url,omitempty"`
	StargazersUrl   string `json:"stargazers_url,omitempty"`
	StatusesUrl     string `json:"statuses_url,omitempty"`
	SubscribersUrl  string `json:"subscribers_url,omitempty"`
	SubscriptionUrl string `json:"subscription_url,omitempty"`
	TagsUrl         string `json:"tags_url,omitempty"`
	TeamsUrl        string `json:"teams_url,omitempty"`
	TreesUrl        string `json:"trees_url,omitempty"`
	Url             string `json:"url,omitempty"`
}

type CombinedCommitStatusRepositoryOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type CombinedCommitStatusStatus struct {
	AvatarUrl   string `json:"avatar_url"`
	Context     string `json:"context"`
	CreatedAt   string `json:"created_at"`
	Description string `json:"description"`
	Id          int64  `json:"id"`
	NodeId      string `json:"node_id"`
	State       string `json:"state"`
	TargetUrl   string `json:"target_url"`
	UpdatedAt   string `json:"updated_at"`
	Url         string `json:"url"`
}

type Commit struct {
	Author struct {
		CommitAuthor
	} `json:"author,omitempty"`
	CommentsUrl string `json:"comments_url,omitempty"`
	Commit      struct {
		CommitCommit
	} `json:"commit,omitempty"`
	Committer struct {
		CommitCommitter
	} `json:"committer,omitempty"`
	Files []struct {
		CommitFile
	} `json:"files,omitempty"`
	HtmlUrl string `json:"html_url,omitempty"`
	NodeId  string `json:"node_id,omitempty"`
	Parents []struct {
		CommitParent
	} `json:"parents,omitempty"`
	Sha   string `json:"sha,omitempty"`
	Stats struct {
		CommitStats
	} `json:"stats,omitempty"`
	Url string `json:"url,omitempty"`
}

type CommitActivity struct {
	Days  []json.Number `json:"days,omitempty"`
	Total int64         `json:"total,omitempty"`
	Week  int64         `json:"week,omitempty"`
}

type CommitAuthor struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type CommitComment struct {
	Body      string `json:"body,omitempty"`
	CommitId  string `json:"commit_id,omitempty"`
	CreatedAt string `json:"created_at,omitempty"`
	HtmlUrl   string `json:"html_url,omitempty"`
	Id        int64  `json:"id,omitempty"`
	Line      int64  `json:"line,omitempty"`
	NodeId    string `json:"node_id,omitempty"`
	Path      string `json:"path,omitempty"`
	Position  int64  `json:"position,omitempty"`
	UpdatedAt string `json:"updated_at,omitempty"`
	Url       string `json:"url,omitempty"`
	User      struct {
		CommitCommentUser
	} `json:"user,omitempty"`
}

type CommitCommentUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type CommitCommit struct {
	Author struct {
		CommitCommitAuthor
	} `json:"author,omitempty"`
	CommentCount int64 `json:"comment_count,omitempty"`
	Committer    struct {
		CommitCommitCommitter
	} `json:"committer,omitempty"`
	Message string `json:"message,omitempty"`
	Tree    struct {
		CommitCommitTree
	} `json:"tree,omitempty"`
	Url          string `json:"url,omitempty"`
	Verification struct {
		CommitCommitVerification
	} `json:"verification,omitempty"`
}

type CommitCommitAuthor struct {
	Date  string `json:"date,omitempty"`
	Email string `json:"email,omitempty"`
	Name  string `json:"name,omitempty"`
}

type CommitCommitCommitter struct {
	Date  string `json:"date,omitempty"`
	Email string `json:"email,omitempty"`
	Name  string `json:"name,omitempty"`
}

type CommitCommitTree struct {
	Sha string `json:"sha,omitempty"`
	Url string `json:"url,omitempty"`
}

type CommitCommitVerification struct {
	Payload   string `json:"payload,omitempty"`
	Reason    string `json:"reason,omitempty"`
	Signature string `json:"signature,omitempty"`
	Verified  bool   `json:"verified,omitempty"`
}

type CommitCommitter struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type CommitComparison struct {
	AheadBy    int64 `json:"ahead_by,omitempty"`
	BaseCommit struct {
		CommitComparisonBaseCommit
	} `json:"base_commit,omitempty"`
	BehindBy int64 `json:"behind_by,omitempty"`
	Commits  []struct {
		CommitComparisonCommit
	} `json:"commits,omitempty"`
	DiffUrl string `json:"diff_url,omitempty"`
	Files   []struct {
		CommitComparisonFile
	} `json:"files,omitempty"`
	HtmlUrl         string `json:"html_url,omitempty"`
	MergeBaseCommit struct {
		CommitComparisonMergeBaseCommit
	} `json:"merge_base_commit,omitempty"`
	PatchUrl     string `json:"patch_url,omitempty"`
	PermalinkUrl string `json:"permalink_url,omitempty"`
	Status       string `json:"status,omitempty"`
	TotalCommits int64  `json:"total_commits,omitempty"`
	Url          string `json:"url,omitempty"`
}

type CommitComparisonBaseCommit struct {
	Author struct {
		CommitComparisonBaseCommitAuthor
	} `json:"author,omitempty"`
	CommentsUrl string `json:"comments_url,omitempty"`
	Commit      struct {
		CommitComparisonBaseCommitCommit
	} `json:"commit,omitempty"`
	Committer struct {
		CommitComparisonBaseCommitCommitter
	} `json:"committer,omitempty"`
	HtmlUrl string `json:"html_url,omitempty"`
	NodeId  string `json:"node_id,omitempty"`
	Parents []struct {
		CommitComparisonBaseCommitParent
	} `json:"parents,omitempty"`
	Sha string `json:"sha,omitempty"`
	Url string `json:"url,omitempty"`
}

type CommitComparisonBaseCommitAuthor struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type CommitComparisonBaseCommitCommit struct {
	Author struct {
		CommitComparisonBaseCommitCommitAuthor
	} `json:"author,omitempty"`
	CommentCount int64 `json:"comment_count,omitempty"`
	Committer    struct {
		CommitComparisonBaseCommitCommitCommitter
	} `json:"committer,omitempty"`
	Message string `json:"message,omitempty"`
	Tree    struct {
		CommitComparisonBaseCommitCommitTree
	} `json:"tree,omitempty"`
	Url          string `json:"url,omitempty"`
	Verification struct {
		CommitComparisonBaseCommitCommitVerification
	} `json:"verification,omitempty"`
}

type CommitComparisonBaseCommitCommitAuthor struct {
	Date  string `json:"date,omitempty"`
	Email string `json:"email,omitempty"`
	Name  string `json:"name,omitempty"`
}

type CommitComparisonBaseCommitCommitCommitter struct {
	Date  string `json:"date,omitempty"`
	Email string `json:"email,omitempty"`
	Name  string `json:"name,omitempty"`
}

type CommitComparisonBaseCommitCommitTree struct {
	Sha string `json:"sha,omitempty"`
	Url string `json:"url,omitempty"`
}

type CommitComparisonBaseCommitCommitVerification struct {
	Payload   string `json:"payload,omitempty"`
	Reason    string `json:"reason,omitempty"`
	Signature string `json:"signature,omitempty"`
	Verified  bool   `json:"verified,omitempty"`
}

type CommitComparisonBaseCommitCommitter struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type CommitComparisonBaseCommitParent struct {
	Sha string `json:"sha,omitempty"`
	Url string `json:"url,omitempty"`
}

type CommitComparisonCommit struct {
	Author struct {
		CommitComparisonCommitAuthor
	} `json:"author,omitempty"`
	CommentsUrl string `json:"comments_url,omitempty"`
	Commit      struct {
		CommitComparisonCommitCommit
	} `json:"commit,omitempty"`
	Committer struct {
		CommitComparisonCommitCommitter
	} `json:"committer,omitempty"`
	HtmlUrl string `json:"html_url,omitempty"`
	NodeId  string `json:"node_id,omitempty"`
	Parents []struct {
		CommitComparisonCommitParent
	} `json:"parents,omitempty"`
	Sha string `json:"sha,omitempty"`
	Url string `json:"url,omitempty"`
}

type CommitComparisonCommitAuthor struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type CommitComparisonCommitCommit struct {
	Author struct {
		CommitComparisonCommitCommitAuthor
	} `json:"author,omitempty"`
	CommentCount int64 `json:"comment_count,omitempty"`
	Committer    struct {
		CommitComparisonCommitCommitCommitter
	} `json:"committer,omitempty"`
	Message string `json:"message,omitempty"`
	Tree    struct {
		CommitComparisonCommitCommitTree
	} `json:"tree,omitempty"`
	Url          string `json:"url,omitempty"`
	Verification struct {
		CommitComparisonCommitCommitVerification
	} `json:"verification,omitempty"`
}

type CommitComparisonCommitCommitAuthor struct {
	Date  string `json:"date,omitempty"`
	Email string `json:"email,omitempty"`
	Name  string `json:"name,omitempty"`
}

type CommitComparisonCommitCommitCommitter struct {
	Date  string `json:"date,omitempty"`
	Email string `json:"email,omitempty"`
	Name  string `json:"name,omitempty"`
}

type CommitComparisonCommitCommitTree struct {
	Sha string `json:"sha,omitempty"`
	Url string `json:"url,omitempty"`
}

type CommitComparisonCommitCommitVerification struct {
	Payload   string `json:"payload,omitempty"`
	Reason    string `json:"reason,omitempty"`
	Signature string `json:"signature,omitempty"`
	Verified  bool   `json:"verified,omitempty"`
}

type CommitComparisonCommitCommitter struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type CommitComparisonCommitParent struct {
	Sha string `json:"sha,omitempty"`
	Url string `json:"url,omitempty"`
}

type CommitComparisonFile struct {
	Additions   int64  `json:"additions,omitempty"`
	BlobUrl     string `json:"blob_url,omitempty"`
	Changes     int64  `json:"changes,omitempty"`
	ContentsUrl string `json:"contents_url,omitempty"`
	Deletions   int64  `json:"deletions,omitempty"`
	Filename    string `json:"filename,omitempty"`
	Patch       string `json:"patch,omitempty"`
	RawUrl      string `json:"raw_url,omitempty"`
	Sha         string `json:"sha,omitempty"`
	Status      string `json:"status,omitempty"`
}

type CommitComparisonMergeBaseCommit struct {
	Author struct {
		CommitComparisonMergeBaseCommitAuthor
	} `json:"author,omitempty"`
	CommentsUrl string `json:"comments_url,omitempty"`
	Commit      struct {
		CommitComparisonMergeBaseCommitCommit
	} `json:"commit,omitempty"`
	Committer struct {
		CommitComparisonMergeBaseCommitCommitter
	} `json:"committer,omitempty"`
	HtmlUrl string `json:"html_url,omitempty"`
	NodeId  string `json:"node_id,omitempty"`
	Parents []struct {
		CommitComparisonMergeBaseCommitParent
	} `json:"parents,omitempty"`
	Sha string `json:"sha,omitempty"`
	Url string `json:"url,omitempty"`
}

type CommitComparisonMergeBaseCommitAuthor struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type CommitComparisonMergeBaseCommitCommit struct {
	Author struct {
		CommitComparisonMergeBaseCommitCommitAuthor
	} `json:"author,omitempty"`
	CommentCount int64 `json:"comment_count,omitempty"`
	Committer    struct {
		CommitComparisonMergeBaseCommitCommitCommitter
	} `json:"committer,omitempty"`
	Message string `json:"message,omitempty"`
	Tree    struct {
		CommitComparisonMergeBaseCommitCommitTree
	} `json:"tree,omitempty"`
	Url          string `json:"url,omitempty"`
	Verification struct {
		CommitComparisonMergeBaseCommitCommitVerification
	} `json:"verification,omitempty"`
}

type CommitComparisonMergeBaseCommitCommitAuthor struct {
	Date  string `json:"date,omitempty"`
	Email string `json:"email,omitempty"`
	Name  string `json:"name,omitempty"`
}

type CommitComparisonMergeBaseCommitCommitCommitter struct {
	Date  string `json:"date,omitempty"`
	Email string `json:"email,omitempty"`
	Name  string `json:"name,omitempty"`
}

type CommitComparisonMergeBaseCommitCommitTree struct {
	Sha string `json:"sha,omitempty"`
	Url string `json:"url,omitempty"`
}

type CommitComparisonMergeBaseCommitCommitVerification struct {
	Payload   string `json:"payload,omitempty"`
	Reason    string `json:"reason,omitempty"`
	Signature string `json:"signature,omitempty"`
	Verified  bool   `json:"verified,omitempty"`
}

type CommitComparisonMergeBaseCommitCommitter struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type CommitComparisonMergeBaseCommitParent struct {
	Sha string `json:"sha,omitempty"`
	Url string `json:"url,omitempty"`
}

type CommitFile struct {
	Additions int64  `json:"additions,omitempty"`
	BlobUrl   string `json:"blob_url,omitempty"`
	Changes   int64  `json:"changes,omitempty"`
	Deletions int64  `json:"deletions,omitempty"`
	Filename  string `json:"filename,omitempty"`
	Patch     string `json:"patch,omitempty"`
	RawUrl    string `json:"raw_url,omitempty"`
	Status    string `json:"status,omitempty"`
}

type CommitParent struct {
	Sha string `json:"sha,omitempty"`
	Url string `json:"url,omitempty"`
}

type CommitSearchResultItem struct {
	Author struct {
		CommitSearchResultItemAuthor
	} `json:"author,omitempty"`
	CommentsUrl string `json:"comments_url,omitempty"`
	Commit      struct {
		CommitSearchResultItemCommit
	} `json:"commit,omitempty"`
	Committer struct {
		CommitSearchResultItemCommitter
	} `json:"committer,omitempty"`
	HtmlUrl string `json:"html_url,omitempty"`
	Parents []struct {
		CommitSearchResultItemParent
	} `json:"parents,omitempty"`
	Repository struct {
		CommitSearchResultItemRepository
	} `json:"repository,omitempty"`
	Score json.Number `json:"score,omitempty"`
	Sha   string      `json:"sha,omitempty"`
	Url   string      `json:"url,omitempty"`
}

type CommitSearchResultItemAuthor struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type CommitSearchResultItemCommit struct {
	Author struct {
		CommitSearchResultItemCommitAuthor
	} `json:"author,omitempty"`
	CommentCount int64 `json:"comment_count,omitempty"`
	Committer    struct {
		CommitSearchResultItemCommitCommitter
	} `json:"committer,omitempty"`
	Message string `json:"message,omitempty"`
	Tree    struct {
		CommitSearchResultItemCommitTree
	} `json:"tree,omitempty"`
	Url string `json:"url,omitempty"`
}

type CommitSearchResultItemCommitAuthor struct {
	Date  string `json:"date,omitempty"`
	Email string `json:"email,omitempty"`
	Name  string `json:"name,omitempty"`
}

type CommitSearchResultItemCommitCommitter struct {
	Date  string `json:"date,omitempty"`
	Email string `json:"email,omitempty"`
	Name  string `json:"name,omitempty"`
}

type CommitSearchResultItemCommitTree struct {
	Sha string `json:"sha,omitempty"`
	Url string `json:"url,omitempty"`
}

type CommitSearchResultItemCommitter struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type CommitSearchResultItemParent struct {
	HtmlUrl string `json:"html_url,omitempty"`
	Sha     string `json:"sha,omitempty"`
	Url     string `json:"url,omitempty"`
}

type CommitSearchResultItemRepository struct {
	ArchiveUrl       string `json:"archive_url,omitempty"`
	AssigneesUrl     string `json:"assignees_url,omitempty"`
	BlobsUrl         string `json:"blobs_url,omitempty"`
	BranchesUrl      string `json:"branches_url,omitempty"`
	CollaboratorsUrl string `json:"collaborators_url,omitempty"`
	CommentsUrl      string `json:"comments_url,omitempty"`
	CommitsUrl       string `json:"commits_url,omitempty"`
	CompareUrl       string `json:"compare_url,omitempty"`
	ContentsUrl      string `json:"contents_url,omitempty"`
	ContributorsUrl  string `json:"contributors_url,omitempty"`
	DeploymentsUrl   string `json:"deployments_url,omitempty"`
	Description      string `json:"description,omitempty"`
	DownloadsUrl     string `json:"downloads_url,omitempty"`
	EventsUrl        string `json:"events_url,omitempty"`
	Fork             bool   `json:"fork,omitempty"`
	ForksUrl         string `json:"forks_url,omitempty"`
	FullName         string `json:"full_name,omitempty"`
	GitCommitsUrl    string `json:"git_commits_url,omitempty"`
	GitRefsUrl       string `json:"git_refs_url,omitempty"`
	GitTagsUrl       string `json:"git_tags_url,omitempty"`
	HooksUrl         string `json:"hooks_url,omitempty"`
	HtmlUrl          string `json:"html_url,omitempty"`
	Id               int64  `json:"id,omitempty"`
	IssueCommentUrl  string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl   string `json:"issue_events_url,omitempty"`
	IssuesUrl        string `json:"issues_url,omitempty"`
	KeysUrl          string `json:"keys_url,omitempty"`
	LabelsUrl        string `json:"labels_url,omitempty"`
	LanguagesUrl     string `json:"languages_url,omitempty"`
	MergesUrl        string `json:"merges_url,omitempty"`
	MilestonesUrl    string `json:"milestones_url,omitempty"`
	Name             string `json:"name,omitempty"`
	NodeId           string `json:"node_id,omitempty"`
	NotificationsUrl string `json:"notifications_url,omitempty"`
	Owner            struct {
		CommitSearchResultItemRepositoryOwner
	} `json:"owner,omitempty"`
	Private         bool   `json:"private,omitempty"`
	PullsUrl        string `json:"pulls_url,omitempty"`
	ReleasesUrl     string `json:"releases_url,omitempty"`
	StargazersUrl   string `json:"stargazers_url,omitempty"`
	StatusesUrl     string `json:"statuses_url,omitempty"`
	SubscribersUrl  string `json:"subscribers_url,omitempty"`
	SubscriptionUrl string `json:"subscription_url,omitempty"`
	TagsUrl         string `json:"tags_url,omitempty"`
	TeamsUrl        string `json:"teams_url,omitempty"`
	TreesUrl        string `json:"trees_url,omitempty"`
	Url             string `json:"url,omitempty"`
}

type CommitSearchResultItemRepositoryOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type CommitStats struct {
	Additions int64 `json:"additions,omitempty"`
	Deletions int64 `json:"deletions,omitempty"`
	Total     int64 `json:"total,omitempty"`
}

type CommunityProfile struct {
	Description   string `json:"description,omitempty"`
	Documentation bool   `json:"documentation,omitempty"`
	Files         struct {
		CommunityProfileFiles
	} `json:"files,omitempty"`
	HealthPercentage json.Number `json:"health_percentage,omitempty"`
	UpdatedAt        string      `json:"updated_at,omitempty"`
}

type CommunityProfileFiles struct {
	CodeOfConduct struct {
		CommunityProfileFilesCodeOfConduct
	} `json:"code_of_conduct,omitempty"`
	Contributing struct {
		CommunityProfileFilesContributing
	} `json:"contributing,omitempty"`
	IssueTemplate struct {
		CommunityProfileFilesIssueTemplate
	} `json:"issue_template,omitempty"`
	License struct {
		CommunityProfileFilesLicense
	} `json:"license,omitempty"`
	PullRequestTemplate struct {
		CommunityProfileFilesPullRequestTemplate
	} `json:"pull_request_template,omitempty"`
	Readme struct {
		CommunityProfileFilesReadme
	} `json:"readme,omitempty"`
}

type CommunityProfileFilesCodeOfConduct struct {
	HtmlUrl string `json:"html_url,omitempty"`
	Key     string `json:"key,omitempty"`
	Name    string `json:"name,omitempty"`
	Url     string `json:"url,omitempty"`
}

type CommunityProfileFilesContributing struct {
	HtmlUrl string `json:"html_url,omitempty"`
	Url     string `json:"url,omitempty"`
}

type CommunityProfileFilesIssueTemplate struct {
	HtmlUrl string `json:"html_url,omitempty"`
	Url     string `json:"url,omitempty"`
}

type CommunityProfileFilesLicense struct {
	HtmlUrl string `json:"html_url,omitempty"`
	Key     string `json:"key,omitempty"`
	Name    string `json:"name,omitempty"`
	SpdxId  string `json:"spdx_id,omitempty"`
	Url     string `json:"url,omitempty"`
}

type CommunityProfileFilesPullRequestTemplate struct {
	HtmlUrl string `json:"html_url,omitempty"`
	Url     string `json:"url,omitempty"`
}

type CommunityProfileFilesReadme struct {
	HtmlUrl string `json:"html_url,omitempty"`
	Url     string `json:"url,omitempty"`
}

type ContentFile struct {
	Links struct {
		ContentFileLinks
	} `json:"_links,omitempty"`
	Content         string      `json:"content,omitempty"`
	DownloadUrl     string      `json:"download_url,omitempty"`
	Encoding        string      `json:"encoding,omitempty"`
	GitUrl          string      `json:"git_url,omitempty"`
	HtmlUrl         string      `json:"html_url,omitempty"`
	Name            string      `json:"name,omitempty"`
	Path            string      `json:"path,omitempty"`
	Sha             string      `json:"sha,omitempty"`
	Size            json.Number `json:"size,omitempty"`
	SubmoduleGitUrl string      `json:"submodule_git_url,omitempty"`
	Target          string      `json:"target,omitempty"`
	Type            string      `json:"type,omitempty"`
	Url             string      `json:"url,omitempty"`
}

type ContentFileLinks struct {
	Git  string `json:"git,omitempty"`
	Html string `json:"html,omitempty"`
	Self string `json:"self,omitempty"`
}

type ContentReferenceAttachment struct {
	Body  string `json:"body,omitempty"`
	Id    int64  `json:"id,omitempty"`
	Title string `json:"title,omitempty"`
}

type ContentTraffic struct {
	Count   int64  `json:"count,omitempty"`
	Path    string `json:"path,omitempty"`
	Title   string `json:"title,omitempty"`
	Uniques int64  `json:"uniques,omitempty"`
}

type Contributor struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	Contributions     int64  `json:"contributions,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type ContributorActivity struct {
	Author struct {
		ContributorActivityAuthor
	} `json:"author,omitempty"`
	Total int64 `json:"total,omitempty"`
	Weeks []struct {
		ContributorActivityWeek
	} `json:"weeks,omitempty"`
}

type ContributorActivityAuthor struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type ContributorActivityWeek struct {
	A json.Number `json:"a,omitempty"`
	C json.Number `json:"c,omitempty"`
	D json.Number `json:"d,omitempty"`
	W string      `json:"w,omitempty"`
}

type CredentialAuthorization struct {
	CredentialAuthorizedAt string   `json:"credential_authorized_at,omitempty"`
	CredentialId           string   `json:"credential_id,omitempty"`
	CredentialType         string   `json:"credential_type,omitempty"`
	Login                  string   `json:"login,omitempty"`
	Scopes                 []string `json:"scopes,omitempty"`
	TokenLastEight         string   `json:"token_last_eight,omitempty"`
}

type DeployKey struct {
	CreatedAt string `json:"created_at,omitempty"`
	Id        int64  `json:"id,omitempty"`
	Key       string `json:"key,omitempty"`
	ReadOnly  bool   `json:"read_only,omitempty"`
	Title     string `json:"title,omitempty"`
	Url       string `json:"url,omitempty"`
	Verified  bool   `json:"verified,omitempty"`
}

type Deployment struct {
	CreatedAt string `json:"created_at,omitempty"`
	Creator   struct {
		DeploymentCreator
	} `json:"creator,omitempty"`
	Description         string `json:"description,omitempty"`
	Environment         string `json:"environment,omitempty"`
	Id                  int64  `json:"id,omitempty"`
	NodeId              string `json:"node_id,omitempty"`
	OriginalEnvironment string `json:"original_environment,omitempty"`
	Payload             struct {
		DeploymentPayload
	} `json:"payload,omitempty"`
	ProductionEnvironment bool   `json:"production_environment,omitempty"`
	Ref                   string `json:"ref,omitempty"`
	RepositoryUrl         string `json:"repository_url,omitempty"`
	Sha                   string `json:"sha,omitempty"`
	StatusesUrl           string `json:"statuses_url,omitempty"`
	Task                  string `json:"task,omitempty"`
	TransientEnvironment  bool   `json:"transient_environment,omitempty"`
	UpdatedAt             string `json:"updated_at,omitempty"`
	Url                   string `json:"url,omitempty"`
}

type DeploymentCreator struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type DeploymentPayload struct {
	Deploy string `json:"deploy,omitempty"`
}

type DeploymentStatus struct {
	CreatedAt string `json:"created_at,omitempty"`
	Creator   struct {
		DeploymentStatusCreator
	} `json:"creator,omitempty"`
	DeploymentUrl  string `json:"deployment_url,omitempty"`
	Description    string `json:"description,omitempty"`
	Environment    string `json:"environment,omitempty"`
	EnvironmentUrl string `json:"environment_url,omitempty"`
	Id             int64  `json:"id,omitempty"`
	LogUrl         string `json:"log_url,omitempty"`
	NodeId         string `json:"node_id,omitempty"`
	RepositoryUrl  string `json:"repository_url,omitempty"`
	State          string `json:"state,omitempty"`
	TargetUrl      string `json:"target_url,omitempty"`
	UpdatedAt      string `json:"updated_at,omitempty"`
	Url            string `json:"url,omitempty"`
}

type DeploymentStatusCreator struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type DiffEntry struct {
	Additions   int64  `json:"additions,omitempty"`
	BlobUrl     string `json:"blob_url,omitempty"`
	Changes     int64  `json:"changes,omitempty"`
	ContentsUrl string `json:"contents_url,omitempty"`
	Deletions   int64  `json:"deletions,omitempty"`
	Filename    string `json:"filename,omitempty"`
	Patch       string `json:"patch,omitempty"`
	RawUrl      string `json:"raw_url,omitempty"`
	Sha         string `json:"sha,omitempty"`
	Status      string `json:"status,omitempty"`
}

type Email struct {
	Email      string `json:"email,omitempty"`
	Primary    bool   `json:"primary,omitempty"`
	Verified   bool   `json:"verified,omitempty"`
	Visibility string `json:"visibility,omitempty"`
}

type Feed struct {
	Links struct {
		FeedLinks
	} `json:"_links,omitempty"`
	CurrentUserActorUrl         string   `json:"current_user_actor_url,omitempty"`
	CurrentUserOrganizationUrl  string   `json:"current_user_organization_url,omitempty"`
	CurrentUserOrganizationUrls []string `json:"current_user_organization_urls,omitempty"`
	CurrentUserPublicUrl        string   `json:"current_user_public_url,omitempty"`
	CurrentUserUrl              string   `json:"current_user_url,omitempty"`
	SecurityAdvisoriesUrl       string   `json:"security_advisories_url,omitempty"`
	TimelineUrl                 string   `json:"timeline_url,omitempty"`
	UserUrl                     string   `json:"user_url,omitempty"`
}

type FeedLinks struct {
	CurrentUser struct {
		FeedLinksCurrentUser
	} `json:"current_user,omitempty"`
	CurrentUserActor struct {
		FeedLinksCurrentUserActor
	} `json:"current_user_actor,omitempty"`
	CurrentUserOrganization struct {
		FeedLinksCurrentUserOrganization
	} `json:"current_user_organization,omitempty"`
	CurrentUserOrganizations []struct {
		FeedLinksCurrentUserOrganization
	} `json:"current_user_organizations,omitempty"`
	CurrentUserPublic struct {
		FeedLinksCurrentUserPublic
	} `json:"current_user_public,omitempty"`
	SecurityAdvisories struct {
		FeedLinksSecurityAdvisories
	} `json:"security_advisories,omitempty"`
	Timeline struct {
		FeedLinksTimeline
	} `json:"timeline,omitempty"`
	User struct {
		FeedLinksUser
	} `json:"user,omitempty"`
}

type FeedLinksCurrentUser struct {
	Href string `json:"href,omitempty"`
	Type string `json:"type,omitempty"`
}

type FeedLinksCurrentUserActor struct {
	Href string `json:"href,omitempty"`
	Type string `json:"type,omitempty"`
}

type FeedLinksCurrentUserOrganization struct {
	Href string `json:"href,omitempty"`
	Type string `json:"type,omitempty"`
}

type FeedLinksCurrentUserPublic struct {
	Href string `json:"href,omitempty"`
	Type string `json:"type,omitempty"`
}

type FeedLinksSecurityAdvisories struct {
	Href string `json:"href,omitempty"`
	Type string `json:"type,omitempty"`
}

type FeedLinksTimeline struct {
	Href string `json:"href,omitempty"`
	Type string `json:"type,omitempty"`
}

type FeedLinksUser struct {
	Href string `json:"href,omitempty"`
	Type string `json:"type,omitempty"`
}

type FileCommit struct {
	Commit struct {
		FileCommitCommit
	} `json:"commit,omitempty"`
	Content struct {
		FileCommitContent
	} `json:"content,omitempty"`
}

type FileCommit2 struct {
	Commit struct {
		FileCommit2Commit
	} `json:"commit,omitempty"`
	Content interface{} `json:"content,omitempty"`
}

type FileCommit2Commit struct {
	Author struct {
		FileCommit2CommitAuthor
	} `json:"author,omitempty"`
	Committer struct {
		FileCommit2CommitCommitter
	} `json:"committer,omitempty"`
	HtmlUrl string `json:"html_url,omitempty"`
	Message string `json:"message,omitempty"`
	NodeId  string `json:"node_id,omitempty"`
	Parents []struct {
		FileCommit2CommitParent
	} `json:"parents,omitempty"`
	Sha  string `json:"sha,omitempty"`
	Tree struct {
		FileCommit2CommitTree
	} `json:"tree,omitempty"`
	Url          string `json:"url,omitempty"`
	Verification struct {
		FileCommit2CommitVerification
	} `json:"verification,omitempty"`
}

type FileCommit2CommitAuthor struct {
	Date  string `json:"date,omitempty"`
	Email string `json:"email,omitempty"`
	Name  string `json:"name,omitempty"`
}

type FileCommit2CommitCommitter struct {
	Date  string `json:"date,omitempty"`
	Email string `json:"email,omitempty"`
	Name  string `json:"name,omitempty"`
}

type FileCommit2CommitParent struct {
	HtmlUrl string `json:"html_url,omitempty"`
	Sha     string `json:"sha,omitempty"`
	Url     string `json:"url,omitempty"`
}

type FileCommit2CommitTree struct {
	Sha string `json:"sha,omitempty"`
	Url string `json:"url,omitempty"`
}

type FileCommit2CommitVerification struct {
	Payload   string `json:"payload,omitempty"`
	Reason    string `json:"reason,omitempty"`
	Signature string `json:"signature,omitempty"`
	Verified  bool   `json:"verified,omitempty"`
}

type FileCommitCommit struct {
	Author struct {
		FileCommitCommitAuthor
	} `json:"author,omitempty"`
	Committer struct {
		FileCommitCommitCommitter
	} `json:"committer,omitempty"`
	HtmlUrl string `json:"html_url,omitempty"`
	Message string `json:"message,omitempty"`
	NodeId  string `json:"node_id,omitempty"`
	Parents []struct {
		FileCommitCommitParent
	} `json:"parents,omitempty"`
	Sha  string `json:"sha,omitempty"`
	Tree struct {
		FileCommitCommitTree
	} `json:"tree,omitempty"`
	Url          string `json:"url,omitempty"`
	Verification struct {
		FileCommitCommitVerification
	} `json:"verification,omitempty"`
}

type FileCommitCommitAuthor struct {
	Date  string `json:"date,omitempty"`
	Email string `json:"email,omitempty"`
	Name  string `json:"name,omitempty"`
}

type FileCommitCommitCommitter struct {
	Date  string `json:"date,omitempty"`
	Email string `json:"email,omitempty"`
	Name  string `json:"name,omitempty"`
}

type FileCommitCommitParent struct {
	HtmlUrl string `json:"html_url,omitempty"`
	Sha     string `json:"sha,omitempty"`
	Url     string `json:"url,omitempty"`
}

type FileCommitCommitTree struct {
	Sha string `json:"sha,omitempty"`
	Url string `json:"url,omitempty"`
}

type FileCommitCommitVerification struct {
	Payload   string `json:"payload,omitempty"`
	Reason    string `json:"reason,omitempty"`
	Signature string `json:"signature,omitempty"`
	Verified  bool   `json:"verified,omitempty"`
}

type FileCommitContent struct {
	Links struct {
		FileCommitContentLinks
	} `json:"_links,omitempty"`
	DownloadUrl string      `json:"download_url,omitempty"`
	GitUrl      string      `json:"git_url,omitempty"`
	HtmlUrl     string      `json:"html_url,omitempty"`
	Name        string      `json:"name,omitempty"`
	Path        string      `json:"path,omitempty"`
	Sha         string      `json:"sha,omitempty"`
	Size        json.Number `json:"size,omitempty"`
	Type        string      `json:"type,omitempty"`
	Url         string      `json:"url,omitempty"`
}

type FileCommitContentLinks struct {
	Git  string `json:"git,omitempty"`
	Html string `json:"html,omitempty"`
	Self string `json:"self,omitempty"`
}

type FullRepository struct {
	AllowMergeCommit bool   `json:"allow_merge_commit,omitempty"`
	AllowRebaseMerge bool   `json:"allow_rebase_merge,omitempty"`
	AllowSquashMerge bool   `json:"allow_squash_merge,omitempty"`
	ArchiveUrl       string `json:"archive_url,omitempty"`
	Archived         bool   `json:"archived,omitempty"`
	AssigneesUrl     string `json:"assignees_url,omitempty"`
	BlobsUrl         string `json:"blobs_url,omitempty"`
	BranchesUrl      string `json:"branches_url,omitempty"`
	CloneUrl         string `json:"clone_url,omitempty"`
	CodeOfConduct    struct {
		FullRepositoryCodeOfConduct
	} `json:"code_of_conduct,omitempty"`
	CollaboratorsUrl    string `json:"collaborators_url,omitempty"`
	CommentsUrl         string `json:"comments_url,omitempty"`
	CommitsUrl          string `json:"commits_url,omitempty"`
	CompareUrl          string `json:"compare_url,omitempty"`
	ContentsUrl         string `json:"contents_url,omitempty"`
	ContributorsUrl     string `json:"contributors_url,omitempty"`
	CreatedAt           string `json:"created_at,omitempty"`
	DefaultBranch       string `json:"default_branch,omitempty"`
	DeleteBranchOnMerge bool   `json:"delete_branch_on_merge,omitempty"`
	DeploymentsUrl      string `json:"deployments_url,omitempty"`
	Description         string `json:"description,omitempty"`
	Disabled            bool   `json:"disabled,omitempty"`
	DownloadsUrl        string `json:"downloads_url,omitempty"`
	EventsUrl           string `json:"events_url,omitempty"`
	Fork                bool   `json:"fork,omitempty"`
	ForksCount          int64  `json:"forks_count,omitempty"`
	ForksUrl            string `json:"forks_url,omitempty"`
	FullName            string `json:"full_name,omitempty"`
	GitCommitsUrl       string `json:"git_commits_url,omitempty"`
	GitRefsUrl          string `json:"git_refs_url,omitempty"`
	GitTagsUrl          string `json:"git_tags_url,omitempty"`
	GitUrl              string `json:"git_url,omitempty"`
	HasDownloads        bool   `json:"has_downloads,omitempty"`
	HasIssues           bool   `json:"has_issues,omitempty"`
	HasPages            bool   `json:"has_pages,omitempty"`
	HasProjects         bool   `json:"has_projects,omitempty"`
	HasWiki             bool   `json:"has_wiki,omitempty"`
	Homepage            string `json:"homepage,omitempty"`
	HooksUrl            string `json:"hooks_url,omitempty"`
	HtmlUrl             string `json:"html_url,omitempty"`
	Id                  int64  `json:"id,omitempty"`
	IsTemplate          bool   `json:"is_template,omitempty"`
	IssueCommentUrl     string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl      string `json:"issue_events_url,omitempty"`
	IssuesUrl           string `json:"issues_url,omitempty"`
	KeysUrl             string `json:"keys_url,omitempty"`
	LabelsUrl           string `json:"labels_url,omitempty"`
	Language            string `json:"language,omitempty"`
	LanguagesUrl        string `json:"languages_url,omitempty"`
	License             struct {
		FullRepositoryLicense
	} `json:"license,omitempty"`
	MergesUrl        string `json:"merges_url,omitempty"`
	MilestonesUrl    string `json:"milestones_url,omitempty"`
	MirrorUrl        string `json:"mirror_url,omitempty"`
	Name             string `json:"name,omitempty"`
	NetworkCount     int64  `json:"network_count,omitempty"`
	NodeId           string `json:"node_id,omitempty"`
	NotificationsUrl string `json:"notifications_url,omitempty"`
	OpenIssuesCount  int64  `json:"open_issues_count,omitempty"`
	Organization     struct {
		FullRepositoryOrganization
	} `json:"organization,omitempty"`
	Owner struct {
		FullRepositoryOwner
	} `json:"owner,omitempty"`
	Parent struct {
		FullRepositoryParent
	} `json:"parent,omitempty"`
	Permissions struct {
		FullRepositoryPermissions
	} `json:"permissions,omitempty"`
	Private     bool        `json:"private,omitempty"`
	PullsUrl    string      `json:"pulls_url,omitempty"`
	PushedAt    string      `json:"pushed_at,omitempty"`
	ReleasesUrl string      `json:"releases_url,omitempty"`
	Size        json.Number `json:"size,omitempty"`
	Source      struct {
		FullRepositorySource
	} `json:"source,omitempty"`
	SshUrl             string   `json:"ssh_url,omitempty"`
	StargazersCount    int64    `json:"stargazers_count,omitempty"`
	StargazersUrl      string   `json:"stargazers_url,omitempty"`
	StatusesUrl        string   `json:"statuses_url,omitempty"`
	SubscribersCount   int64    `json:"subscribers_count,omitempty"`
	SubscribersUrl     string   `json:"subscribers_url,omitempty"`
	SubscriptionUrl    string   `json:"subscription_url,omitempty"`
	SvnUrl             string   `json:"svn_url,omitempty"`
	TagsUrl            string   `json:"tags_url,omitempty"`
	TeamsUrl           string   `json:"teams_url,omitempty"`
	TempCloneToken     string   `json:"temp_clone_token,omitempty"`
	TemplateRepository string   `json:"template_repository,omitempty"`
	Topics             []string `json:"topics,omitempty"`
	TreesUrl           string   `json:"trees_url,omitempty"`
	UpdatedAt          string   `json:"updated_at,omitempty"`
	Url                string   `json:"url,omitempty"`
	Visibility         string   `json:"visibility,omitempty"`
	WatchersCount      int64    `json:"watchers_count,omitempty"`
}

type FullRepository2 struct {
	AllowMergeCommit    bool   `json:"allow_merge_commit,omitempty"`
	AllowRebaseMerge    bool   `json:"allow_rebase_merge,omitempty"`
	AllowSquashMerge    bool   `json:"allow_squash_merge,omitempty"`
	ArchiveUrl          string `json:"archive_url,omitempty"`
	Archived            bool   `json:"archived,omitempty"`
	AssigneesUrl        string `json:"assignees_url,omitempty"`
	BlobsUrl            string `json:"blobs_url,omitempty"`
	BranchesUrl         string `json:"branches_url,omitempty"`
	CloneUrl            string `json:"clone_url,omitempty"`
	CollaboratorsUrl    string `json:"collaborators_url,omitempty"`
	CommentsUrl         string `json:"comments_url,omitempty"`
	CommitsUrl          string `json:"commits_url,omitempty"`
	CompareUrl          string `json:"compare_url,omitempty"`
	ContentsUrl         string `json:"contents_url,omitempty"`
	ContributorsUrl     string `json:"contributors_url,omitempty"`
	CreatedAt           string `json:"created_at,omitempty"`
	DefaultBranch       string `json:"default_branch,omitempty"`
	DeleteBranchOnMerge bool   `json:"delete_branch_on_merge,omitempty"`
	DeploymentsUrl      string `json:"deployments_url,omitempty"`
	Description         string `json:"description,omitempty"`
	Disabled            bool   `json:"disabled,omitempty"`
	DownloadsUrl        string `json:"downloads_url,omitempty"`
	EventsUrl           string `json:"events_url,omitempty"`
	Fork                bool   `json:"fork,omitempty"`
	ForksCount          int64  `json:"forks_count,omitempty"`
	ForksUrl            string `json:"forks_url,omitempty"`
	FullName            string `json:"full_name,omitempty"`
	GitCommitsUrl       string `json:"git_commits_url,omitempty"`
	GitRefsUrl          string `json:"git_refs_url,omitempty"`
	GitTagsUrl          string `json:"git_tags_url,omitempty"`
	GitUrl              string `json:"git_url,omitempty"`
	HasDownloads        bool   `json:"has_downloads,omitempty"`
	HasIssues           bool   `json:"has_issues,omitempty"`
	HasPages            bool   `json:"has_pages,omitempty"`
	HasProjects         bool   `json:"has_projects,omitempty"`
	HasWiki             bool   `json:"has_wiki,omitempty"`
	Homepage            string `json:"homepage,omitempty"`
	HooksUrl            string `json:"hooks_url,omitempty"`
	HtmlUrl             string `json:"html_url,omitempty"`
	Id                  int64  `json:"id,omitempty"`
	IsTemplate          bool   `json:"is_template,omitempty"`
	IssueCommentUrl     string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl      string `json:"issue_events_url,omitempty"`
	IssuesUrl           string `json:"issues_url,omitempty"`
	KeysUrl             string `json:"keys_url,omitempty"`
	LabelsUrl           string `json:"labels_url,omitempty"`
	Language            string `json:"language,omitempty"`
	LanguagesUrl        string `json:"languages_url,omitempty"`
	MergesUrl           string `json:"merges_url,omitempty"`
	MilestonesUrl       string `json:"milestones_url,omitempty"`
	MirrorUrl           string `json:"mirror_url,omitempty"`
	Name                string `json:"name,omitempty"`
	NetworkCount        int64  `json:"network_count,omitempty"`
	NodeId              string `json:"node_id,omitempty"`
	NotificationsUrl    string `json:"notifications_url,omitempty"`
	OpenIssuesCount     int64  `json:"open_issues_count,omitempty"`
	Organization        struct {
		FullRepository2Organization
	} `json:"organization,omitempty"`
	Owner struct {
		FullRepository2Owner
	} `json:"owner,omitempty"`
	Parent struct {
		FullRepository2Parent
	} `json:"parent,omitempty"`
	Permissions struct {
		FullRepository2Permissions
	} `json:"permissions,omitempty"`
	Private     bool        `json:"private,omitempty"`
	PullsUrl    string      `json:"pulls_url,omitempty"`
	PushedAt    string      `json:"pushed_at,omitempty"`
	ReleasesUrl string      `json:"releases_url,omitempty"`
	Size        json.Number `json:"size,omitempty"`
	Source      struct {
		FullRepository2Source
	} `json:"source,omitempty"`
	SshUrl             string      `json:"ssh_url,omitempty"`
	StargazersCount    int64       `json:"stargazers_count,omitempty"`
	StargazersUrl      string      `json:"stargazers_url,omitempty"`
	StatusesUrl        string      `json:"statuses_url,omitempty"`
	SubscribersCount   int64       `json:"subscribers_count,omitempty"`
	SubscribersUrl     string      `json:"subscribers_url,omitempty"`
	SubscriptionUrl    string      `json:"subscription_url,omitempty"`
	SvnUrl             string      `json:"svn_url,omitempty"`
	TagsUrl            string      `json:"tags_url,omitempty"`
	TeamsUrl           string      `json:"teams_url,omitempty"`
	TempCloneToken     string      `json:"temp_clone_token,omitempty"`
	TemplateRepository interface{} `json:"template_repository,omitempty"`
	Topics             []string    `json:"topics,omitempty"`
	TreesUrl           string      `json:"trees_url,omitempty"`
	UpdatedAt          string      `json:"updated_at,omitempty"`
	Url                string      `json:"url,omitempty"`
	Visibility         string      `json:"visibility,omitempty"`
	WatchersCount      int64       `json:"watchers_count,omitempty"`
}

type FullRepository2Organization struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type FullRepository2Owner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type FullRepository2Parent struct {
	AllowMergeCommit    bool   `json:"allow_merge_commit,omitempty"`
	AllowRebaseMerge    bool   `json:"allow_rebase_merge,omitempty"`
	AllowSquashMerge    bool   `json:"allow_squash_merge,omitempty"`
	ArchiveUrl          string `json:"archive_url,omitempty"`
	Archived            bool   `json:"archived,omitempty"`
	AssigneesUrl        string `json:"assignees_url,omitempty"`
	BlobsUrl            string `json:"blobs_url,omitempty"`
	BranchesUrl         string `json:"branches_url,omitempty"`
	CloneUrl            string `json:"clone_url,omitempty"`
	CollaboratorsUrl    string `json:"collaborators_url,omitempty"`
	CommentsUrl         string `json:"comments_url,omitempty"`
	CommitsUrl          string `json:"commits_url,omitempty"`
	CompareUrl          string `json:"compare_url,omitempty"`
	ContentsUrl         string `json:"contents_url,omitempty"`
	ContributorsUrl     string `json:"contributors_url,omitempty"`
	CreatedAt           string `json:"created_at,omitempty"`
	DefaultBranch       string `json:"default_branch,omitempty"`
	DeleteBranchOnMerge bool   `json:"delete_branch_on_merge,omitempty"`
	DeploymentsUrl      string `json:"deployments_url,omitempty"`
	Description         string `json:"description,omitempty"`
	Disabled            bool   `json:"disabled,omitempty"`
	DownloadsUrl        string `json:"downloads_url,omitempty"`
	EventsUrl           string `json:"events_url,omitempty"`
	Fork                bool   `json:"fork,omitempty"`
	ForksCount          int64  `json:"forks_count,omitempty"`
	ForksUrl            string `json:"forks_url,omitempty"`
	FullName            string `json:"full_name,omitempty"`
	GitCommitsUrl       string `json:"git_commits_url,omitempty"`
	GitRefsUrl          string `json:"git_refs_url,omitempty"`
	GitTagsUrl          string `json:"git_tags_url,omitempty"`
	GitUrl              string `json:"git_url,omitempty"`
	HasDownloads        bool   `json:"has_downloads,omitempty"`
	HasIssues           bool   `json:"has_issues,omitempty"`
	HasPages            bool   `json:"has_pages,omitempty"`
	HasProjects         bool   `json:"has_projects,omitempty"`
	HasWiki             bool   `json:"has_wiki,omitempty"`
	Homepage            string `json:"homepage,omitempty"`
	HooksUrl            string `json:"hooks_url,omitempty"`
	HtmlUrl             string `json:"html_url,omitempty"`
	Id                  int64  `json:"id,omitempty"`
	IsTemplate          bool   `json:"is_template,omitempty"`
	IssueCommentUrl     string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl      string `json:"issue_events_url,omitempty"`
	IssuesUrl           string `json:"issues_url,omitempty"`
	KeysUrl             string `json:"keys_url,omitempty"`
	LabelsUrl           string `json:"labels_url,omitempty"`
	Language            string `json:"language,omitempty"`
	LanguagesUrl        string `json:"languages_url,omitempty"`
	MergesUrl           string `json:"merges_url,omitempty"`
	MilestonesUrl       string `json:"milestones_url,omitempty"`
	MirrorUrl           string `json:"mirror_url,omitempty"`
	Name                string `json:"name,omitempty"`
	NetworkCount        int64  `json:"network_count,omitempty"`
	NodeId              string `json:"node_id,omitempty"`
	NotificationsUrl    string `json:"notifications_url,omitempty"`
	OpenIssuesCount     int64  `json:"open_issues_count,omitempty"`
	Owner               struct {
		FullRepository2ParentOwner
	} `json:"owner,omitempty"`
	Permissions struct {
		FullRepository2ParentPermissions
	} `json:"permissions,omitempty"`
	Private            bool        `json:"private,omitempty"`
	PullsUrl           string      `json:"pulls_url,omitempty"`
	PushedAt           string      `json:"pushed_at,omitempty"`
	ReleasesUrl        string      `json:"releases_url,omitempty"`
	Size               json.Number `json:"size,omitempty"`
	SshUrl             string      `json:"ssh_url,omitempty"`
	StargazersCount    int64       `json:"stargazers_count,omitempty"`
	StargazersUrl      string      `json:"stargazers_url,omitempty"`
	StatusesUrl        string      `json:"statuses_url,omitempty"`
	SubscribersCount   int64       `json:"subscribers_count,omitempty"`
	SubscribersUrl     string      `json:"subscribers_url,omitempty"`
	SubscriptionUrl    string      `json:"subscription_url,omitempty"`
	SvnUrl             string      `json:"svn_url,omitempty"`
	TagsUrl            string      `json:"tags_url,omitempty"`
	TeamsUrl           string      `json:"teams_url,omitempty"`
	TempCloneToken     string      `json:"temp_clone_token,omitempty"`
	TemplateRepository interface{} `json:"template_repository,omitempty"`
	Topics             []string    `json:"topics,omitempty"`
	TreesUrl           string      `json:"trees_url,omitempty"`
	UpdatedAt          string      `json:"updated_at,omitempty"`
	Url                string      `json:"url,omitempty"`
	Visibility         string      `json:"visibility,omitempty"`
	WatchersCount      int64       `json:"watchers_count,omitempty"`
}

type FullRepository2ParentOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type FullRepository2ParentPermissions struct {
	Admin bool `json:"admin,omitempty"`
	Pull  bool `json:"pull,omitempty"`
	Push  bool `json:"push,omitempty"`
}

type FullRepository2Permissions struct {
	Admin    bool `json:"admin,omitempty"`
	Maintain bool `json:"maintain,omitempty"`
	Pull     bool `json:"pull,omitempty"`
	Push     bool `json:"push,omitempty"`
	Triage   bool `json:"triage,omitempty"`
}

type FullRepository2Source struct {
	AllowMergeCommit    bool   `json:"allow_merge_commit,omitempty"`
	AllowRebaseMerge    bool   `json:"allow_rebase_merge,omitempty"`
	AllowSquashMerge    bool   `json:"allow_squash_merge,omitempty"`
	ArchiveUrl          string `json:"archive_url,omitempty"`
	Archived            bool   `json:"archived,omitempty"`
	AssigneesUrl        string `json:"assignees_url,omitempty"`
	BlobsUrl            string `json:"blobs_url,omitempty"`
	BranchesUrl         string `json:"branches_url,omitempty"`
	CloneUrl            string `json:"clone_url,omitempty"`
	CollaboratorsUrl    string `json:"collaborators_url,omitempty"`
	CommentsUrl         string `json:"comments_url,omitempty"`
	CommitsUrl          string `json:"commits_url,omitempty"`
	CompareUrl          string `json:"compare_url,omitempty"`
	ContentsUrl         string `json:"contents_url,omitempty"`
	ContributorsUrl     string `json:"contributors_url,omitempty"`
	CreatedAt           string `json:"created_at,omitempty"`
	DefaultBranch       string `json:"default_branch,omitempty"`
	DeleteBranchOnMerge bool   `json:"delete_branch_on_merge,omitempty"`
	DeploymentsUrl      string `json:"deployments_url,omitempty"`
	Description         string `json:"description,omitempty"`
	Disabled            bool   `json:"disabled,omitempty"`
	DownloadsUrl        string `json:"downloads_url,omitempty"`
	EventsUrl           string `json:"events_url,omitempty"`
	Fork                bool   `json:"fork,omitempty"`
	ForksCount          int64  `json:"forks_count,omitempty"`
	ForksUrl            string `json:"forks_url,omitempty"`
	FullName            string `json:"full_name,omitempty"`
	GitCommitsUrl       string `json:"git_commits_url,omitempty"`
	GitRefsUrl          string `json:"git_refs_url,omitempty"`
	GitTagsUrl          string `json:"git_tags_url,omitempty"`
	GitUrl              string `json:"git_url,omitempty"`
	HasDownloads        bool   `json:"has_downloads,omitempty"`
	HasIssues           bool   `json:"has_issues,omitempty"`
	HasPages            bool   `json:"has_pages,omitempty"`
	HasProjects         bool   `json:"has_projects,omitempty"`
	HasWiki             bool   `json:"has_wiki,omitempty"`
	Homepage            string `json:"homepage,omitempty"`
	HooksUrl            string `json:"hooks_url,omitempty"`
	HtmlUrl             string `json:"html_url,omitempty"`
	Id                  int64  `json:"id,omitempty"`
	IsTemplate          bool   `json:"is_template,omitempty"`
	IssueCommentUrl     string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl      string `json:"issue_events_url,omitempty"`
	IssuesUrl           string `json:"issues_url,omitempty"`
	KeysUrl             string `json:"keys_url,omitempty"`
	LabelsUrl           string `json:"labels_url,omitempty"`
	Language            string `json:"language,omitempty"`
	LanguagesUrl        string `json:"languages_url,omitempty"`
	MergesUrl           string `json:"merges_url,omitempty"`
	MilestonesUrl       string `json:"milestones_url,omitempty"`
	MirrorUrl           string `json:"mirror_url,omitempty"`
	Name                string `json:"name,omitempty"`
	NetworkCount        int64  `json:"network_count,omitempty"`
	NodeId              string `json:"node_id,omitempty"`
	NotificationsUrl    string `json:"notifications_url,omitempty"`
	OpenIssuesCount     int64  `json:"open_issues_count,omitempty"`
	Owner               struct {
		FullRepository2SourceOwner
	} `json:"owner,omitempty"`
	Permissions struct {
		FullRepository2SourcePermissions
	} `json:"permissions,omitempty"`
	Private            bool        `json:"private,omitempty"`
	PullsUrl           string      `json:"pulls_url,omitempty"`
	PushedAt           string      `json:"pushed_at,omitempty"`
	ReleasesUrl        string      `json:"releases_url,omitempty"`
	Size               json.Number `json:"size,omitempty"`
	SshUrl             string      `json:"ssh_url,omitempty"`
	StargazersCount    int64       `json:"stargazers_count,omitempty"`
	StargazersUrl      string      `json:"stargazers_url,omitempty"`
	StatusesUrl        string      `json:"statuses_url,omitempty"`
	SubscribersCount   int64       `json:"subscribers_count,omitempty"`
	SubscribersUrl     string      `json:"subscribers_url,omitempty"`
	SubscriptionUrl    string      `json:"subscription_url,omitempty"`
	SvnUrl             string      `json:"svn_url,omitempty"`
	TagsUrl            string      `json:"tags_url,omitempty"`
	TeamsUrl           string      `json:"teams_url,omitempty"`
	TempCloneToken     string      `json:"temp_clone_token,omitempty"`
	TemplateRepository interface{} `json:"template_repository,omitempty"`
	Topics             []string    `json:"topics,omitempty"`
	TreesUrl           string      `json:"trees_url,omitempty"`
	UpdatedAt          string      `json:"updated_at,omitempty"`
	Url                string      `json:"url,omitempty"`
	Visibility         string      `json:"visibility,omitempty"`
	WatchersCount      int64       `json:"watchers_count,omitempty"`
}

type FullRepository2SourceOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type FullRepository2SourcePermissions struct {
	Admin bool `json:"admin,omitempty"`
	Pull  bool `json:"pull,omitempty"`
	Push  bool `json:"push,omitempty"`
}

type FullRepositoryCodeOfConduct struct {
	HtmlUrl string `json:"html_url,omitempty"`
	Key     string `json:"key,omitempty"`
	Name    string `json:"name,omitempty"`
	Url     string `json:"url,omitempty"`
}

type FullRepositoryLicense struct {
	Key    string `json:"key,omitempty"`
	Name   string `json:"name,omitempty"`
	NodeId string `json:"node_id,omitempty"`
	SpdxId string `json:"spdx_id,omitempty"`
	Url    string `json:"url,omitempty"`
}

type FullRepositoryOrganization struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type FullRepositoryOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type FullRepositoryParent struct {
	AllowMergeCommit    bool   `json:"allow_merge_commit,omitempty"`
	AllowRebaseMerge    bool   `json:"allow_rebase_merge,omitempty"`
	AllowSquashMerge    bool   `json:"allow_squash_merge,omitempty"`
	ArchiveUrl          string `json:"archive_url,omitempty"`
	Archived            bool   `json:"archived,omitempty"`
	AssigneesUrl        string `json:"assignees_url,omitempty"`
	BlobsUrl            string `json:"blobs_url,omitempty"`
	BranchesUrl         string `json:"branches_url,omitempty"`
	CloneUrl            string `json:"clone_url,omitempty"`
	CollaboratorsUrl    string `json:"collaborators_url,omitempty"`
	CommentsUrl         string `json:"comments_url,omitempty"`
	CommitsUrl          string `json:"commits_url,omitempty"`
	CompareUrl          string `json:"compare_url,omitempty"`
	ContentsUrl         string `json:"contents_url,omitempty"`
	ContributorsUrl     string `json:"contributors_url,omitempty"`
	CreatedAt           string `json:"created_at,omitempty"`
	DefaultBranch       string `json:"default_branch,omitempty"`
	DeleteBranchOnMerge bool   `json:"delete_branch_on_merge,omitempty"`
	DeploymentsUrl      string `json:"deployments_url,omitempty"`
	Description         string `json:"description,omitempty"`
	Disabled            bool   `json:"disabled,omitempty"`
	DownloadsUrl        string `json:"downloads_url,omitempty"`
	EventsUrl           string `json:"events_url,omitempty"`
	Fork                bool   `json:"fork,omitempty"`
	ForksCount          int64  `json:"forks_count,omitempty"`
	ForksUrl            string `json:"forks_url,omitempty"`
	FullName            string `json:"full_name,omitempty"`
	GitCommitsUrl       string `json:"git_commits_url,omitempty"`
	GitRefsUrl          string `json:"git_refs_url,omitempty"`
	GitTagsUrl          string `json:"git_tags_url,omitempty"`
	GitUrl              string `json:"git_url,omitempty"`
	HasDownloads        bool   `json:"has_downloads,omitempty"`
	HasIssues           bool   `json:"has_issues,omitempty"`
	HasPages            bool   `json:"has_pages,omitempty"`
	HasProjects         bool   `json:"has_projects,omitempty"`
	HasWiki             bool   `json:"has_wiki,omitempty"`
	Homepage            string `json:"homepage,omitempty"`
	HooksUrl            string `json:"hooks_url,omitempty"`
	HtmlUrl             string `json:"html_url,omitempty"`
	Id                  int64  `json:"id,omitempty"`
	IsTemplate          bool   `json:"is_template,omitempty"`
	IssueCommentUrl     string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl      string `json:"issue_events_url,omitempty"`
	IssuesUrl           string `json:"issues_url,omitempty"`
	KeysUrl             string `json:"keys_url,omitempty"`
	LabelsUrl           string `json:"labels_url,omitempty"`
	Language            string `json:"language,omitempty"`
	LanguagesUrl        string `json:"languages_url,omitempty"`
	MergesUrl           string `json:"merges_url,omitempty"`
	MilestonesUrl       string `json:"milestones_url,omitempty"`
	MirrorUrl           string `json:"mirror_url,omitempty"`
	Name                string `json:"name,omitempty"`
	NetworkCount        int64  `json:"network_count,omitempty"`
	NodeId              string `json:"node_id,omitempty"`
	NotificationsUrl    string `json:"notifications_url,omitempty"`
	OpenIssuesCount     int64  `json:"open_issues_count,omitempty"`
	Owner               struct {
		FullRepositoryParentOwner
	} `json:"owner,omitempty"`
	Permissions struct {
		FullRepositoryParentPermissions
	} `json:"permissions,omitempty"`
	Private            bool        `json:"private,omitempty"`
	PullsUrl           string      `json:"pulls_url,omitempty"`
	PushedAt           string      `json:"pushed_at,omitempty"`
	ReleasesUrl        string      `json:"releases_url,omitempty"`
	Size               json.Number `json:"size,omitempty"`
	SshUrl             string      `json:"ssh_url,omitempty"`
	StargazersCount    int64       `json:"stargazers_count,omitempty"`
	StargazersUrl      string      `json:"stargazers_url,omitempty"`
	StatusesUrl        string      `json:"statuses_url,omitempty"`
	SubscribersCount   int64       `json:"subscribers_count,omitempty"`
	SubscribersUrl     string      `json:"subscribers_url,omitempty"`
	SubscriptionUrl    string      `json:"subscription_url,omitempty"`
	SvnUrl             string      `json:"svn_url,omitempty"`
	TagsUrl            string      `json:"tags_url,omitempty"`
	TeamsUrl           string      `json:"teams_url,omitempty"`
	TempCloneToken     string      `json:"temp_clone_token,omitempty"`
	TemplateRepository interface{} `json:"template_repository,omitempty"`
	Topics             []string    `json:"topics,omitempty"`
	TreesUrl           string      `json:"trees_url,omitempty"`
	UpdatedAt          string      `json:"updated_at,omitempty"`
	Url                string      `json:"url,omitempty"`
	Visibility         string      `json:"visibility,omitempty"`
	WatchersCount      int64       `json:"watchers_count,omitempty"`
}

type FullRepositoryParentOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type FullRepositoryParentPermissions struct {
	Admin bool `json:"admin,omitempty"`
	Pull  bool `json:"pull,omitempty"`
	Push  bool `json:"push,omitempty"`
}

type FullRepositoryPermissions struct {
	Admin    bool `json:"admin,omitempty"`
	Maintain bool `json:"maintain,omitempty"`
	Pull     bool `json:"pull,omitempty"`
	Push     bool `json:"push,omitempty"`
	Triage   bool `json:"triage,omitempty"`
}

type FullRepositorySource struct {
	AllowMergeCommit    bool   `json:"allow_merge_commit,omitempty"`
	AllowRebaseMerge    bool   `json:"allow_rebase_merge,omitempty"`
	AllowSquashMerge    bool   `json:"allow_squash_merge,omitempty"`
	ArchiveUrl          string `json:"archive_url,omitempty"`
	Archived            bool   `json:"archived,omitempty"`
	AssigneesUrl        string `json:"assignees_url,omitempty"`
	BlobsUrl            string `json:"blobs_url,omitempty"`
	BranchesUrl         string `json:"branches_url,omitempty"`
	CloneUrl            string `json:"clone_url,omitempty"`
	CollaboratorsUrl    string `json:"collaborators_url,omitempty"`
	CommentsUrl         string `json:"comments_url,omitempty"`
	CommitsUrl          string `json:"commits_url,omitempty"`
	CompareUrl          string `json:"compare_url,omitempty"`
	ContentsUrl         string `json:"contents_url,omitempty"`
	ContributorsUrl     string `json:"contributors_url,omitempty"`
	CreatedAt           string `json:"created_at,omitempty"`
	DefaultBranch       string `json:"default_branch,omitempty"`
	DeleteBranchOnMerge bool   `json:"delete_branch_on_merge,omitempty"`
	DeploymentsUrl      string `json:"deployments_url,omitempty"`
	Description         string `json:"description,omitempty"`
	Disabled            bool   `json:"disabled,omitempty"`
	DownloadsUrl        string `json:"downloads_url,omitempty"`
	EventsUrl           string `json:"events_url,omitempty"`
	Fork                bool   `json:"fork,omitempty"`
	ForksCount          int64  `json:"forks_count,omitempty"`
	ForksUrl            string `json:"forks_url,omitempty"`
	FullName            string `json:"full_name,omitempty"`
	GitCommitsUrl       string `json:"git_commits_url,omitempty"`
	GitRefsUrl          string `json:"git_refs_url,omitempty"`
	GitTagsUrl          string `json:"git_tags_url,omitempty"`
	GitUrl              string `json:"git_url,omitempty"`
	HasDownloads        bool   `json:"has_downloads,omitempty"`
	HasIssues           bool   `json:"has_issues,omitempty"`
	HasPages            bool   `json:"has_pages,omitempty"`
	HasProjects         bool   `json:"has_projects,omitempty"`
	HasWiki             bool   `json:"has_wiki,omitempty"`
	Homepage            string `json:"homepage,omitempty"`
	HooksUrl            string `json:"hooks_url,omitempty"`
	HtmlUrl             string `json:"html_url,omitempty"`
	Id                  int64  `json:"id,omitempty"`
	IsTemplate          bool   `json:"is_template,omitempty"`
	IssueCommentUrl     string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl      string `json:"issue_events_url,omitempty"`
	IssuesUrl           string `json:"issues_url,omitempty"`
	KeysUrl             string `json:"keys_url,omitempty"`
	LabelsUrl           string `json:"labels_url,omitempty"`
	Language            string `json:"language,omitempty"`
	LanguagesUrl        string `json:"languages_url,omitempty"`
	MergesUrl           string `json:"merges_url,omitempty"`
	MilestonesUrl       string `json:"milestones_url,omitempty"`
	MirrorUrl           string `json:"mirror_url,omitempty"`
	Name                string `json:"name,omitempty"`
	NetworkCount        int64  `json:"network_count,omitempty"`
	NodeId              string `json:"node_id,omitempty"`
	NotificationsUrl    string `json:"notifications_url,omitempty"`
	OpenIssuesCount     int64  `json:"open_issues_count,omitempty"`
	Owner               struct {
		FullRepositorySourceOwner
	} `json:"owner,omitempty"`
	Permissions struct {
		FullRepositorySourcePermissions
	} `json:"permissions,omitempty"`
	Private            bool        `json:"private,omitempty"`
	PullsUrl           string      `json:"pulls_url,omitempty"`
	PushedAt           string      `json:"pushed_at,omitempty"`
	ReleasesUrl        string      `json:"releases_url,omitempty"`
	Size               json.Number `json:"size,omitempty"`
	SshUrl             string      `json:"ssh_url,omitempty"`
	StargazersCount    int64       `json:"stargazers_count,omitempty"`
	StargazersUrl      string      `json:"stargazers_url,omitempty"`
	StatusesUrl        string      `json:"statuses_url,omitempty"`
	SubscribersCount   int64       `json:"subscribers_count,omitempty"`
	SubscribersUrl     string      `json:"subscribers_url,omitempty"`
	SubscriptionUrl    string      `json:"subscription_url,omitempty"`
	SvnUrl             string      `json:"svn_url,omitempty"`
	TagsUrl            string      `json:"tags_url,omitempty"`
	TeamsUrl           string      `json:"teams_url,omitempty"`
	TempCloneToken     string      `json:"temp_clone_token,omitempty"`
	TemplateRepository interface{} `json:"template_repository,omitempty"`
	Topics             []string    `json:"topics,omitempty"`
	TreesUrl           string      `json:"trees_url,omitempty"`
	UpdatedAt          string      `json:"updated_at,omitempty"`
	Url                string      `json:"url,omitempty"`
	Visibility         string      `json:"visibility,omitempty"`
	WatchersCount      int64       `json:"watchers_count,omitempty"`
}

type FullRepositorySourceOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type FullRepositorySourcePermissions struct {
	Admin bool `json:"admin,omitempty"`
	Pull  bool `json:"pull,omitempty"`
	Push  bool `json:"push,omitempty"`
}

type Gist struct {
	Comments    int64  `json:"comments,omitempty"`
	CommentsUrl string `json:"comments_url,omitempty"`
	CommitsUrl  string `json:"commits_url,omitempty"`
	CreatedAt   string `json:"created_at,omitempty"`
	Description string `json:"description,omitempty"`
	Files       map[string]struct {
		Content   string      `json:"content,omitempty"`
		Filename  string      `json:"filename,omitempty"`
		Language  string      `json:"language,omitempty"`
		RawUrl    string      `json:"raw_url,omitempty"`
		Size      json.Number `json:"size,omitempty"`
		Truncated bool        `json:"truncated,omitempty"`
		Type      string      `json:"type,omitempty"`
	} `json:"files,omitempty"`
	Forks []struct {
		GistFork
	} `json:"forks,omitempty"`
	ForksUrl   string `json:"forks_url,omitempty"`
	GitPullUrl string `json:"git_pull_url,omitempty"`
	GitPushUrl string `json:"git_push_url,omitempty"`
	History    []struct {
		GistHistory
	} `json:"history,omitempty"`
	HtmlUrl string `json:"html_url,omitempty"`
	Id      string `json:"id,omitempty"`
	NodeId  string `json:"node_id,omitempty"`
	Owner   struct {
		GistOwner
	} `json:"owner,omitempty"`
	Public    bool   `json:"public,omitempty"`
	Truncated bool   `json:"truncated,omitempty"`
	UpdatedAt string `json:"updated_at,omitempty"`
	Url       string `json:"url,omitempty"`
	User      string `json:"user,omitempty"`
}

type GistComment struct {
	Body      string `json:"body,omitempty"`
	CreatedAt string `json:"created_at,omitempty"`
	Id        int64  `json:"id,omitempty"`
	NodeId    string `json:"node_id,omitempty"`
	UpdatedAt string `json:"updated_at,omitempty"`
	Url       string `json:"url,omitempty"`
	User      struct {
		GistCommentUser
	} `json:"user,omitempty"`
}

type GistCommentUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type GistCommit struct {
	ChangeStatus struct {
		GistCommitChangeStatus
	} `json:"change_status,omitempty"`
	CommittedAt string `json:"committed_at,omitempty"`
	Url         string `json:"url,omitempty"`
	User        struct {
		GistCommitUser
	} `json:"user,omitempty"`
	Version string `json:"version,omitempty"`
}

type GistCommitChangeStatus struct {
	Additions int64 `json:"additions,omitempty"`
	Deletions int64 `json:"deletions,omitempty"`
	Total     int64 `json:"total,omitempty"`
}

type GistCommitUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type GistFork struct {
	CreatedAt string `json:"created_at,omitempty"`
	Id        string `json:"id,omitempty"`
	UpdatedAt string `json:"updated_at,omitempty"`
	Url       string `json:"url,omitempty"`
	User      struct {
		GistForkUser
	} `json:"user,omitempty"`
}

type GistForkUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type GistHistory struct {
	ChangeStatus struct {
		GistHistoryChangeStatus
	} `json:"change_status,omitempty"`
	CommittedAt string `json:"committed_at,omitempty"`
	Url         string `json:"url,omitempty"`
	User        struct {
		GistHistoryUser
	} `json:"user,omitempty"`
	Version string `json:"version,omitempty"`
}

type GistHistoryChangeStatus struct {
	Additions int64 `json:"additions,omitempty"`
	Deletions int64 `json:"deletions,omitempty"`
	Total     int64 `json:"total,omitempty"`
}

type GistHistoryUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type GistOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type GitCommit struct {
	Author struct {
		GitCommitAuthor
	} `json:"author,omitempty"`
	Committer struct {
		GitCommitCommitter
	} `json:"committer,omitempty"`
	Message string `json:"message,omitempty"`
	NodeId  string `json:"node_id,omitempty"`
	Parents []struct {
		GitCommitParent
	} `json:"parents,omitempty"`
	Sha  string `json:"sha,omitempty"`
	Tree struct {
		GitCommitTree
	} `json:"tree,omitempty"`
	Url          string `json:"url,omitempty"`
	Verification struct {
		GitCommitVerification
	} `json:"verification,omitempty"`
}

type GitCommitAuthor struct {
	Date  string `json:"date,omitempty"`
	Email string `json:"email,omitempty"`
	Name  string `json:"name,omitempty"`
}

type GitCommitCommitter struct {
	Date  string `json:"date,omitempty"`
	Email string `json:"email,omitempty"`
	Name  string `json:"name,omitempty"`
}

type GitCommitParent struct {
	Sha string `json:"sha,omitempty"`
	Url string `json:"url,omitempty"`
}

type GitCommitTree struct {
	Sha string `json:"sha,omitempty"`
	Url string `json:"url,omitempty"`
}

type GitCommitVerification struct {
	Payload   string `json:"payload,omitempty"`
	Reason    string `json:"reason,omitempty"`
	Signature string `json:"signature,omitempty"`
	Verified  bool   `json:"verified,omitempty"`
}

type GitRef struct {
	NodeId string `json:"node_id,omitempty"`
	Object struct {
		GitRefObject
	} `json:"object,omitempty"`
	Ref string `json:"ref,omitempty"`
	Url string `json:"url,omitempty"`
}

type GitRefObject struct {
	Sha  string `json:"sha,omitempty"`
	Type string `json:"type,omitempty"`
	Url  string `json:"url,omitempty"`
}

type GitTag struct {
	Message string `json:"message,omitempty"`
	NodeId  string `json:"node_id,omitempty"`
	Object  struct {
		GitTagObject
	} `json:"object,omitempty"`
	Sha    string `json:"sha,omitempty"`
	Tag    string `json:"tag,omitempty"`
	Tagger struct {
		GitTagTagger
	} `json:"tagger,omitempty"`
	Url          string `json:"url,omitempty"`
	Verification struct {
		GitTagVerification
	} `json:"verification,omitempty"`
}

type GitTagObject struct {
	Sha  string `json:"sha,omitempty"`
	Type string `json:"type,omitempty"`
	Url  string `json:"url,omitempty"`
}

type GitTagTagger struct {
	Date  string `json:"date,omitempty"`
	Email string `json:"email,omitempty"`
	Name  string `json:"name,omitempty"`
}

type GitTagVerification struct {
	Payload   string `json:"payload,omitempty"`
	Reason    string `json:"reason,omitempty"`
	Signature string `json:"signature,omitempty"`
	Verified  bool   `json:"verified,omitempty"`
}

type GitTree struct {
	Sha  string `json:"sha,omitempty"`
	Tree []struct {
		GitTreeTree
	} `json:"tree,omitempty"`
	Url string `json:"url,omitempty"`
}

type GitTree2 struct {
	Sha  string `json:"sha,omitempty"`
	Tree []struct {
		GitTree2Tree
	} `json:"tree,omitempty"`
	Truncated bool   `json:"truncated,omitempty"`
	Url       string `json:"url,omitempty"`
}

type GitTree2Tree struct {
	Mode string      `json:"mode"`
	Path string      `json:"path"`
	Sha  string      `json:"sha"`
	Size json.Number `json:"size,omitempty"`
	Type string      `json:"type"`
	Url  string      `json:"url"`
}

type GitTreeTree struct {
	Mode string      `json:"mode,omitempty"`
	Path string      `json:"path,omitempty"`
	Sha  string      `json:"sha,omitempty"`
	Size json.Number `json:"size,omitempty"`
	Type string      `json:"type,omitempty"`
	Url  string      `json:"url,omitempty"`
}

type GitignoreTemplate struct {
	Name   string `json:"name,omitempty"`
	Source string `json:"source,omitempty"`
}

type GpgKey struct {
	CanCertify        bool   `json:"can_certify,omitempty"`
	CanEncryptComms   bool   `json:"can_encrypt_comms,omitempty"`
	CanEncryptStorage bool   `json:"can_encrypt_storage,omitempty"`
	CanSign           bool   `json:"can_sign,omitempty"`
	CreatedAt         string `json:"created_at,omitempty"`
	Emails            []struct {
		GpgKeyEmail
	} `json:"emails,omitempty"`
	ExpiresAt    string `json:"expires_at,omitempty"`
	Id           int64  `json:"id,omitempty"`
	KeyId        string `json:"key_id,omitempty"`
	PrimaryKeyId string `json:"primary_key_id,omitempty"`
	PublicKey    string `json:"public_key,omitempty"`
	Subkeys      []struct {
		GpgKeySubkey
	} `json:"subkeys,omitempty"`
}

type GpgKeyEmail struct {
	Email    string `json:"email,omitempty"`
	Verified bool   `json:"verified,omitempty"`
}

type GpgKeySubkey struct {
	CanCertify        bool          `json:"can_certify,omitempty"`
	CanEncryptComms   bool          `json:"can_encrypt_comms,omitempty"`
	CanEncryptStorage bool          `json:"can_encrypt_storage,omitempty"`
	CanSign           bool          `json:"can_sign,omitempty"`
	CreatedAt         string        `json:"created_at,omitempty"`
	Emails            []interface{} `json:"emails,omitempty"`
	ExpiresAt         string        `json:"expires_at,omitempty"`
	Id                int64         `json:"id,omitempty"`
	KeyId             string        `json:"key_id,omitempty"`
	PrimaryKeyId      int64         `json:"primary_key_id,omitempty"`
	PublicKey         string        `json:"public_key,omitempty"`
	Subkeys           []interface{} `json:"subkeys,omitempty"`
}

type GroupMapping struct {
	Groups struct {
		GroupMappingGroups
	} `json:"groups,omitempty"`
}

type GroupMapping2 struct {
	Groups []struct {
		GroupMapping2Group
	} `json:"groups,omitempty"`
}

type GroupMapping2Group struct {
	GroupDescription string `json:"group_description,omitempty"`
	GroupId          string `json:"group_id,omitempty"`
	GroupName        string `json:"group_name,omitempty"`
}

type GroupMapping3 struct {
	Groups []struct {
		GroupMapping3Group
	} `json:"groups,omitempty"`
}

type GroupMapping3Group struct {
	GroupDescription string `json:"group_description"`
	GroupId          string `json:"group_id"`
	GroupName        string `json:"group_name"`
}

type GroupMappingGroups struct {
	GroupDescription string `json:"group_description,omitempty"`
	GroupId          string `json:"group_id,omitempty"`
	GroupName        string `json:"group_name,omitempty"`
}

type Hook struct {
	Active bool `json:"active,omitempty"`
	Config struct {
		HookConfig
	} `json:"config,omitempty"`
	CreatedAt    string   `json:"created_at,omitempty"`
	Events       []string `json:"events,omitempty"`
	Id           int64    `json:"id,omitempty"`
	LastResponse struct {
		HookLastResponse
	} `json:"last_response,omitempty"`
	Name      string `json:"name,omitempty"`
	PingUrl   string `json:"ping_url,omitempty"`
	TestUrl   string `json:"test_url,omitempty"`
	Type      string `json:"type,omitempty"`
	UpdatedAt string `json:"updated_at,omitempty"`
	Url       string `json:"url,omitempty"`
}

type HookConfig struct {
	ContentType string `json:"content_type,omitempty"`
	InsecureSsl string `json:"insecure_ssl,omitempty"`
	Url         string `json:"url,omitempty"`
}

type HookLastResponse struct {
	Code    string `json:"code,omitempty"`
	Message string `json:"message,omitempty"`
	Status  string `json:"status,omitempty"`
}

type Hovercard struct {
	Contexts []struct {
		HovercardContext
	} `json:"contexts,omitempty"`
}

type HovercardContext struct {
	Message string `json:"message,omitempty"`
	Octicon string `json:"octicon,omitempty"`
}

type Import struct {
	AuthorsCount    int64       `json:"authors_count,omitempty"`
	AuthorsUrl      string      `json:"authors_url,omitempty"`
	HasLargeFiles   bool        `json:"has_large_files,omitempty"`
	HtmlUrl         string      `json:"html_url,omitempty"`
	LargeFilesCount int64       `json:"large_files_count,omitempty"`
	LargeFilesSize  json.Number `json:"large_files_size,omitempty"`
	RepositoryUrl   string      `json:"repository_url,omitempty"`
	Status          string      `json:"status,omitempty"`
	StatusText      string      `json:"status_text,omitempty"`
	Url             string      `json:"url,omitempty"`
	UseLfs          string      `json:"use_lfs,omitempty"`
	Vcs             string      `json:"vcs,omitempty"`
	VcsUrl          string      `json:"vcs_url,omitempty"`
}

type Import2 struct {
	AuthorsCount    int64       `json:"authors_count,omitempty"`
	AuthorsUrl      string      `json:"authors_url,omitempty"`
	CommitCount     int64       `json:"commit_count,omitempty"`
	HasLargeFiles   bool        `json:"has_large_files,omitempty"`
	HtmlUrl         string      `json:"html_url,omitempty"`
	LargeFilesCount int64       `json:"large_files_count,omitempty"`
	LargeFilesSize  json.Number `json:"large_files_size,omitempty"`
	Percent         json.Number `json:"percent,omitempty"`
	RepositoryUrl   string      `json:"repository_url,omitempty"`
	Status          string      `json:"status,omitempty"`
	StatusText      string      `json:"status_text,omitempty"`
	TfvcProject     string      `json:"tfvc_project,omitempty"`
	Url             string      `json:"url,omitempty"`
	UseLfs          string      `json:"use_lfs,omitempty"`
	Vcs             string      `json:"vcs,omitempty"`
	VcsUrl          string      `json:"vcs_url,omitempty"`
}

type Installation struct {
	AccessTokensUrl string `json:"access_tokens_url,omitempty"`
	Account         struct {
		InstallationAccount
	} `json:"account,omitempty"`
	AppId       int64    `json:"app_id,omitempty"`
	CreatedAt   string   `json:"created_at,omitempty"`
	Events      []string `json:"events,omitempty"`
	HtmlUrl     string   `json:"html_url,omitempty"`
	Id          int64    `json:"id,omitempty"`
	Permissions struct {
		InstallationPermissions
	} `json:"permissions,omitempty"`
	RepositoriesUrl     string `json:"repositories_url,omitempty"`
	RepositorySelection string `json:"repository_selection,omitempty"`
	SingleFileName      string `json:"single_file_name,omitempty"`
	TargetId            int64  `json:"target_id,omitempty"`
	TargetType          string `json:"target_type,omitempty"`
	UpdatedAt           string `json:"updated_at,omitempty"`
}

type Installation2 struct {
	AccessTokensUrl string `json:"access_tokens_url,omitempty"`
	Account         struct {
		Installation2Account
	} `json:"account,omitempty"`
	AppId       int64    `json:"app_id,omitempty"`
	CreatedAt   string   `json:"created_at,omitempty"`
	Events      []string `json:"events,omitempty"`
	HtmlUrl     string   `json:"html_url,omitempty"`
	Id          int64    `json:"id,omitempty"`
	Permissions struct {
		Installation2Permissions
	} `json:"permissions,omitempty"`
	RepositoriesUrl     string `json:"repositories_url,omitempty"`
	RepositorySelection string `json:"repository_selection,omitempty"`
	SingleFileName      string `json:"single_file_name,omitempty"`
	TargetId            int64  `json:"target_id,omitempty"`
	TargetType          string `json:"target_type,omitempty"`
	UpdatedAt           string `json:"updated_at,omitempty"`
}

type Installation2Account struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type Installation2Permissions struct {
	Deployments  string `json:"deployments,omitempty"`
	Metadata     string `json:"metadata,omitempty"`
	PullRequests string `json:"pull_requests,omitempty"`
	Statuses     string `json:"statuses,omitempty"`
}

type InstallationAccount struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type InstallationPermissions struct {
	Checks   string `json:"checks,omitempty"`
	Contents string `json:"contents,omitempty"`
	Metadata string `json:"metadata,omitempty"`
}

type InstallationToken struct {
	ExpiresAt   string `json:"expires_at,omitempty"`
	Permissions struct {
		InstallationTokenPermissions
	} `json:"permissions,omitempty"`
	Repositories []struct {
		InstallationTokenRepository
	} `json:"repositories,omitempty"`
	RepositorySelection string `json:"repository_selection,omitempty"`
	Token               string `json:"token,omitempty"`
}

type InstallationTokenPermissions struct {
	Contents string `json:"contents,omitempty"`
	Issues   string `json:"issues,omitempty"`
}

type InstallationTokenRepository struct {
	AllowMergeCommit    bool   `json:"allow_merge_commit,omitempty"`
	AllowRebaseMerge    bool   `json:"allow_rebase_merge,omitempty"`
	AllowSquashMerge    bool   `json:"allow_squash_merge,omitempty"`
	ArchiveUrl          string `json:"archive_url,omitempty"`
	Archived            bool   `json:"archived,omitempty"`
	AssigneesUrl        string `json:"assignees_url,omitempty"`
	BlobsUrl            string `json:"blobs_url,omitempty"`
	BranchesUrl         string `json:"branches_url,omitempty"`
	CloneUrl            string `json:"clone_url,omitempty"`
	CollaboratorsUrl    string `json:"collaborators_url,omitempty"`
	CommentsUrl         string `json:"comments_url,omitempty"`
	CommitsUrl          string `json:"commits_url,omitempty"`
	CompareUrl          string `json:"compare_url,omitempty"`
	ContentsUrl         string `json:"contents_url,omitempty"`
	ContributorsUrl     string `json:"contributors_url,omitempty"`
	CreatedAt           string `json:"created_at,omitempty"`
	DefaultBranch       string `json:"default_branch,omitempty"`
	DeleteBranchOnMerge bool   `json:"delete_branch_on_merge,omitempty"`
	DeploymentsUrl      string `json:"deployments_url,omitempty"`
	Description         string `json:"description,omitempty"`
	Disabled            bool   `json:"disabled,omitempty"`
	DownloadsUrl        string `json:"downloads_url,omitempty"`
	EventsUrl           string `json:"events_url,omitempty"`
	Fork                bool   `json:"fork,omitempty"`
	ForksCount          int64  `json:"forks_count,omitempty"`
	ForksUrl            string `json:"forks_url,omitempty"`
	FullName            string `json:"full_name,omitempty"`
	GitCommitsUrl       string `json:"git_commits_url,omitempty"`
	GitRefsUrl          string `json:"git_refs_url,omitempty"`
	GitTagsUrl          string `json:"git_tags_url,omitempty"`
	GitUrl              string `json:"git_url,omitempty"`
	HasDownloads        bool   `json:"has_downloads,omitempty"`
	HasIssues           bool   `json:"has_issues,omitempty"`
	HasPages            bool   `json:"has_pages,omitempty"`
	HasProjects         bool   `json:"has_projects,omitempty"`
	HasWiki             bool   `json:"has_wiki,omitempty"`
	Homepage            string `json:"homepage,omitempty"`
	HooksUrl            string `json:"hooks_url,omitempty"`
	HtmlUrl             string `json:"html_url,omitempty"`
	Id                  int64  `json:"id,omitempty"`
	IsTemplate          bool   `json:"is_template,omitempty"`
	IssueCommentUrl     string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl      string `json:"issue_events_url,omitempty"`
	IssuesUrl           string `json:"issues_url,omitempty"`
	KeysUrl             string `json:"keys_url,omitempty"`
	LabelsUrl           string `json:"labels_url,omitempty"`
	Language            string `json:"language,omitempty"`
	LanguagesUrl        string `json:"languages_url,omitempty"`
	MergesUrl           string `json:"merges_url,omitempty"`
	MilestonesUrl       string `json:"milestones_url,omitempty"`
	MirrorUrl           string `json:"mirror_url,omitempty"`
	Name                string `json:"name,omitempty"`
	NetworkCount        int64  `json:"network_count,omitempty"`
	NodeId              string `json:"node_id,omitempty"`
	NotificationsUrl    string `json:"notifications_url,omitempty"`
	OpenIssuesCount     int64  `json:"open_issues_count,omitempty"`
	Owner               struct {
		InstallationTokenRepositoryOwner
	} `json:"owner,omitempty"`
	Permissions struct {
		InstallationTokenRepositoryPermissions
	} `json:"permissions,omitempty"`
	Private            bool        `json:"private,omitempty"`
	PullsUrl           string      `json:"pulls_url,omitempty"`
	PushedAt           string      `json:"pushed_at,omitempty"`
	ReleasesUrl        string      `json:"releases_url,omitempty"`
	Size               json.Number `json:"size,omitempty"`
	SshUrl             string      `json:"ssh_url,omitempty"`
	StargazersCount    int64       `json:"stargazers_count,omitempty"`
	StargazersUrl      string      `json:"stargazers_url,omitempty"`
	StatusesUrl        string      `json:"statuses_url,omitempty"`
	SubscribersCount   int64       `json:"subscribers_count,omitempty"`
	SubscribersUrl     string      `json:"subscribers_url,omitempty"`
	SubscriptionUrl    string      `json:"subscription_url,omitempty"`
	SvnUrl             string      `json:"svn_url,omitempty"`
	TagsUrl            string      `json:"tags_url,omitempty"`
	TeamsUrl           string      `json:"teams_url,omitempty"`
	TempCloneToken     string      `json:"temp_clone_token,omitempty"`
	TemplateRepository interface{} `json:"template_repository,omitempty"`
	Topics             []string    `json:"topics,omitempty"`
	TreesUrl           string      `json:"trees_url,omitempty"`
	UpdatedAt          string      `json:"updated_at,omitempty"`
	Url                string      `json:"url,omitempty"`
	Visibility         string      `json:"visibility,omitempty"`
	WatchersCount      int64       `json:"watchers_count,omitempty"`
}

type InstallationTokenRepositoryOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type InstallationTokenRepositoryPermissions struct {
	Admin bool `json:"admin,omitempty"`
	Pull  bool `json:"pull,omitempty"`
	Push  bool `json:"push,omitempty"`
}

type InstalledIntegration struct {
	CreatedAt          string   `json:"created_at,omitempty"`
	Description        string   `json:"description,omitempty"`
	Events             []string `json:"events,omitempty"`
	ExternalUrl        string   `json:"external_url,omitempty"`
	HtmlUrl            string   `json:"html_url,omitempty"`
	Id                 int64    `json:"id,omitempty"`
	InstallationsCount int64    `json:"installations_count,omitempty"`
	Name               string   `json:"name,omitempty"`
	NodeId             string   `json:"node_id,omitempty"`
	Owner              struct {
		InstalledIntegrationOwner
	} `json:"owner,omitempty"`
	Permissions struct {
		InstalledIntegrationPermissions
	} `json:"permissions,omitempty"`
	Slug      string `json:"slug,omitempty"`
	UpdatedAt string `json:"updated_at,omitempty"`
}

type InstalledIntegrationOwner struct {
	AvatarUrl        string `json:"avatar_url,omitempty"`
	Description      string `json:"description,omitempty"`
	EventsUrl        string `json:"events_url,omitempty"`
	HooksUrl         string `json:"hooks_url,omitempty"`
	Id               int64  `json:"id,omitempty"`
	IssuesUrl        string `json:"issues_url,omitempty"`
	Login            string `json:"login,omitempty"`
	MembersUrl       string `json:"members_url,omitempty"`
	NodeId           string `json:"node_id,omitempty"`
	PublicMembersUrl string `json:"public_members_url,omitempty"`
	ReposUrl         string `json:"repos_url,omitempty"`
	Url              string `json:"url,omitempty"`
}

type InstalledIntegrationPermissions struct {
	Contents   string `json:"contents,omitempty"`
	Issues     string `json:"issues,omitempty"`
	Metadata   string `json:"metadata,omitempty"`
	SingleFile string `json:"single_file,omitempty"`
}

type Integration struct {
	CreatedAt   string   `json:"created_at,omitempty"`
	Description string   `json:"description,omitempty"`
	Events      []string `json:"events,omitempty"`
	ExternalUrl string   `json:"external_url,omitempty"`
	HtmlUrl     string   `json:"html_url,omitempty"`
	Id          int64    `json:"id,omitempty"`
	Name        string   `json:"name,omitempty"`
	NodeId      string   `json:"node_id,omitempty"`
	Owner       struct {
		IntegrationOwner
	} `json:"owner,omitempty"`
	Permissions struct {
		IntegrationPermissions
	} `json:"permissions,omitempty"`
	Slug      string `json:"slug,omitempty"`
	UpdatedAt string `json:"updated_at,omitempty"`
}

type IntegrationFromManifest struct {
	ClientId     string `json:"client_id,omitempty"`
	ClientSecret string `json:"client_secret,omitempty"`
	CreatedAt    string `json:"created_at,omitempty"`
	Description  string `json:"description,omitempty"`
	ExternalUrl  string `json:"external_url,omitempty"`
	HtmlUrl      string `json:"html_url,omitempty"`
	Id           int64  `json:"id,omitempty"`
	Name         string `json:"name,omitempty"`
	NodeId       string `json:"node_id,omitempty"`
	Owner        struct {
		IntegrationFromManifestOwner
	} `json:"owner,omitempty"`
	Pem           string `json:"pem,omitempty"`
	UpdatedAt     string `json:"updated_at,omitempty"`
	WebhookSecret string `json:"webhook_secret,omitempty"`
}

type IntegrationFromManifestOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type IntegrationOwner struct {
	AvatarUrl        string `json:"avatar_url,omitempty"`
	Description      string `json:"description,omitempty"`
	EventsUrl        string `json:"events_url,omitempty"`
	HooksUrl         string `json:"hooks_url,omitempty"`
	Id               int64  `json:"id,omitempty"`
	IssuesUrl        string `json:"issues_url,omitempty"`
	Login            string `json:"login,omitempty"`
	MembersUrl       string `json:"members_url,omitempty"`
	NodeId           string `json:"node_id,omitempty"`
	PublicMembersUrl string `json:"public_members_url,omitempty"`
	ReposUrl         string `json:"repos_url,omitempty"`
	Url              string `json:"url,omitempty"`
}

type IntegrationPermissions struct {
	Contents   string `json:"contents,omitempty"`
	Issues     string `json:"issues,omitempty"`
	Metadata   string `json:"metadata,omitempty"`
	SingleFile string `json:"single_file,omitempty"`
}

type InteractionLimit struct {
	ExpiresAt string `json:"expires_at,omitempty"`
	Limit     string `json:"limit,omitempty"`
	Origin    string `json:"origin,omitempty"`
}

type Issue struct {
	ActiveLockReason string `json:"active_lock_reason,omitempty"`
	Assignee         struct {
		IssueAssignee
	} `json:"assignee,omitempty"`
	Assignees []struct {
		IssueAssignee
	} `json:"assignees,omitempty"`
	Body     string `json:"body,omitempty"`
	ClosedAt string `json:"closed_at,omitempty"`
	ClosedBy struct {
		IssueClosedBy
	} `json:"closed_by,omitempty"`
	Comments    int64  `json:"comments,omitempty"`
	CommentsUrl string `json:"comments_url,omitempty"`
	CreatedAt   string `json:"created_at,omitempty"`
	EventsUrl   string `json:"events_url,omitempty"`
	HtmlUrl     string `json:"html_url,omitempty"`
	Id          int64  `json:"id,omitempty"`
	Labels      []struct {
		IssueLabel
	} `json:"labels,omitempty"`
	LabelsUrl string `json:"labels_url,omitempty"`
	Locked    bool   `json:"locked,omitempty"`
	Milestone struct {
		IssueMilestone
	} `json:"milestone,omitempty"`
	NodeId      string `json:"node_id,omitempty"`
	Number      int64  `json:"number,omitempty"`
	PullRequest struct {
		IssuePullRequest
	} `json:"pull_request,omitempty"`
	RepositoryUrl string `json:"repository_url,omitempty"`
	State         string `json:"state,omitempty"`
	Title         string `json:"title,omitempty"`
	UpdatedAt     string `json:"updated_at,omitempty"`
	Url           string `json:"url,omitempty"`
	User          struct {
		IssueUser
	} `json:"user,omitempty"`
}

type IssueAssignee struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type IssueClosedBy struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type IssueComment struct {
	Body      string `json:"body,omitempty"`
	CreatedAt string `json:"created_at,omitempty"`
	HtmlUrl   string `json:"html_url,omitempty"`
	Id        int64  `json:"id,omitempty"`
	NodeId    string `json:"node_id,omitempty"`
	UpdatedAt string `json:"updated_at,omitempty"`
	Url       string `json:"url,omitempty"`
	User      struct {
		IssueCommentUser
	} `json:"user,omitempty"`
}

type IssueCommentUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type IssueEvent struct {
	Actor struct {
		IssueEventActor
	} `json:"actor,omitempty"`
	CommitId  string `json:"commit_id,omitempty"`
	CommitUrl string `json:"commit_url,omitempty"`
	CreatedAt string `json:"created_at,omitempty"`
	Event     string `json:"event,omitempty"`
	Id        int64  `json:"id,omitempty"`
	Issue     struct {
		IssueEventIssue
	} `json:"issue,omitempty"`
	NodeId string `json:"node_id,omitempty"`
	Url    string `json:"url,omitempty"`
}

type IssueEventActor struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type IssueEventForIssue struct {
	Actor struct {
		IssueEventForIssueActor
	} `json:"actor,omitempty"`
	CommitId  string `json:"commit_id,omitempty"`
	CommitUrl string `json:"commit_url,omitempty"`
	CreatedAt string `json:"created_at,omitempty"`
	Event     string `json:"event,omitempty"`
	Id        int64  `json:"id,omitempty"`
	NodeId    string `json:"node_id,omitempty"`
	Url       string `json:"url,omitempty"`
}

type IssueEventForIssueActor struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type IssueEventIssue struct {
	ActiveLockReason string `json:"active_lock_reason,omitempty"`
	Assignee         struct {
		IssueEventIssueAssignee
	} `json:"assignee,omitempty"`
	Assignees []struct {
		IssueEventIssueAssignee
	} `json:"assignees,omitempty"`
	Body        string `json:"body,omitempty"`
	ClosedAt    string `json:"closed_at,omitempty"`
	Comments    int64  `json:"comments,omitempty"`
	CommentsUrl string `json:"comments_url,omitempty"`
	CreatedAt   string `json:"created_at,omitempty"`
	EventsUrl   string `json:"events_url,omitempty"`
	HtmlUrl     string `json:"html_url,omitempty"`
	Id          int64  `json:"id,omitempty"`
	Labels      []struct {
		IssueEventIssueLabel
	} `json:"labels,omitempty"`
	LabelsUrl string `json:"labels_url,omitempty"`
	Locked    bool   `json:"locked,omitempty"`
	Milestone struct {
		IssueEventIssueMilestone
	} `json:"milestone,omitempty"`
	NodeId      string `json:"node_id,omitempty"`
	Number      int64  `json:"number,omitempty"`
	PullRequest struct {
		IssueEventIssuePullRequest
	} `json:"pull_request,omitempty"`
	RepositoryUrl string `json:"repository_url,omitempty"`
	State         string `json:"state,omitempty"`
	Title         string `json:"title,omitempty"`
	UpdatedAt     string `json:"updated_at,omitempty"`
	Url           string `json:"url,omitempty"`
	User          struct {
		IssueEventIssueUser
	} `json:"user,omitempty"`
}

type IssueEventIssueAssignee struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type IssueEventIssueLabel struct {
	Color       string `json:"color,omitempty"`
	Default     bool   `json:"default,omitempty"`
	Description string `json:"description,omitempty"`
	Id          int64  `json:"id,omitempty"`
	Name        string `json:"name,omitempty"`
	NodeId      string `json:"node_id,omitempty"`
	Url         string `json:"url,omitempty"`
}

type IssueEventIssueMilestone struct {
	ClosedAt     string `json:"closed_at,omitempty"`
	ClosedIssues int64  `json:"closed_issues,omitempty"`
	CreatedAt    string `json:"created_at,omitempty"`
	Creator      struct {
		IssueEventIssueMilestoneCreator
	} `json:"creator,omitempty"`
	Description string `json:"description,omitempty"`
	DueOn       string `json:"due_on,omitempty"`
	HtmlUrl     string `json:"html_url,omitempty"`
	Id          int64  `json:"id,omitempty"`
	LabelsUrl   string `json:"labels_url,omitempty"`
	NodeId      string `json:"node_id,omitempty"`
	Number      int64  `json:"number,omitempty"`
	OpenIssues  int64  `json:"open_issues,omitempty"`
	State       string `json:"state,omitempty"`
	Title       string `json:"title,omitempty"`
	UpdatedAt   string `json:"updated_at,omitempty"`
	Url         string `json:"url,omitempty"`
}

type IssueEventIssueMilestoneCreator struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type IssueEventIssuePullRequest struct {
	DiffUrl  string `json:"diff_url,omitempty"`
	HtmlUrl  string `json:"html_url,omitempty"`
	PatchUrl string `json:"patch_url,omitempty"`
	Url      string `json:"url,omitempty"`
}

type IssueEventIssueUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type IssueLabel struct {
	Color       string `json:"color,omitempty"`
	Default     bool   `json:"default,omitempty"`
	Description string `json:"description,omitempty"`
	Id          int64  `json:"id,omitempty"`
	Name        string `json:"name,omitempty"`
	NodeId      string `json:"node_id,omitempty"`
	Url         string `json:"url,omitempty"`
}

type IssueMilestone struct {
	ClosedAt     string `json:"closed_at,omitempty"`
	ClosedIssues int64  `json:"closed_issues,omitempty"`
	CreatedAt    string `json:"created_at,omitempty"`
	Creator      struct {
		IssueMilestoneCreator
	} `json:"creator,omitempty"`
	Description string `json:"description,omitempty"`
	DueOn       string `json:"due_on,omitempty"`
	HtmlUrl     string `json:"html_url,omitempty"`
	Id          int64  `json:"id,omitempty"`
	LabelsUrl   string `json:"labels_url,omitempty"`
	NodeId      string `json:"node_id,omitempty"`
	Number      int64  `json:"number,omitempty"`
	OpenIssues  int64  `json:"open_issues,omitempty"`
	State       string `json:"state,omitempty"`
	Title       string `json:"title,omitempty"`
	UpdatedAt   string `json:"updated_at,omitempty"`
	Url         string `json:"url,omitempty"`
}

type IssueMilestoneCreator struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type IssuePullRequest struct {
	DiffUrl  string `json:"diff_url,omitempty"`
	HtmlUrl  string `json:"html_url,omitempty"`
	PatchUrl string `json:"patch_url,omitempty"`
	Url      string `json:"url,omitempty"`
}

type IssueSearchResultItem struct {
	Assignee    string `json:"assignee,omitempty"`
	Body        string `json:"body,omitempty"`
	ClosedAt    string `json:"closed_at,omitempty"`
	Comments    int64  `json:"comments,omitempty"`
	CommentsUrl string `json:"comments_url,omitempty"`
	CreatedAt   string `json:"created_at,omitempty"`
	EventsUrl   string `json:"events_url,omitempty"`
	HtmlUrl     string `json:"html_url,omitempty"`
	Id          int64  `json:"id,omitempty"`
	Labels      []struct {
		IssueSearchResultItemLabel
	} `json:"labels,omitempty"`
	LabelsUrl   string `json:"labels_url,omitempty"`
	Milestone   string `json:"milestone,omitempty"`
	NodeId      string `json:"node_id,omitempty"`
	Number      int64  `json:"number,omitempty"`
	PullRequest struct {
		IssueSearchResultItemPullRequest
	} `json:"pull_request,omitempty"`
	RepositoryUrl string      `json:"repository_url,omitempty"`
	Score         json.Number `json:"score,omitempty"`
	State         string      `json:"state,omitempty"`
	Title         string      `json:"title,omitempty"`
	UpdatedAt     string      `json:"updated_at,omitempty"`
	Url           string      `json:"url,omitempty"`
	User          struct {
		IssueSearchResultItemUser
	} `json:"user,omitempty"`
}

type IssueSearchResultItemLabel struct {
	Color  string `json:"color,omitempty"`
	Id     int64  `json:"id,omitempty"`
	Name   string `json:"name,omitempty"`
	NodeId string `json:"node_id,omitempty"`
	Url    string `json:"url,omitempty"`
}

type IssueSearchResultItemPullRequest struct {
	DiffUrl  string `json:"diff_url,omitempty"`
	HtmlUrl  string `json:"html_url,omitempty"`
	PatchUrl string `json:"patch_url,omitempty"`
}

type IssueSearchResultItemUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type IssueSimple struct {
	ActiveLockReason string `json:"active_lock_reason,omitempty"`
	Assignee         struct {
		IssueSimpleAssignee
	} `json:"assignee,omitempty"`
	Assignees []struct {
		IssueSimpleAssignee
	} `json:"assignees,omitempty"`
	Body        string `json:"body,omitempty"`
	ClosedAt    string `json:"closed_at,omitempty"`
	Comments    int64  `json:"comments,omitempty"`
	CommentsUrl string `json:"comments_url,omitempty"`
	CreatedAt   string `json:"created_at,omitempty"`
	EventsUrl   string `json:"events_url,omitempty"`
	HtmlUrl     string `json:"html_url,omitempty"`
	Id          int64  `json:"id,omitempty"`
	Labels      []struct {
		IssueSimpleLabel
	} `json:"labels,omitempty"`
	LabelsUrl string `json:"labels_url,omitempty"`
	Locked    bool   `json:"locked,omitempty"`
	Milestone struct {
		IssueSimpleMilestone
	} `json:"milestone,omitempty"`
	NodeId      string `json:"node_id,omitempty"`
	Number      int64  `json:"number,omitempty"`
	PullRequest struct {
		IssueSimplePullRequest
	} `json:"pull_request,omitempty"`
	RepositoryUrl string `json:"repository_url,omitempty"`
	State         string `json:"state,omitempty"`
	Title         string `json:"title,omitempty"`
	UpdatedAt     string `json:"updated_at,omitempty"`
	Url           string `json:"url,omitempty"`
	User          struct {
		IssueSimpleUser
	} `json:"user,omitempty"`
}

type IssueSimple2 struct {
	ActiveLockReason string `json:"active_lock_reason,omitempty"`
	Assignee         struct {
		IssueSimple2Assignee
	} `json:"assignee,omitempty"`
	Assignees []struct {
		IssueSimple2Assignee
	} `json:"assignees,omitempty"`
	Body        string `json:"body,omitempty"`
	ClosedAt    string `json:"closed_at,omitempty"`
	Comments    int64  `json:"comments,omitempty"`
	CommentsUrl string `json:"comments_url,omitempty"`
	CreatedAt   string `json:"created_at,omitempty"`
	EventsUrl   string `json:"events_url,omitempty"`
	HtmlUrl     string `json:"html_url,omitempty"`
	Id          int64  `json:"id,omitempty"`
	Labels      []struct {
		IssueSimple2Label
	} `json:"labels,omitempty"`
	LabelsUrl string `json:"labels_url,omitempty"`
	Locked    bool   `json:"locked,omitempty"`
	Milestone struct {
		IssueSimple2Milestone
	} `json:"milestone,omitempty"`
	NodeId      string `json:"node_id,omitempty"`
	Number      int64  `json:"number,omitempty"`
	PullRequest struct {
		IssueSimple2PullRequest
	} `json:"pull_request,omitempty"`
	RepositoryUrl string `json:"repository_url,omitempty"`
	State         string `json:"state,omitempty"`
	Title         string `json:"title,omitempty"`
	UpdatedAt     string `json:"updated_at,omitempty"`
	Url           string `json:"url,omitempty"`
	User          struct {
		IssueSimple2User
	} `json:"user,omitempty"`
}

type IssueSimple2Assignee struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type IssueSimple2Label struct {
	Color       string `json:"color,omitempty"`
	Default     bool   `json:"default,omitempty"`
	Description string `json:"description,omitempty"`
	Id          int64  `json:"id,omitempty"`
	Name        string `json:"name,omitempty"`
	NodeId      string `json:"node_id,omitempty"`
	Url         string `json:"url,omitempty"`
}

type IssueSimple2Milestone struct {
	ClosedAt     string `json:"closed_at,omitempty"`
	ClosedIssues int64  `json:"closed_issues,omitempty"`
	CreatedAt    string `json:"created_at,omitempty"`
	Creator      struct {
		IssueSimple2MilestoneCreator
	} `json:"creator,omitempty"`
	Description string `json:"description,omitempty"`
	DueOn       string `json:"due_on,omitempty"`
	HtmlUrl     string `json:"html_url,omitempty"`
	Id          int64  `json:"id,omitempty"`
	LabelsUrl   string `json:"labels_url,omitempty"`
	NodeId      string `json:"node_id,omitempty"`
	Number      int64  `json:"number,omitempty"`
	OpenIssues  int64  `json:"open_issues,omitempty"`
	State       string `json:"state,omitempty"`
	Title       string `json:"title,omitempty"`
	UpdatedAt   string `json:"updated_at,omitempty"`
	Url         string `json:"url,omitempty"`
}

type IssueSimple2MilestoneCreator struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type IssueSimple2PullRequest struct {
	DiffUrl  string `json:"diff_url,omitempty"`
	HtmlUrl  string `json:"html_url,omitempty"`
	PatchUrl string `json:"patch_url,omitempty"`
	Url      string `json:"url,omitempty"`
}

type IssueSimple2User struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type IssueSimpleAssignee struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type IssueSimpleLabel struct {
	Color       string `json:"color,omitempty"`
	Default     bool   `json:"default,omitempty"`
	Description string `json:"description,omitempty"`
	Id          int64  `json:"id,omitempty"`
	Name        string `json:"name,omitempty"`
	NodeId      string `json:"node_id,omitempty"`
	Url         string `json:"url,omitempty"`
}

type IssueSimpleMilestone struct {
	ClosedAt     string `json:"closed_at,omitempty"`
	ClosedIssues int64  `json:"closed_issues,omitempty"`
	CreatedAt    string `json:"created_at,omitempty"`
	Creator      struct {
		IssueSimpleMilestoneCreator
	} `json:"creator,omitempty"`
	Description string `json:"description,omitempty"`
	DueOn       string `json:"due_on,omitempty"`
	HtmlUrl     string `json:"html_url,omitempty"`
	Id          int64  `json:"id,omitempty"`
	LabelsUrl   string `json:"labels_url,omitempty"`
	NodeId      string `json:"node_id,omitempty"`
	Number      int64  `json:"number,omitempty"`
	OpenIssues  int64  `json:"open_issues,omitempty"`
	State       string `json:"state,omitempty"`
	Title       string `json:"title,omitempty"`
	UpdatedAt   string `json:"updated_at,omitempty"`
	Url         string `json:"url,omitempty"`
}

type IssueSimpleMilestoneCreator struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type IssueSimplePullRequest struct {
	DiffUrl  string `json:"diff_url,omitempty"`
	HtmlUrl  string `json:"html_url,omitempty"`
	PatchUrl string `json:"patch_url,omitempty"`
	Url      string `json:"url,omitempty"`
}

type IssueSimpleUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type IssueUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type IssueWithRepo struct {
	ActiveLockReason string `json:"active_lock_reason,omitempty"`
	Assignee         struct {
		IssueWithRepoAssignee
	} `json:"assignee,omitempty"`
	Assignees []struct {
		IssueWithRepoAssignee
	} `json:"assignees,omitempty"`
	Body        string `json:"body,omitempty"`
	ClosedAt    string `json:"closed_at,omitempty"`
	Comments    int64  `json:"comments,omitempty"`
	CommentsUrl string `json:"comments_url,omitempty"`
	CreatedAt   string `json:"created_at,omitempty"`
	EventsUrl   string `json:"events_url,omitempty"`
	HtmlUrl     string `json:"html_url,omitempty"`
	Id          int64  `json:"id,omitempty"`
	Labels      []struct {
		IssueWithRepoLabel
	} `json:"labels,omitempty"`
	LabelsUrl string `json:"labels_url,omitempty"`
	Locked    bool   `json:"locked,omitempty"`
	Milestone struct {
		IssueWithRepoMilestone
	} `json:"milestone,omitempty"`
	NodeId      string `json:"node_id,omitempty"`
	Number      int64  `json:"number,omitempty"`
	PullRequest struct {
		IssueWithRepoPullRequest
	} `json:"pull_request,omitempty"`
	Repository struct {
		IssueWithRepoRepository
	} `json:"repository,omitempty"`
	RepositoryUrl string `json:"repository_url,omitempty"`
	State         string `json:"state,omitempty"`
	Title         string `json:"title,omitempty"`
	UpdatedAt     string `json:"updated_at,omitempty"`
	Url           string `json:"url,omitempty"`
	User          struct {
		IssueWithRepoUser
	} `json:"user,omitempty"`
}

type IssueWithRepoAssignee struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type IssueWithRepoLabel struct {
	Color       string `json:"color,omitempty"`
	Default     bool   `json:"default,omitempty"`
	Description string `json:"description,omitempty"`
	Id          int64  `json:"id,omitempty"`
	Name        string `json:"name,omitempty"`
	NodeId      string `json:"node_id,omitempty"`
	Url         string `json:"url,omitempty"`
}

type IssueWithRepoMilestone struct {
	ClosedAt     string `json:"closed_at,omitempty"`
	ClosedIssues int64  `json:"closed_issues,omitempty"`
	CreatedAt    string `json:"created_at,omitempty"`
	Creator      struct {
		IssueWithRepoMilestoneCreator
	} `json:"creator,omitempty"`
	Description string `json:"description,omitempty"`
	DueOn       string `json:"due_on,omitempty"`
	HtmlUrl     string `json:"html_url,omitempty"`
	Id          int64  `json:"id,omitempty"`
	LabelsUrl   string `json:"labels_url,omitempty"`
	NodeId      string `json:"node_id,omitempty"`
	Number      int64  `json:"number,omitempty"`
	OpenIssues  int64  `json:"open_issues,omitempty"`
	State       string `json:"state,omitempty"`
	Title       string `json:"title,omitempty"`
	UpdatedAt   string `json:"updated_at,omitempty"`
	Url         string `json:"url,omitempty"`
}

type IssueWithRepoMilestoneCreator struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type IssueWithRepoPullRequest struct {
	DiffUrl  string `json:"diff_url,omitempty"`
	HtmlUrl  string `json:"html_url,omitempty"`
	PatchUrl string `json:"patch_url,omitempty"`
	Url      string `json:"url,omitempty"`
}

type IssueWithRepoRepository struct {
	AllowMergeCommit    bool   `json:"allow_merge_commit,omitempty"`
	AllowRebaseMerge    bool   `json:"allow_rebase_merge,omitempty"`
	AllowSquashMerge    bool   `json:"allow_squash_merge,omitempty"`
	ArchiveUrl          string `json:"archive_url,omitempty"`
	Archived            bool   `json:"archived,omitempty"`
	AssigneesUrl        string `json:"assignees_url,omitempty"`
	BlobsUrl            string `json:"blobs_url,omitempty"`
	BranchesUrl         string `json:"branches_url,omitempty"`
	CloneUrl            string `json:"clone_url,omitempty"`
	CollaboratorsUrl    string `json:"collaborators_url,omitempty"`
	CommentsUrl         string `json:"comments_url,omitempty"`
	CommitsUrl          string `json:"commits_url,omitempty"`
	CompareUrl          string `json:"compare_url,omitempty"`
	ContentsUrl         string `json:"contents_url,omitempty"`
	ContributorsUrl     string `json:"contributors_url,omitempty"`
	CreatedAt           string `json:"created_at,omitempty"`
	DefaultBranch       string `json:"default_branch,omitempty"`
	DeleteBranchOnMerge bool   `json:"delete_branch_on_merge,omitempty"`
	DeploymentsUrl      string `json:"deployments_url,omitempty"`
	Description         string `json:"description,omitempty"`
	Disabled            bool   `json:"disabled,omitempty"`
	DownloadsUrl        string `json:"downloads_url,omitempty"`
	EventsUrl           string `json:"events_url,omitempty"`
	Fork                bool   `json:"fork,omitempty"`
	ForksCount          int64  `json:"forks_count,omitempty"`
	ForksUrl            string `json:"forks_url,omitempty"`
	FullName            string `json:"full_name,omitempty"`
	GitCommitsUrl       string `json:"git_commits_url,omitempty"`
	GitRefsUrl          string `json:"git_refs_url,omitempty"`
	GitTagsUrl          string `json:"git_tags_url,omitempty"`
	GitUrl              string `json:"git_url,omitempty"`
	HasDownloads        bool   `json:"has_downloads,omitempty"`
	HasIssues           bool   `json:"has_issues,omitempty"`
	HasPages            bool   `json:"has_pages,omitempty"`
	HasProjects         bool   `json:"has_projects,omitempty"`
	HasWiki             bool   `json:"has_wiki,omitempty"`
	Homepage            string `json:"homepage,omitempty"`
	HooksUrl            string `json:"hooks_url,omitempty"`
	HtmlUrl             string `json:"html_url,omitempty"`
	Id                  int64  `json:"id,omitempty"`
	IsTemplate          bool   `json:"is_template,omitempty"`
	IssueCommentUrl     string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl      string `json:"issue_events_url,omitempty"`
	IssuesUrl           string `json:"issues_url,omitempty"`
	KeysUrl             string `json:"keys_url,omitempty"`
	LabelsUrl           string `json:"labels_url,omitempty"`
	Language            string `json:"language,omitempty"`
	LanguagesUrl        string `json:"languages_url,omitempty"`
	MergesUrl           string `json:"merges_url,omitempty"`
	MilestonesUrl       string `json:"milestones_url,omitempty"`
	MirrorUrl           string `json:"mirror_url,omitempty"`
	Name                string `json:"name,omitempty"`
	NetworkCount        int64  `json:"network_count,omitempty"`
	NodeId              string `json:"node_id,omitempty"`
	NotificationsUrl    string `json:"notifications_url,omitempty"`
	OpenIssuesCount     int64  `json:"open_issues_count,omitempty"`
	Owner               struct {
		IssueWithRepoRepositoryOwner
	} `json:"owner,omitempty"`
	Permissions struct {
		IssueWithRepoRepositoryPermissions
	} `json:"permissions,omitempty"`
	Private            bool        `json:"private,omitempty"`
	PullsUrl           string      `json:"pulls_url,omitempty"`
	PushedAt           string      `json:"pushed_at,omitempty"`
	ReleasesUrl        string      `json:"releases_url,omitempty"`
	Size               json.Number `json:"size,omitempty"`
	SshUrl             string      `json:"ssh_url,omitempty"`
	StargazersCount    int64       `json:"stargazers_count,omitempty"`
	StargazersUrl      string      `json:"stargazers_url,omitempty"`
	StatusesUrl        string      `json:"statuses_url,omitempty"`
	SubscribersCount   int64       `json:"subscribers_count,omitempty"`
	SubscribersUrl     string      `json:"subscribers_url,omitempty"`
	SubscriptionUrl    string      `json:"subscription_url,omitempty"`
	SvnUrl             string      `json:"svn_url,omitempty"`
	TagsUrl            string      `json:"tags_url,omitempty"`
	TeamsUrl           string      `json:"teams_url,omitempty"`
	TempCloneToken     string      `json:"temp_clone_token,omitempty"`
	TemplateRepository interface{} `json:"template_repository,omitempty"`
	Topics             []string    `json:"topics,omitempty"`
	TreesUrl           string      `json:"trees_url,omitempty"`
	UpdatedAt          string      `json:"updated_at,omitempty"`
	Url                string      `json:"url,omitempty"`
	Visibility         string      `json:"visibility,omitempty"`
	WatchersCount      int64       `json:"watchers_count,omitempty"`
}

type IssueWithRepoRepositoryOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type IssueWithRepoRepositoryPermissions struct {
	Admin bool `json:"admin,omitempty"`
	Pull  bool `json:"pull,omitempty"`
	Push  bool `json:"push,omitempty"`
}

type IssueWithRepoUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type Job struct {
	CheckRunUrl string `json:"check_run_url,omitempty"`
	CompletedAt string `json:"completed_at,omitempty"`
	Conclusion  string `json:"conclusion,omitempty"`
	HeadSha     string `json:"head_sha,omitempty"`
	HtmlUrl     string `json:"html_url,omitempty"`
	Id          int64  `json:"id,omitempty"`
	Name        string `json:"name,omitempty"`
	NodeId      string `json:"node_id,omitempty"`
	RunId       int64  `json:"run_id,omitempty"`
	RunUrl      string `json:"run_url,omitempty"`
	StartedAt   string `json:"started_at,omitempty"`
	Status      string `json:"status,omitempty"`
	Steps       []struct {
		JobStep
	} `json:"steps,omitempty"`
	Url string `json:"url,omitempty"`
}

type JobStep struct {
	CompletedAt string `json:"completed_at"`
	Conclusion  string `json:"conclusion"`
	Name        string `json:"name"`
	Number      int64  `json:"number"`
	StartedAt   string `json:"started_at"`
	Status      string `json:"status"`
}

type KeySimple struct {
	Id  int64  `json:"id,omitempty"`
	Key string `json:"key,omitempty"`
}

type Label struct {
	Color       string `json:"color,omitempty"`
	Default     bool   `json:"default,omitempty"`
	Description string `json:"description,omitempty"`
	Id          int64  `json:"id,omitempty"`
	Name        string `json:"name,omitempty"`
	NodeId      string `json:"node_id,omitempty"`
	Url         string `json:"url,omitempty"`
}

type LabelSearchResultItem struct {
	Color       string      `json:"color"`
	Default     bool        `json:"default"`
	Description string      `json:"description"`
	Id          int64       `json:"id"`
	Name        string      `json:"name"`
	NodeId      string      `json:"node_id"`
	Score       json.Number `json:"score"`
	Url         string      `json:"url"`
}

type Language struct {
	C      json.Number `json:"C,omitempty"`
	Python json.Number `json:"Python,omitempty"`
}

type LegacyReviewComment struct {
	Links struct {
		LegacyReviewCommentLinks
	} `json:"_links,omitempty"`
	AuthorAssociation   string `json:"author_association,omitempty"`
	Body                string `json:"body,omitempty"`
	CommitId            string `json:"commit_id,omitempty"`
	CreatedAt           string `json:"created_at,omitempty"`
	DiffHunk            string `json:"diff_hunk,omitempty"`
	HtmlUrl             string `json:"html_url,omitempty"`
	Id                  int64  `json:"id,omitempty"`
	InReplyToId         int64  `json:"in_reply_to_id,omitempty"`
	NodeId              string `json:"node_id,omitempty"`
	OriginalCommitId    string `json:"original_commit_id,omitempty"`
	OriginalPosition    int64  `json:"original_position,omitempty"`
	Path                string `json:"path,omitempty"`
	Position            int64  `json:"position,omitempty"`
	PullRequestReviewId int64  `json:"pull_request_review_id,omitempty"`
	PullRequestUrl      string `json:"pull_request_url,omitempty"`
	UpdatedAt           string `json:"updated_at,omitempty"`
	Url                 string `json:"url,omitempty"`
	User                struct {
		LegacyReviewCommentUser
	} `json:"user,omitempty"`
}

type LegacyReviewCommentLinks struct {
	Html struct {
		LegacyReviewCommentLinksHtml
	} `json:"html,omitempty"`
	PullRequest struct {
		LegacyReviewCommentLinksPullRequest
	} `json:"pull_request,omitempty"`
	Self struct {
		LegacyReviewCommentLinksSelf
	} `json:"self,omitempty"`
}

type LegacyReviewCommentLinksHtml struct {
	Href string `json:"href,omitempty"`
}

type LegacyReviewCommentLinksPullRequest struct {
	Href string `json:"href,omitempty"`
}

type LegacyReviewCommentLinksSelf struct {
	Href string `json:"href,omitempty"`
}

type LegacyReviewCommentUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type License struct {
	Body           string   `json:"body,omitempty"`
	Conditions     []string `json:"conditions,omitempty"`
	Description    string   `json:"description,omitempty"`
	Featured       bool     `json:"featured,omitempty"`
	HtmlUrl        string   `json:"html_url,omitempty"`
	Implementation string   `json:"implementation,omitempty"`
	Key            string   `json:"key,omitempty"`
	Limitations    []string `json:"limitations,omitempty"`
	Name           string   `json:"name,omitempty"`
	NodeId         string   `json:"node_id,omitempty"`
	Permissions    []string `json:"permissions,omitempty"`
	SpdxId         string   `json:"spdx_id,omitempty"`
	Url            string   `json:"url,omitempty"`
}

type LicenseContent struct {
	Links struct {
		LicenseContentLinks
	} `json:"_links,omitempty"`
	Content     string `json:"content,omitempty"`
	DownloadUrl string `json:"download_url,omitempty"`
	Encoding    string `json:"encoding,omitempty"`
	GitUrl      string `json:"git_url,omitempty"`
	HtmlUrl     string `json:"html_url,omitempty"`
	License     struct {
		LicenseContentLicense
	} `json:"license,omitempty"`
	Name string      `json:"name,omitempty"`
	Path string      `json:"path,omitempty"`
	Sha  string      `json:"sha,omitempty"`
	Size json.Number `json:"size,omitempty"`
	Type string      `json:"type,omitempty"`
	Url  string      `json:"url,omitempty"`
}

type LicenseContentLinks struct {
	Git  string `json:"git,omitempty"`
	Html string `json:"html,omitempty"`
	Self string `json:"self,omitempty"`
}

type LicenseContentLicense struct {
	Key    string `json:"key,omitempty"`
	Name   string `json:"name,omitempty"`
	NodeId string `json:"node_id,omitempty"`
	SpdxId string `json:"spdx_id,omitempty"`
	Url    string `json:"url,omitempty"`
}

type LicenseSimple struct {
	Key    string `json:"key,omitempty"`
	Name   string `json:"name,omitempty"`
	NodeId string `json:"node_id,omitempty"`
	SpdxId string `json:"spdx_id,omitempty"`
	Url    string `json:"url,omitempty"`
}

type MarketplaceListingPlan struct {
	AccountsUrl         string   `json:"accounts_url,omitempty"`
	Bullets             []string `json:"bullets,omitempty"`
	Description         string   `json:"description,omitempty"`
	HasFreeTrial        bool     `json:"has_free_trial,omitempty"`
	Id                  int64    `json:"id,omitempty"`
	MonthlyPriceInCents int64    `json:"monthly_price_in_cents,omitempty"`
	Name                string   `json:"name,omitempty"`
	Number              int64    `json:"number,omitempty"`
	PriceModel          string   `json:"price_model,omitempty"`
	State               string   `json:"state,omitempty"`
	UnitName            string   `json:"unit_name,omitempty"`
	Url                 string   `json:"url,omitempty"`
	YearlyPriceInCents  int64    `json:"yearly_price_in_cents,omitempty"`
}

type MarketplacePurchase struct {
	Email                    string `json:"email,omitempty"`
	Id                       int64  `json:"id,omitempty"`
	Login                    string `json:"login,omitempty"`
	MarketplacePendingChange struct {
		MarketplacePurchaseMarketplacePendingChange
	} `json:"marketplace_pending_change,omitempty"`
	MarketplacePurchase struct {
		MarketplacePurchaseMarketplacePurchase
	} `json:"marketplace_purchase,omitempty"`
	OrganizationBillingEmail string `json:"organization_billing_email,omitempty"`
	Type                     string `json:"type,omitempty"`
	Url                      string `json:"url,omitempty"`
}

type MarketplacePurchaseMarketplacePendingChange struct {
	EffectiveDate string `json:"effective_date,omitempty"`
	Id            int64  `json:"id,omitempty"`
	Plan          struct {
		MarketplacePurchaseMarketplacePendingChangePlan
	} `json:"plan,omitempty"`
	UnitCount int64 `json:"unit_count,omitempty"`
}

type MarketplacePurchaseMarketplacePendingChangePlan struct {
	AccountsUrl         string   `json:"accounts_url,omitempty"`
	Bullets             []string `json:"bullets,omitempty"`
	Description         string   `json:"description,omitempty"`
	HasFreeTrial        bool     `json:"has_free_trial,omitempty"`
	Id                  int64    `json:"id,omitempty"`
	MonthlyPriceInCents int64    `json:"monthly_price_in_cents,omitempty"`
	Name                string   `json:"name,omitempty"`
	Number              int64    `json:"number,omitempty"`
	PriceModel          string   `json:"price_model,omitempty"`
	State               string   `json:"state,omitempty"`
	UnitName            string   `json:"unit_name,omitempty"`
	Url                 string   `json:"url,omitempty"`
	YearlyPriceInCents  int64    `json:"yearly_price_in_cents,omitempty"`
}

type MarketplacePurchaseMarketplacePurchase struct {
	BillingCycle    string `json:"billing_cycle,omitempty"`
	FreeTrialEndsOn string `json:"free_trial_ends_on,omitempty"`
	NextBillingDate string `json:"next_billing_date,omitempty"`
	OnFreeTrial     bool   `json:"on_free_trial,omitempty"`
	Plan            struct {
		MarketplacePurchaseMarketplacePurchasePlan
	} `json:"plan,omitempty"`
	UnitCount int64  `json:"unit_count,omitempty"`
	UpdatedAt string `json:"updated_at,omitempty"`
}

type MarketplacePurchaseMarketplacePurchasePlan struct {
	AccountsUrl         string   `json:"accounts_url,omitempty"`
	Bullets             []string `json:"bullets,omitempty"`
	Description         string   `json:"description,omitempty"`
	HasFreeTrial        bool     `json:"has_free_trial,omitempty"`
	Id                  int64    `json:"id,omitempty"`
	MonthlyPriceInCents int64    `json:"monthly_price_in_cents,omitempty"`
	Name                string   `json:"name,omitempty"`
	Number              int64    `json:"number,omitempty"`
	PriceModel          string   `json:"price_model,omitempty"`
	State               string   `json:"state,omitempty"`
	UnitName            string   `json:"unit_name,omitempty"`
	Url                 string   `json:"url,omitempty"`
	YearlyPriceInCents  int64    `json:"yearly_price_in_cents,omitempty"`
}

type Migration struct {
	CreatedAt          string `json:"created_at,omitempty"`
	ExcludeAttachments bool   `json:"exclude_attachments,omitempty"`
	Guid               string `json:"guid,omitempty"`
	Id                 int64  `json:"id,omitempty"`
	LockRepositories   bool   `json:"lock_repositories,omitempty"`
	Owner              struct {
		MigrationOwner
	} `json:"owner,omitempty"`
	Repositories []struct {
		MigrationRepository
	} `json:"repositories,omitempty"`
	State     string `json:"state,omitempty"`
	UpdatedAt string `json:"updated_at,omitempty"`
	Url       string `json:"url,omitempty"`
}

type MigrationOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type MigrationRepository struct {
	AllowMergeCommit    bool   `json:"allow_merge_commit,omitempty"`
	AllowRebaseMerge    bool   `json:"allow_rebase_merge,omitempty"`
	AllowSquashMerge    bool   `json:"allow_squash_merge,omitempty"`
	ArchiveUrl          string `json:"archive_url,omitempty"`
	Archived            bool   `json:"archived,omitempty"`
	AssigneesUrl        string `json:"assignees_url,omitempty"`
	BlobsUrl            string `json:"blobs_url,omitempty"`
	BranchesUrl         string `json:"branches_url,omitempty"`
	CloneUrl            string `json:"clone_url,omitempty"`
	CollaboratorsUrl    string `json:"collaborators_url,omitempty"`
	CommentsUrl         string `json:"comments_url,omitempty"`
	CommitsUrl          string `json:"commits_url,omitempty"`
	CompareUrl          string `json:"compare_url,omitempty"`
	ContentsUrl         string `json:"contents_url,omitempty"`
	ContributorsUrl     string `json:"contributors_url,omitempty"`
	CreatedAt           string `json:"created_at,omitempty"`
	DefaultBranch       string `json:"default_branch,omitempty"`
	DeleteBranchOnMerge bool   `json:"delete_branch_on_merge,omitempty"`
	DeploymentsUrl      string `json:"deployments_url,omitempty"`
	Description         string `json:"description,omitempty"`
	Disabled            bool   `json:"disabled,omitempty"`
	DownloadsUrl        string `json:"downloads_url,omitempty"`
	EventsUrl           string `json:"events_url,omitempty"`
	Fork                bool   `json:"fork,omitempty"`
	ForksCount          int64  `json:"forks_count,omitempty"`
	ForksUrl            string `json:"forks_url,omitempty"`
	FullName            string `json:"full_name,omitempty"`
	GitCommitsUrl       string `json:"git_commits_url,omitempty"`
	GitRefsUrl          string `json:"git_refs_url,omitempty"`
	GitTagsUrl          string `json:"git_tags_url,omitempty"`
	GitUrl              string `json:"git_url,omitempty"`
	HasDownloads        bool   `json:"has_downloads,omitempty"`
	HasIssues           bool   `json:"has_issues,omitempty"`
	HasPages            bool   `json:"has_pages,omitempty"`
	HasProjects         bool   `json:"has_projects,omitempty"`
	HasWiki             bool   `json:"has_wiki,omitempty"`
	Homepage            string `json:"homepage,omitempty"`
	HooksUrl            string `json:"hooks_url,omitempty"`
	HtmlUrl             string `json:"html_url,omitempty"`
	Id                  int64  `json:"id,omitempty"`
	IsTemplate          bool   `json:"is_template,omitempty"`
	IssueCommentUrl     string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl      string `json:"issue_events_url,omitempty"`
	IssuesUrl           string `json:"issues_url,omitempty"`
	KeysUrl             string `json:"keys_url,omitempty"`
	LabelsUrl           string `json:"labels_url,omitempty"`
	Language            string `json:"language,omitempty"`
	LanguagesUrl        string `json:"languages_url,omitempty"`
	MergesUrl           string `json:"merges_url,omitempty"`
	MilestonesUrl       string `json:"milestones_url,omitempty"`
	MirrorUrl           string `json:"mirror_url,omitempty"`
	Name                string `json:"name,omitempty"`
	NetworkCount        int64  `json:"network_count,omitempty"`
	NodeId              string `json:"node_id,omitempty"`
	NotificationsUrl    string `json:"notifications_url,omitempty"`
	OpenIssuesCount     int64  `json:"open_issues_count,omitempty"`
	Owner               struct {
		MigrationRepositoryOwner
	} `json:"owner,omitempty"`
	Permissions struct {
		MigrationRepositoryPermissions
	} `json:"permissions,omitempty"`
	Private            bool        `json:"private,omitempty"`
	PullsUrl           string      `json:"pulls_url,omitempty"`
	PushedAt           string      `json:"pushed_at,omitempty"`
	ReleasesUrl        string      `json:"releases_url,omitempty"`
	Size               json.Number `json:"size,omitempty"`
	SshUrl             string      `json:"ssh_url,omitempty"`
	StargazersCount    int64       `json:"stargazers_count,omitempty"`
	StargazersUrl      string      `json:"stargazers_url,omitempty"`
	StatusesUrl        string      `json:"statuses_url,omitempty"`
	SubscribersCount   int64       `json:"subscribers_count,omitempty"`
	SubscribersUrl     string      `json:"subscribers_url,omitempty"`
	SubscriptionUrl    string      `json:"subscription_url,omitempty"`
	SvnUrl             string      `json:"svn_url,omitempty"`
	TagsUrl            string      `json:"tags_url,omitempty"`
	TeamsUrl           string      `json:"teams_url,omitempty"`
	TempCloneToken     string      `json:"temp_clone_token,omitempty"`
	TemplateRepository interface{} `json:"template_repository,omitempty"`
	Topics             []string    `json:"topics,omitempty"`
	TreesUrl           string      `json:"trees_url,omitempty"`
	UpdatedAt          string      `json:"updated_at,omitempty"`
	Url                string      `json:"url,omitempty"`
	Visibility         string      `json:"visibility,omitempty"`
	WatchersCount      int64       `json:"watchers_count,omitempty"`
}

type MigrationRepositoryOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type MigrationRepositoryPermissions struct {
	Admin bool `json:"admin,omitempty"`
	Pull  bool `json:"pull,omitempty"`
	Push  bool `json:"push,omitempty"`
}

type MigrationWithShortOrg struct {
	CreatedAt          string `json:"created_at,omitempty"`
	ExcludeAttachments bool   `json:"exclude_attachments,omitempty"`
	Guid               string `json:"guid,omitempty"`
	Id                 int64  `json:"id,omitempty"`
	LockRepositories   bool   `json:"lock_repositories,omitempty"`
	Owner              struct {
		MigrationWithShortOrgOwner
	} `json:"owner,omitempty"`
	Repositories []struct {
		MigrationWithShortOrgRepository
	} `json:"repositories,omitempty"`
	State     string `json:"state,omitempty"`
	UpdatedAt string `json:"updated_at,omitempty"`
	Url       string `json:"url,omitempty"`
}

type MigrationWithShortOrgOwner struct {
	AvatarUrl        string `json:"avatar_url,omitempty"`
	Description      string `json:"description,omitempty"`
	EventsUrl        string `json:"events_url,omitempty"`
	HooksUrl         string `json:"hooks_url,omitempty"`
	Id               int64  `json:"id,omitempty"`
	IssuesUrl        string `json:"issues_url,omitempty"`
	Login            string `json:"login,omitempty"`
	MembersUrl       string `json:"members_url,omitempty"`
	NodeId           string `json:"node_id,omitempty"`
	PublicMembersUrl string `json:"public_members_url,omitempty"`
	ReposUrl         string `json:"repos_url,omitempty"`
	Url              string `json:"url,omitempty"`
}

type MigrationWithShortOrgRepository struct {
	AllowMergeCommit    bool   `json:"allow_merge_commit,omitempty"`
	AllowRebaseMerge    bool   `json:"allow_rebase_merge,omitempty"`
	AllowSquashMerge    bool   `json:"allow_squash_merge,omitempty"`
	ArchiveUrl          string `json:"archive_url,omitempty"`
	Archived            bool   `json:"archived,omitempty"`
	AssigneesUrl        string `json:"assignees_url,omitempty"`
	BlobsUrl            string `json:"blobs_url,omitempty"`
	BranchesUrl         string `json:"branches_url,omitempty"`
	CloneUrl            string `json:"clone_url,omitempty"`
	CollaboratorsUrl    string `json:"collaborators_url,omitempty"`
	CommentsUrl         string `json:"comments_url,omitempty"`
	CommitsUrl          string `json:"commits_url,omitempty"`
	CompareUrl          string `json:"compare_url,omitempty"`
	ContentsUrl         string `json:"contents_url,omitempty"`
	ContributorsUrl     string `json:"contributors_url,omitempty"`
	CreatedAt           string `json:"created_at,omitempty"`
	DefaultBranch       string `json:"default_branch,omitempty"`
	DeleteBranchOnMerge bool   `json:"delete_branch_on_merge,omitempty"`
	DeploymentsUrl      string `json:"deployments_url,omitempty"`
	Description         string `json:"description,omitempty"`
	Disabled            bool   `json:"disabled,omitempty"`
	DownloadsUrl        string `json:"downloads_url,omitempty"`
	EventsUrl           string `json:"events_url,omitempty"`
	Fork                bool   `json:"fork,omitempty"`
	ForksCount          int64  `json:"forks_count,omitempty"`
	ForksUrl            string `json:"forks_url,omitempty"`
	FullName            string `json:"full_name,omitempty"`
	GitCommitsUrl       string `json:"git_commits_url,omitempty"`
	GitRefsUrl          string `json:"git_refs_url,omitempty"`
	GitTagsUrl          string `json:"git_tags_url,omitempty"`
	GitUrl              string `json:"git_url,omitempty"`
	HasDownloads        bool   `json:"has_downloads,omitempty"`
	HasIssues           bool   `json:"has_issues,omitempty"`
	HasPages            bool   `json:"has_pages,omitempty"`
	HasProjects         bool   `json:"has_projects,omitempty"`
	HasWiki             bool   `json:"has_wiki,omitempty"`
	Homepage            string `json:"homepage,omitempty"`
	HooksUrl            string `json:"hooks_url,omitempty"`
	HtmlUrl             string `json:"html_url,omitempty"`
	Id                  int64  `json:"id,omitempty"`
	IsTemplate          bool   `json:"is_template,omitempty"`
	IssueCommentUrl     string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl      string `json:"issue_events_url,omitempty"`
	IssuesUrl           string `json:"issues_url,omitempty"`
	KeysUrl             string `json:"keys_url,omitempty"`
	LabelsUrl           string `json:"labels_url,omitempty"`
	Language            string `json:"language,omitempty"`
	LanguagesUrl        string `json:"languages_url,omitempty"`
	MergesUrl           string `json:"merges_url,omitempty"`
	MilestonesUrl       string `json:"milestones_url,omitempty"`
	MirrorUrl           string `json:"mirror_url,omitempty"`
	Name                string `json:"name,omitempty"`
	NetworkCount        int64  `json:"network_count,omitempty"`
	NodeId              string `json:"node_id,omitempty"`
	NotificationsUrl    string `json:"notifications_url,omitempty"`
	OpenIssuesCount     int64  `json:"open_issues_count,omitempty"`
	Owner               struct {
		MigrationWithShortOrgRepositoryOwner
	} `json:"owner,omitempty"`
	Permissions struct {
		MigrationWithShortOrgRepositoryPermissions
	} `json:"permissions,omitempty"`
	Private            bool        `json:"private,omitempty"`
	PullsUrl           string      `json:"pulls_url,omitempty"`
	PushedAt           string      `json:"pushed_at,omitempty"`
	ReleasesUrl        string      `json:"releases_url,omitempty"`
	Size               json.Number `json:"size,omitempty"`
	SshUrl             string      `json:"ssh_url,omitempty"`
	StargazersCount    int64       `json:"stargazers_count,omitempty"`
	StargazersUrl      string      `json:"stargazers_url,omitempty"`
	StatusesUrl        string      `json:"statuses_url,omitempty"`
	SubscribersCount   int64       `json:"subscribers_count,omitempty"`
	SubscribersUrl     string      `json:"subscribers_url,omitempty"`
	SubscriptionUrl    string      `json:"subscription_url,omitempty"`
	SvnUrl             string      `json:"svn_url,omitempty"`
	TagsUrl            string      `json:"tags_url,omitempty"`
	TeamsUrl           string      `json:"teams_url,omitempty"`
	TempCloneToken     string      `json:"temp_clone_token,omitempty"`
	TemplateRepository interface{} `json:"template_repository,omitempty"`
	Topics             []string    `json:"topics,omitempty"`
	TreesUrl           string      `json:"trees_url,omitempty"`
	UpdatedAt          string      `json:"updated_at,omitempty"`
	Url                string      `json:"url,omitempty"`
	Visibility         string      `json:"visibility,omitempty"`
	WatchersCount      int64       `json:"watchers_count,omitempty"`
}

type MigrationWithShortOrgRepositoryOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type MigrationWithShortOrgRepositoryPermissions struct {
	Admin bool `json:"admin,omitempty"`
	Pull  bool `json:"pull,omitempty"`
	Push  bool `json:"push,omitempty"`
}

type Milestone struct {
	ClosedAt     string `json:"closed_at,omitempty"`
	ClosedIssues int64  `json:"closed_issues,omitempty"`
	CreatedAt    string `json:"created_at,omitempty"`
	Creator      struct {
		MilestoneCreator
	} `json:"creator,omitempty"`
	Description string `json:"description,omitempty"`
	DueOn       string `json:"due_on,omitempty"`
	HtmlUrl     string `json:"html_url,omitempty"`
	Id          int64  `json:"id,omitempty"`
	LabelsUrl   string `json:"labels_url,omitempty"`
	NodeId      string `json:"node_id,omitempty"`
	Number      int64  `json:"number,omitempty"`
	OpenIssues  int64  `json:"open_issues,omitempty"`
	State       string `json:"state,omitempty"`
	Title       string `json:"title,omitempty"`
	UpdatedAt   string `json:"updated_at,omitempty"`
	Url         string `json:"url,omitempty"`
}

type MilestoneCreator struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type MinimalRepository struct {
	ArchiveUrl          string `json:"archive_url,omitempty"`
	Archived            bool   `json:"archived,omitempty"`
	AssigneesUrl        string `json:"assignees_url,omitempty"`
	BlobsUrl            string `json:"blobs_url,omitempty"`
	BranchesUrl         string `json:"branches_url,omitempty"`
	CloneUrl            string `json:"clone_url,omitempty"`
	CollaboratorsUrl    string `json:"collaborators_url,omitempty"`
	CommentsUrl         string `json:"comments_url,omitempty"`
	CommitsUrl          string `json:"commits_url,omitempty"`
	CompareUrl          string `json:"compare_url,omitempty"`
	ContentsUrl         string `json:"contents_url,omitempty"`
	ContributorsUrl     string `json:"contributors_url,omitempty"`
	CreatedAt           string `json:"created_at,omitempty"`
	DefaultBranch       string `json:"default_branch,omitempty"`
	DeleteBranchOnMerge bool   `json:"delete_branch_on_merge,omitempty"`
	DeploymentsUrl      string `json:"deployments_url,omitempty"`
	Description         string `json:"description,omitempty"`
	Disabled            bool   `json:"disabled,omitempty"`
	DownloadsUrl        string `json:"downloads_url,omitempty"`
	EventsUrl           string `json:"events_url,omitempty"`
	Fork                bool   `json:"fork,omitempty"`
	ForksCount          int64  `json:"forks_count,omitempty"`
	ForksUrl            string `json:"forks_url,omitempty"`
	FullName            string `json:"full_name,omitempty"`
	GitCommitsUrl       string `json:"git_commits_url,omitempty"`
	GitRefsUrl          string `json:"git_refs_url,omitempty"`
	GitTagsUrl          string `json:"git_tags_url,omitempty"`
	GitUrl              string `json:"git_url,omitempty"`
	HasDownloads        bool   `json:"has_downloads,omitempty"`
	HasIssues           bool   `json:"has_issues,omitempty"`
	HasPages            bool   `json:"has_pages,omitempty"`
	HasProjects         bool   `json:"has_projects,omitempty"`
	HasWiki             bool   `json:"has_wiki,omitempty"`
	Homepage            string `json:"homepage,omitempty"`
	HooksUrl            string `json:"hooks_url,omitempty"`
	HtmlUrl             string `json:"html_url,omitempty"`
	Id                  int64  `json:"id,omitempty"`
	IsTemplate          bool   `json:"is_template,omitempty"`
	IssueCommentUrl     string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl      string `json:"issue_events_url,omitempty"`
	IssuesUrl           string `json:"issues_url,omitempty"`
	KeysUrl             string `json:"keys_url,omitempty"`
	LabelsUrl           string `json:"labels_url,omitempty"`
	Language            string `json:"language,omitempty"`
	LanguagesUrl        string `json:"languages_url,omitempty"`
	License             struct {
		MinimalRepositoryLicense
	} `json:"license,omitempty"`
	MergesUrl        string `json:"merges_url,omitempty"`
	MilestonesUrl    string `json:"milestones_url,omitempty"`
	MirrorUrl        string `json:"mirror_url,omitempty"`
	Name             string `json:"name,omitempty"`
	NetworkCount     int64  `json:"network_count,omitempty"`
	NodeId           string `json:"node_id,omitempty"`
	NotificationsUrl string `json:"notifications_url,omitempty"`
	OpenIssuesCount  int64  `json:"open_issues_count,omitempty"`
	Owner            struct {
		MinimalRepositoryOwner
	} `json:"owner,omitempty"`
	Permissions struct {
		MinimalRepositoryPermissions
	} `json:"permissions,omitempty"`
	Private            bool        `json:"private,omitempty"`
	PullsUrl           string      `json:"pulls_url,omitempty"`
	PushedAt           string      `json:"pushed_at,omitempty"`
	ReleasesUrl        string      `json:"releases_url,omitempty"`
	Size               json.Number `json:"size,omitempty"`
	SshUrl             string      `json:"ssh_url,omitempty"`
	StargazersCount    int64       `json:"stargazers_count,omitempty"`
	StargazersUrl      string      `json:"stargazers_url,omitempty"`
	StatusesUrl        string      `json:"statuses_url,omitempty"`
	SubscribersCount   int64       `json:"subscribers_count,omitempty"`
	SubscribersUrl     string      `json:"subscribers_url,omitempty"`
	SubscriptionUrl    string      `json:"subscription_url,omitempty"`
	SvnUrl             string      `json:"svn_url,omitempty"`
	TagsUrl            string      `json:"tags_url,omitempty"`
	TeamsUrl           string      `json:"teams_url,omitempty"`
	TempCloneToken     string      `json:"temp_clone_token,omitempty"`
	TemplateRepository interface{} `json:"template_repository,omitempty"`
	Topics             []string    `json:"topics,omitempty"`
	TreesUrl           string      `json:"trees_url,omitempty"`
	UpdatedAt          string      `json:"updated_at,omitempty"`
	Url                string      `json:"url,omitempty"`
	Visibility         string      `json:"visibility,omitempty"`
	WatchersCount      int64       `json:"watchers_count,omitempty"`
}

type MinimalRepositoryLicense struct {
	Key    string `json:"key,omitempty"`
	Name   string `json:"name,omitempty"`
	NodeId string `json:"node_id,omitempty"`
	SpdxId string `json:"spdx_id,omitempty"`
	Url    string `json:"url,omitempty"`
}

type MinimalRepositoryOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type MinimalRepositoryPermissions struct {
	Admin bool `json:"admin,omitempty"`
	Pull  bool `json:"pull,omitempty"`
	Push  bool `json:"push,omitempty"`
}

type OrgHook struct {
	Active bool `json:"active,omitempty"`
	Config struct {
		OrgHookConfig
	} `json:"config,omitempty"`
	CreatedAt string   `json:"created_at,omitempty"`
	Events    []string `json:"events,omitempty"`
	Id        int64    `json:"id,omitempty"`
	Name      string   `json:"name,omitempty"`
	PingUrl   string   `json:"ping_url,omitempty"`
	UpdatedAt string   `json:"updated_at,omitempty"`
	Url       string   `json:"url,omitempty"`
}

type OrgHookConfig struct {
	ContentType string `json:"content_type,omitempty"`
	Url         string `json:"url,omitempty"`
}

type OrgMembership struct {
	Organization struct {
		OrgMembershipOrganization
	} `json:"organization,omitempty"`
	OrganizationUrl string `json:"organization_url,omitempty"`
	Role            string `json:"role,omitempty"`
	State           string `json:"state,omitempty"`
	Url             string `json:"url,omitempty"`
	User            struct {
		OrgMembershipUser
	} `json:"user,omitempty"`
}

type OrgMembershipOrganization struct {
	AvatarUrl        string `json:"avatar_url,omitempty"`
	Description      string `json:"description,omitempty"`
	EventsUrl        string `json:"events_url,omitempty"`
	HooksUrl         string `json:"hooks_url,omitempty"`
	Id               int64  `json:"id,omitempty"`
	IssuesUrl        string `json:"issues_url,omitempty"`
	Login            string `json:"login,omitempty"`
	MembersUrl       string `json:"members_url,omitempty"`
	NodeId           string `json:"node_id,omitempty"`
	PublicMembersUrl string `json:"public_members_url,omitempty"`
	ReposUrl         string `json:"repos_url,omitempty"`
	Url              string `json:"url,omitempty"`
}

type OrgMembershipUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type OrganizationActionsSecret struct {
	CreatedAt               string `json:"created_at,omitempty"`
	Name                    string `json:"name,omitempty"`
	SelectedRepositoriesUrl string `json:"selected_repositories_url,omitempty"`
	UpdatedAt               string `json:"updated_at,omitempty"`
	Visibility              string `json:"visibility,omitempty"`
}

type OrganizationActionsSecret2 struct {
	CreatedAt               string `json:"created_at"`
	Name                    string `json:"name"`
	SelectedRepositoriesUrl string `json:"selected_repositories_url,omitempty"`
	UpdatedAt               string `json:"updated_at"`
	Visibility              string `json:"visibility"`
}

type OrganizationFull struct {
	AvatarUrl                            string      `json:"avatar_url,omitempty"`
	BillingEmail                         string      `json:"billing_email,omitempty"`
	Blog                                 string      `json:"blog,omitempty"`
	Collaborators                        int64       `json:"collaborators,omitempty"`
	Company                              string      `json:"company,omitempty"`
	CreatedAt                            string      `json:"created_at,omitempty"`
	DefaultRepositoryPermission          string      `json:"default_repository_permission,omitempty"`
	Description                          string      `json:"description,omitempty"`
	DiskUsage                            json.Number `json:"disk_usage,omitempty"`
	Email                                string      `json:"email,omitempty"`
	EventsUrl                            string      `json:"events_url,omitempty"`
	Followers                            int64       `json:"followers,omitempty"`
	Following                            int64       `json:"following,omitempty"`
	HasOrganizationProjects              bool        `json:"has_organization_projects,omitempty"`
	HasRepositoryProjects                bool        `json:"has_repository_projects,omitempty"`
	HooksUrl                             string      `json:"hooks_url,omitempty"`
	HtmlUrl                              string      `json:"html_url,omitempty"`
	Id                                   int64       `json:"id,omitempty"`
	IsVerified                           bool        `json:"is_verified,omitempty"`
	IssuesUrl                            string      `json:"issues_url,omitempty"`
	Location                             string      `json:"location,omitempty"`
	Login                                string      `json:"login,omitempty"`
	MembersAllowedRepositoryCreationType string      `json:"members_allowed_repository_creation_type,omitempty"`
	MembersCanCreateInternalRepositories bool        `json:"members_can_create_internal_repositories,omitempty"`
	MembersCanCreatePrivateRepositories  bool        `json:"members_can_create_private_repositories,omitempty"`
	MembersCanCreatePublicRepositories   bool        `json:"members_can_create_public_repositories,omitempty"`
	MembersCanCreateRepositories         bool        `json:"members_can_create_repositories,omitempty"`
	MembersUrl                           string      `json:"members_url,omitempty"`
	Name                                 string      `json:"name,omitempty"`
	NodeId                               string      `json:"node_id,omitempty"`
	OwnedPrivateRepos                    int64       `json:"owned_private_repos,omitempty"`
	Plan                                 struct {
		OrganizationFullPlan
	} `json:"plan,omitempty"`
	PrivateGists                int64  `json:"private_gists,omitempty"`
	PublicGists                 int64  `json:"public_gists,omitempty"`
	PublicMembersUrl            string `json:"public_members_url,omitempty"`
	PublicRepos                 int64  `json:"public_repos,omitempty"`
	ReposUrl                    string `json:"repos_url,omitempty"`
	TotalPrivateRepos           int64  `json:"total_private_repos,omitempty"`
	TwitterUsername             string `json:"twitter_username,omitempty"`
	TwoFactorRequirementEnabled bool   `json:"two_factor_requirement_enabled,omitempty"`
	Type                        string `json:"type,omitempty"`
	Url                         string `json:"url,omitempty"`
}

type OrganizationFullPlan struct {
	FilledSeats  json.Number `json:"filled_seats,omitempty"`
	Name         string      `json:"name,omitempty"`
	PrivateRepos int64       `json:"private_repos,omitempty"`
	Seats        json.Number `json:"seats,omitempty"`
	Space        json.Number `json:"space,omitempty"`
}

type OrganizationInvitation struct {
	CreatedAt         string `json:"created_at,omitempty"`
	Email             string `json:"email,omitempty"`
	Id                int64  `json:"id,omitempty"`
	InvitationTeamUrl string `json:"invitation_team_url,omitempty"`
	Inviter           struct {
		OrganizationInvitationInviter
	} `json:"inviter,omitempty"`
	Login     string `json:"login,omitempty"`
	Role      string `json:"role,omitempty"`
	TeamCount int64  `json:"team_count,omitempty"`
}

type OrganizationInvitationInviter struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type OrganizationSimple struct {
	AvatarUrl        string `json:"avatar_url,omitempty"`
	Description      string `json:"description,omitempty"`
	EventsUrl        string `json:"events_url,omitempty"`
	HooksUrl         string `json:"hooks_url,omitempty"`
	Id               int64  `json:"id,omitempty"`
	IssuesUrl        string `json:"issues_url,omitempty"`
	Login            string `json:"login,omitempty"`
	MembersUrl       string `json:"members_url,omitempty"`
	NodeId           string `json:"node_id,omitempty"`
	PublicMembersUrl string `json:"public_members_url,omitempty"`
	ReposUrl         string `json:"repos_url,omitempty"`
	Url              string `json:"url,omitempty"`
}

type PackagesBillingUsage struct {

	// Free storage space (GB) for GitHub Packages.
	IncludedGigabytesBandwidth json.Number `json:"included_gigabytes_bandwidth,omitempty"`

	// Sum of the free and paid storage space (GB) for GitHuub Packages.
	TotalGigabytesBandwidthUsed json.Number `json:"total_gigabytes_bandwidth_used,omitempty"`

	// Total paid storage space (GB) for GitHuub Packages.
	TotalPaidGigabytesBandwidthUsed json.Number `json:"total_paid_gigabytes_bandwidth_used,omitempty"`
}

type Page struct {
	Cname     string `json:"cname,omitempty"`
	Custom404 bool   `json:"custom_404,omitempty"`
	HtmlUrl   string `json:"html_url,omitempty"`
	Source    struct {
		PageSource
	} `json:"source,omitempty"`
	Status string `json:"status,omitempty"`
	Url    string `json:"url,omitempty"`
}

type PageBuild struct {
	Commit    string `json:"commit,omitempty"`
	CreatedAt string `json:"created_at,omitempty"`
	Duration  int64  `json:"duration,omitempty"`
	Error     struct {
		PageBuildError
	} `json:"error,omitempty"`
	Pusher struct {
		PageBuildPusher
	} `json:"pusher,omitempty"`
	Status    string `json:"status,omitempty"`
	UpdatedAt string `json:"updated_at,omitempty"`
	Url       string `json:"url,omitempty"`
}

type PageBuildError struct {
	Message string `json:"message,omitempty"`
}

type PageBuildPusher struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type PageBuildStatus struct {
	Status string `json:"status,omitempty"`
	Url    string `json:"url,omitempty"`
}

type PageSource struct {
	Branch    string `json:"branch,omitempty"`
	Directory string `json:"directory,omitempty"`
}

type ParticipationStats struct {
	All   []json.Number `json:"all,omitempty"`
	Owner []json.Number `json:"owner,omitempty"`
}

type PorterAuthor struct {
	Email      string `json:"email,omitempty"`
	Id         int64  `json:"id,omitempty"`
	ImportUrl  string `json:"import_url,omitempty"`
	Name       string `json:"name,omitempty"`
	RemoteId   string `json:"remote_id,omitempty"`
	RemoteName string `json:"remote_name,omitempty"`
	Url        string `json:"url,omitempty"`
}

type PorterLargeFile struct {
	Oid     string      `json:"oid,omitempty"`
	Path    string      `json:"path,omitempty"`
	RefName string      `json:"ref_name,omitempty"`
	Size    json.Number `json:"size,omitempty"`
}

type PrivateUser struct {
	AvatarUrl         string      `json:"avatar_url,omitempty"`
	Bio               string      `json:"bio,omitempty"`
	Blog              string      `json:"blog,omitempty"`
	Collaborators     int64       `json:"collaborators,omitempty"`
	Company           string      `json:"company,omitempty"`
	CreatedAt         string      `json:"created_at,omitempty"`
	DiskUsage         json.Number `json:"disk_usage,omitempty"`
	Email             string      `json:"email,omitempty"`
	EventsUrl         string      `json:"events_url,omitempty"`
	Followers         int64       `json:"followers,omitempty"`
	FollowersUrl      string      `json:"followers_url,omitempty"`
	Following         int64       `json:"following,omitempty"`
	FollowingUrl      string      `json:"following_url,omitempty"`
	GistsUrl          string      `json:"gists_url,omitempty"`
	GravatarId        string      `json:"gravatar_id,omitempty"`
	Hireable          bool        `json:"hireable,omitempty"`
	HtmlUrl           string      `json:"html_url,omitempty"`
	Id                int64       `json:"id,omitempty"`
	Location          string      `json:"location,omitempty"`
	Login             string      `json:"login,omitempty"`
	Name              string      `json:"name,omitempty"`
	NodeId            string      `json:"node_id,omitempty"`
	OrganizationsUrl  string      `json:"organizations_url,omitempty"`
	OwnedPrivateRepos int64       `json:"owned_private_repos,omitempty"`
	Plan              struct {
		PrivateUserPlan
	} `json:"plan,omitempty"`
	PrivateGists            int64  `json:"private_gists,omitempty"`
	PublicGists             int64  `json:"public_gists,omitempty"`
	PublicRepos             int64  `json:"public_repos,omitempty"`
	ReceivedEventsUrl       string `json:"received_events_url,omitempty"`
	ReposUrl                string `json:"repos_url,omitempty"`
	SiteAdmin               bool   `json:"site_admin,omitempty"`
	StarredUrl              string `json:"starred_url,omitempty"`
	SubscriptionsUrl        string `json:"subscriptions_url,omitempty"`
	TotalPrivateRepos       int64  `json:"total_private_repos,omitempty"`
	TwitterUsername         string `json:"twitter_username,omitempty"`
	TwoFactorAuthentication bool   `json:"two_factor_authentication,omitempty"`
	Type                    string `json:"type,omitempty"`
	UpdatedAt               string `json:"updated_at,omitempty"`
	Url                     string `json:"url,omitempty"`
}

type PrivateUserPlan struct {
	Collaborators int64       `json:"collaborators,omitempty"`
	Name          string      `json:"name,omitempty"`
	PrivateRepos  int64       `json:"private_repos,omitempty"`
	Space         json.Number `json:"space,omitempty"`
}

type Project struct {
	Body       string `json:"body,omitempty"`
	ColumnsUrl string `json:"columns_url,omitempty"`
	CreatedAt  string `json:"created_at,omitempty"`
	Creator    struct {
		ProjectCreator
	} `json:"creator,omitempty"`
	HtmlUrl   string `json:"html_url,omitempty"`
	Id        int64  `json:"id,omitempty"`
	Name      string `json:"name,omitempty"`
	NodeId    string `json:"node_id,omitempty"`
	Number    int64  `json:"number,omitempty"`
	OwnerUrl  string `json:"owner_url,omitempty"`
	State     string `json:"state,omitempty"`
	UpdatedAt string `json:"updated_at,omitempty"`
	Url       string `json:"url,omitempty"`
}

type ProjectCard struct {
	Archived   bool   `json:"archived,omitempty"`
	ColumnUrl  string `json:"column_url,omitempty"`
	ContentUrl string `json:"content_url,omitempty"`
	CreatedAt  string `json:"created_at,omitempty"`
	Creator    struct {
		ProjectCardCreator
	} `json:"creator,omitempty"`
	Id         int64  `json:"id,omitempty"`
	NodeId     string `json:"node_id,omitempty"`
	Note       string `json:"note,omitempty"`
	ProjectUrl string `json:"project_url,omitempty"`
	UpdatedAt  string `json:"updated_at,omitempty"`
	Url        string `json:"url,omitempty"`
}

type ProjectCardCreator struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type ProjectColumn struct {
	CardsUrl   string `json:"cards_url,omitempty"`
	CreatedAt  string `json:"created_at,omitempty"`
	Id         int64  `json:"id,omitempty"`
	Name       string `json:"name,omitempty"`
	NodeId     string `json:"node_id,omitempty"`
	ProjectUrl string `json:"project_url,omitempty"`
	UpdatedAt  string `json:"updated_at,omitempty"`
	Url        string `json:"url,omitempty"`
}

type ProjectCreator struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type ProtectedBranchAdminEnforced struct {
	Enabled bool   `json:"enabled,omitempty"`
	Url     string `json:"url,omitempty"`
}

type ProtectedBranchPullRequestReview struct {
	DismissStaleReviews   bool `json:"dismiss_stale_reviews,omitempty"`
	DismissalRestrictions struct {
		ProtectedBranchPullRequestReviewDismissalRestrictions
	} `json:"dismissal_restrictions,omitempty"`
	RequireCodeOwnerReviews      bool   `json:"require_code_owner_reviews,omitempty"`
	RequiredApprovingReviewCount int64  `json:"required_approving_review_count,omitempty"`
	Url                          string `json:"url,omitempty"`
}

type ProtectedBranchPullRequestReviewDismissalRestrictions struct {
	Teams []struct {
		ProtectedBranchPullRequestReviewDismissalRestrictionsTeam
	} `json:"teams,omitempty"`
	TeamsUrl string `json:"teams_url,omitempty"`
	Url      string `json:"url,omitempty"`
	Users    []struct {
		ProtectedBranchPullRequestReviewDismissalRestrictionsUser
	} `json:"users,omitempty"`
	UsersUrl string `json:"users_url,omitempty"`
}

type ProtectedBranchPullRequestReviewDismissalRestrictionsTeam struct {
	Description     string      `json:"description,omitempty"`
	HtmlUrl         string      `json:"html_url,omitempty"`
	Id              int64       `json:"id,omitempty"`
	MembersUrl      string      `json:"members_url,omitempty"`
	Name            string      `json:"name,omitempty"`
	NodeId          string      `json:"node_id,omitempty"`
	Parent          interface{} `json:"parent,omitempty"`
	Permission      string      `json:"permission,omitempty"`
	Privacy         string      `json:"privacy,omitempty"`
	RepositoriesUrl string      `json:"repositories_url,omitempty"`
	Slug            string      `json:"slug,omitempty"`
	Url             string      `json:"url,omitempty"`
}

type ProtectedBranchPullRequestReviewDismissalRestrictionsUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type PublicRepository struct {
	ArchiveUrl       string `json:"archive_url,omitempty"`
	AssigneesUrl     string `json:"assignees_url,omitempty"`
	BlobsUrl         string `json:"blobs_url,omitempty"`
	BranchesUrl      string `json:"branches_url,omitempty"`
	CollaboratorsUrl string `json:"collaborators_url,omitempty"`
	CommentsUrl      string `json:"comments_url,omitempty"`
	CommitsUrl       string `json:"commits_url,omitempty"`
	CompareUrl       string `json:"compare_url,omitempty"`
	ContentsUrl      string `json:"contents_url,omitempty"`
	ContributorsUrl  string `json:"contributors_url,omitempty"`
	DeploymentsUrl   string `json:"deployments_url,omitempty"`
	Description      string `json:"description,omitempty"`
	DownloadsUrl     string `json:"downloads_url,omitempty"`
	EventsUrl        string `json:"events_url,omitempty"`
	Fork             bool   `json:"fork,omitempty"`
	ForksUrl         string `json:"forks_url,omitempty"`
	FullName         string `json:"full_name,omitempty"`
	GitCommitsUrl    string `json:"git_commits_url,omitempty"`
	GitRefsUrl       string `json:"git_refs_url,omitempty"`
	GitTagsUrl       string `json:"git_tags_url,omitempty"`
	GitUrl           string `json:"git_url,omitempty"`
	HtmlUrl          string `json:"html_url,omitempty"`
	Id               int64  `json:"id,omitempty"`
	IssueCommentUrl  string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl   string `json:"issue_events_url,omitempty"`
	IssuesUrl        string `json:"issues_url,omitempty"`
	KeysUrl          string `json:"keys_url,omitempty"`
	LabelsUrl        string `json:"labels_url,omitempty"`
	LanguagesUrl     string `json:"languages_url,omitempty"`
	MergesUrl        string `json:"merges_url,omitempty"`
	MilestonesUrl    string `json:"milestones_url,omitempty"`
	Name             string `json:"name,omitempty"`
	NodeId           string `json:"node_id,omitempty"`
	NotificationsUrl string `json:"notifications_url,omitempty"`
	Owner            struct {
		PublicRepositoryOwner
	} `json:"owner,omitempty"`
	Private         bool   `json:"private,omitempty"`
	PullsUrl        string `json:"pulls_url,omitempty"`
	ReleasesUrl     string `json:"releases_url,omitempty"`
	SshUrl          string `json:"ssh_url,omitempty"`
	StargazersUrl   string `json:"stargazers_url,omitempty"`
	StatusesUrl     string `json:"statuses_url,omitempty"`
	SubscribersUrl  string `json:"subscribers_url,omitempty"`
	SubscriptionUrl string `json:"subscription_url,omitempty"`
	TagsUrl         string `json:"tags_url,omitempty"`
	TeamsUrl        string `json:"teams_url,omitempty"`
	TreesUrl        string `json:"trees_url,omitempty"`
	Url             string `json:"url,omitempty"`
}

type PublicRepositoryOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type PublicUser struct {
	AvatarUrl        string `json:"avatar_url,omitempty"`
	Bio              string `json:"bio,omitempty"`
	Blog             string `json:"blog,omitempty"`
	Company          string `json:"company,omitempty"`
	CreatedAt        string `json:"created_at,omitempty"`
	Email            string `json:"email,omitempty"`
	EventsUrl        string `json:"events_url,omitempty"`
	Followers        int64  `json:"followers,omitempty"`
	FollowersUrl     string `json:"followers_url,omitempty"`
	Following        int64  `json:"following,omitempty"`
	FollowingUrl     string `json:"following_url,omitempty"`
	GistsUrl         string `json:"gists_url,omitempty"`
	GravatarId       string `json:"gravatar_id,omitempty"`
	Hireable         bool   `json:"hireable,omitempty"`
	HtmlUrl          string `json:"html_url,omitempty"`
	Id               int64  `json:"id,omitempty"`
	Location         string `json:"location,omitempty"`
	Login            string `json:"login,omitempty"`
	Name             string `json:"name,omitempty"`
	NodeId           string `json:"node_id,omitempty"`
	OrganizationsUrl string `json:"organizations_url,omitempty"`
	Plan             struct {
		PublicUserPlan
	} `json:"plan,omitempty"`
	PublicGists       int64  `json:"public_gists,omitempty"`
	PublicRepos       int64  `json:"public_repos,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	TwitterUsername   string `json:"twitter_username,omitempty"`
	Type              string `json:"type,omitempty"`
	UpdatedAt         string `json:"updated_at,omitempty"`
	Url               string `json:"url,omitempty"`
}

type PublicUserPlan struct {
	Collaborators int64       `json:"collaborators,omitempty"`
	Name          string      `json:"name,omitempty"`
	PrivateRepos  int64       `json:"private_repos,omitempty"`
	Space         json.Number `json:"space,omitempty"`
}

type PullRequest struct {
	Links struct {
		PullRequestLinks
	} `json:"_links,omitempty"`
	ActiveLockReason string `json:"active_lock_reason,omitempty"`
	Additions        int64  `json:"additions,omitempty"`
	Assignee         struct {
		PullRequestAssignee
	} `json:"assignee,omitempty"`
	Assignees []struct {
		PullRequestAssignee
	} `json:"assignees,omitempty"`
	AuthorAssociation string `json:"author_association,omitempty"`
	Base              struct {
		PullRequestBase
	} `json:"base,omitempty"`
	Body         string `json:"body,omitempty"`
	ChangedFiles int64  `json:"changed_files,omitempty"`
	ClosedAt     string `json:"closed_at,omitempty"`
	Comments     int64  `json:"comments,omitempty"`
	CommentsUrl  string `json:"comments_url,omitempty"`
	Commits      int64  `json:"commits,omitempty"`
	CommitsUrl   string `json:"commits_url,omitempty"`
	CreatedAt    string `json:"created_at,omitempty"`
	Deletions    int64  `json:"deletions,omitempty"`
	DiffUrl      string `json:"diff_url,omitempty"`
	Draft        bool   `json:"draft,omitempty"`
	Head         struct {
		PullRequestHead
	} `json:"head,omitempty"`
	HtmlUrl  string `json:"html_url,omitempty"`
	Id       int64  `json:"id,omitempty"`
	IssueUrl string `json:"issue_url,omitempty"`
	Labels   []struct {
		PullRequestLabel
	} `json:"labels,omitempty"`
	Locked              bool   `json:"locked,omitempty"`
	MaintainerCanModify bool   `json:"maintainer_can_modify,omitempty"`
	MergeCommitSha      string `json:"merge_commit_sha,omitempty"`
	Mergeable           bool   `json:"mergeable,omitempty"`
	MergeableState      string `json:"mergeable_state,omitempty"`
	Merged              bool   `json:"merged,omitempty"`
	MergedAt            string `json:"merged_at,omitempty"`
	MergedBy            struct {
		PullRequestMergedBy
	} `json:"merged_by,omitempty"`
	Milestone struct {
		PullRequestMilestone
	} `json:"milestone,omitempty"`
	NodeId             string `json:"node_id,omitempty"`
	Number             int64  `json:"number,omitempty"`
	PatchUrl           string `json:"patch_url,omitempty"`
	Rebaseable         bool   `json:"rebaseable,omitempty"`
	RequestedReviewers []struct {
		PullRequestRequestedReviewer
	} `json:"requested_reviewers,omitempty"`
	RequestedTeams []struct {
		PullRequestRequestedTeam
	} `json:"requested_teams,omitempty"`
	ReviewCommentUrl  string `json:"review_comment_url,omitempty"`
	ReviewComments    int64  `json:"review_comments,omitempty"`
	ReviewCommentsUrl string `json:"review_comments_url,omitempty"`
	State             string `json:"state,omitempty"`
	StatusesUrl       string `json:"statuses_url,omitempty"`
	Title             string `json:"title,omitempty"`
	UpdatedAt         string `json:"updated_at,omitempty"`
	Url               string `json:"url,omitempty"`
	User              struct {
		PullRequestUser
	} `json:"user,omitempty"`
}

type PullRequestLinks struct {
	Comments struct {
		PullRequestLinksComments
	} `json:"comments,omitempty"`
	Commits struct {
		PullRequestLinksCommits
	} `json:"commits,omitempty"`
	Html struct {
		PullRequestLinksHtml
	} `json:"html,omitempty"`
	Issue struct {
		PullRequestLinksIssue
	} `json:"issue,omitempty"`
	ReviewComment struct {
		PullRequestLinksReviewComment
	} `json:"review_comment,omitempty"`
	ReviewComments struct {
		PullRequestLinksReviewComments
	} `json:"review_comments,omitempty"`
	Self struct {
		PullRequestLinksSelf
	} `json:"self,omitempty"`
	Statuses struct {
		PullRequestLinksStatuses
	} `json:"statuses,omitempty"`
}

type PullRequestLinksComments struct {
	Href string `json:"href,omitempty"`
}

type PullRequestLinksCommits struct {
	Href string `json:"href,omitempty"`
}

type PullRequestLinksHtml struct {
	Href string `json:"href,omitempty"`
}

type PullRequestLinksIssue struct {
	Href string `json:"href,omitempty"`
}

type PullRequestLinksReviewComment struct {
	Href string `json:"href,omitempty"`
}

type PullRequestLinksReviewComments struct {
	Href string `json:"href,omitempty"`
}

type PullRequestLinksSelf struct {
	Href string `json:"href,omitempty"`
}

type PullRequestLinksStatuses struct {
	Href string `json:"href,omitempty"`
}

type PullRequestAssignee struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type PullRequestBase struct {
	Label string `json:"label,omitempty"`
	Ref   string `json:"ref,omitempty"`
	Repo  struct {
		PullRequestBaseRepo
	} `json:"repo,omitempty"`
	Sha  string `json:"sha,omitempty"`
	User struct {
		PullRequestBaseUser
	} `json:"user,omitempty"`
}

type PullRequestBaseRepo struct {
	AllowMergeCommit    bool   `json:"allow_merge_commit,omitempty"`
	AllowRebaseMerge    bool   `json:"allow_rebase_merge,omitempty"`
	AllowSquashMerge    bool   `json:"allow_squash_merge,omitempty"`
	ArchiveUrl          string `json:"archive_url,omitempty"`
	Archived            bool   `json:"archived,omitempty"`
	AssigneesUrl        string `json:"assignees_url,omitempty"`
	BlobsUrl            string `json:"blobs_url,omitempty"`
	BranchesUrl         string `json:"branches_url,omitempty"`
	CloneUrl            string `json:"clone_url,omitempty"`
	CollaboratorsUrl    string `json:"collaborators_url,omitempty"`
	CommentsUrl         string `json:"comments_url,omitempty"`
	CommitsUrl          string `json:"commits_url,omitempty"`
	CompareUrl          string `json:"compare_url,omitempty"`
	ContentsUrl         string `json:"contents_url,omitempty"`
	ContributorsUrl     string `json:"contributors_url,omitempty"`
	CreatedAt           string `json:"created_at,omitempty"`
	DefaultBranch       string `json:"default_branch,omitempty"`
	DeleteBranchOnMerge bool   `json:"delete_branch_on_merge,omitempty"`
	DeploymentsUrl      string `json:"deployments_url,omitempty"`
	Description         string `json:"description,omitempty"`
	Disabled            bool   `json:"disabled,omitempty"`
	DownloadsUrl        string `json:"downloads_url,omitempty"`
	EventsUrl           string `json:"events_url,omitempty"`
	Fork                bool   `json:"fork,omitempty"`
	ForksCount          int64  `json:"forks_count,omitempty"`
	ForksUrl            string `json:"forks_url,omitempty"`
	FullName            string `json:"full_name,omitempty"`
	GitCommitsUrl       string `json:"git_commits_url,omitempty"`
	GitRefsUrl          string `json:"git_refs_url,omitempty"`
	GitTagsUrl          string `json:"git_tags_url,omitempty"`
	GitUrl              string `json:"git_url,omitempty"`
	HasDownloads        bool   `json:"has_downloads,omitempty"`
	HasIssues           bool   `json:"has_issues,omitempty"`
	HasPages            bool   `json:"has_pages,omitempty"`
	HasProjects         bool   `json:"has_projects,omitempty"`
	HasWiki             bool   `json:"has_wiki,omitempty"`
	Homepage            string `json:"homepage,omitempty"`
	HooksUrl            string `json:"hooks_url,omitempty"`
	HtmlUrl             string `json:"html_url,omitempty"`
	Id                  int64  `json:"id,omitempty"`
	IsTemplate          bool   `json:"is_template,omitempty"`
	IssueCommentUrl     string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl      string `json:"issue_events_url,omitempty"`
	IssuesUrl           string `json:"issues_url,omitempty"`
	KeysUrl             string `json:"keys_url,omitempty"`
	LabelsUrl           string `json:"labels_url,omitempty"`
	Language            string `json:"language,omitempty"`
	LanguagesUrl        string `json:"languages_url,omitempty"`
	MergesUrl           string `json:"merges_url,omitempty"`
	MilestonesUrl       string `json:"milestones_url,omitempty"`
	MirrorUrl           string `json:"mirror_url,omitempty"`
	Name                string `json:"name,omitempty"`
	NetworkCount        int64  `json:"network_count,omitempty"`
	NodeId              string `json:"node_id,omitempty"`
	NotificationsUrl    string `json:"notifications_url,omitempty"`
	OpenIssuesCount     int64  `json:"open_issues_count,omitempty"`
	Owner               struct {
		PullRequestBaseRepoOwner
	} `json:"owner,omitempty"`
	Permissions struct {
		PullRequestBaseRepoPermissions
	} `json:"permissions,omitempty"`
	Private            bool        `json:"private,omitempty"`
	PullsUrl           string      `json:"pulls_url,omitempty"`
	PushedAt           string      `json:"pushed_at,omitempty"`
	ReleasesUrl        string      `json:"releases_url,omitempty"`
	Size               json.Number `json:"size,omitempty"`
	SshUrl             string      `json:"ssh_url,omitempty"`
	StargazersCount    int64       `json:"stargazers_count,omitempty"`
	StargazersUrl      string      `json:"stargazers_url,omitempty"`
	StatusesUrl        string      `json:"statuses_url,omitempty"`
	SubscribersCount   int64       `json:"subscribers_count,omitempty"`
	SubscribersUrl     string      `json:"subscribers_url,omitempty"`
	SubscriptionUrl    string      `json:"subscription_url,omitempty"`
	SvnUrl             string      `json:"svn_url,omitempty"`
	TagsUrl            string      `json:"tags_url,omitempty"`
	TeamsUrl           string      `json:"teams_url,omitempty"`
	TempCloneToken     string      `json:"temp_clone_token,omitempty"`
	TemplateRepository interface{} `json:"template_repository,omitempty"`
	Topics             []string    `json:"topics,omitempty"`
	TreesUrl           string      `json:"trees_url,omitempty"`
	UpdatedAt          string      `json:"updated_at,omitempty"`
	Url                string      `json:"url,omitempty"`
	Visibility         string      `json:"visibility,omitempty"`
	WatchersCount      int64       `json:"watchers_count,omitempty"`
}

type PullRequestBaseRepoOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type PullRequestBaseRepoPermissions struct {
	Admin bool `json:"admin,omitempty"`
	Pull  bool `json:"pull,omitempty"`
	Push  bool `json:"push,omitempty"`
}

type PullRequestBaseUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type PullRequestHead struct {
	Label string `json:"label,omitempty"`
	Ref   string `json:"ref,omitempty"`
	Repo  struct {
		PullRequestHeadRepo
	} `json:"repo,omitempty"`
	Sha  string `json:"sha,omitempty"`
	User struct {
		PullRequestHeadUser
	} `json:"user,omitempty"`
}

type PullRequestHeadRepo struct {
	AllowMergeCommit    bool   `json:"allow_merge_commit,omitempty"`
	AllowRebaseMerge    bool   `json:"allow_rebase_merge,omitempty"`
	AllowSquashMerge    bool   `json:"allow_squash_merge,omitempty"`
	ArchiveUrl          string `json:"archive_url,omitempty"`
	Archived            bool   `json:"archived,omitempty"`
	AssigneesUrl        string `json:"assignees_url,omitempty"`
	BlobsUrl            string `json:"blobs_url,omitempty"`
	BranchesUrl         string `json:"branches_url,omitempty"`
	CloneUrl            string `json:"clone_url,omitempty"`
	CollaboratorsUrl    string `json:"collaborators_url,omitempty"`
	CommentsUrl         string `json:"comments_url,omitempty"`
	CommitsUrl          string `json:"commits_url,omitempty"`
	CompareUrl          string `json:"compare_url,omitempty"`
	ContentsUrl         string `json:"contents_url,omitempty"`
	ContributorsUrl     string `json:"contributors_url,omitempty"`
	CreatedAt           string `json:"created_at,omitempty"`
	DefaultBranch       string `json:"default_branch,omitempty"`
	DeleteBranchOnMerge bool   `json:"delete_branch_on_merge,omitempty"`
	DeploymentsUrl      string `json:"deployments_url,omitempty"`
	Description         string `json:"description,omitempty"`
	Disabled            bool   `json:"disabled,omitempty"`
	DownloadsUrl        string `json:"downloads_url,omitempty"`
	EventsUrl           string `json:"events_url,omitempty"`
	Fork                bool   `json:"fork,omitempty"`
	ForksCount          int64  `json:"forks_count,omitempty"`
	ForksUrl            string `json:"forks_url,omitempty"`
	FullName            string `json:"full_name,omitempty"`
	GitCommitsUrl       string `json:"git_commits_url,omitempty"`
	GitRefsUrl          string `json:"git_refs_url,omitempty"`
	GitTagsUrl          string `json:"git_tags_url,omitempty"`
	GitUrl              string `json:"git_url,omitempty"`
	HasDownloads        bool   `json:"has_downloads,omitempty"`
	HasIssues           bool   `json:"has_issues,omitempty"`
	HasPages            bool   `json:"has_pages,omitempty"`
	HasProjects         bool   `json:"has_projects,omitempty"`
	HasWiki             bool   `json:"has_wiki,omitempty"`
	Homepage            string `json:"homepage,omitempty"`
	HooksUrl            string `json:"hooks_url,omitempty"`
	HtmlUrl             string `json:"html_url,omitempty"`
	Id                  int64  `json:"id,omitempty"`
	IsTemplate          bool   `json:"is_template,omitempty"`
	IssueCommentUrl     string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl      string `json:"issue_events_url,omitempty"`
	IssuesUrl           string `json:"issues_url,omitempty"`
	KeysUrl             string `json:"keys_url,omitempty"`
	LabelsUrl           string `json:"labels_url,omitempty"`
	Language            string `json:"language,omitempty"`
	LanguagesUrl        string `json:"languages_url,omitempty"`
	MergesUrl           string `json:"merges_url,omitempty"`
	MilestonesUrl       string `json:"milestones_url,omitempty"`
	MirrorUrl           string `json:"mirror_url,omitempty"`
	Name                string `json:"name,omitempty"`
	NetworkCount        int64  `json:"network_count,omitempty"`
	NodeId              string `json:"node_id,omitempty"`
	NotificationsUrl    string `json:"notifications_url,omitempty"`
	OpenIssuesCount     int64  `json:"open_issues_count,omitempty"`
	Owner               struct {
		PullRequestHeadRepoOwner
	} `json:"owner,omitempty"`
	Permissions struct {
		PullRequestHeadRepoPermissions
	} `json:"permissions,omitempty"`
	Private            bool        `json:"private,omitempty"`
	PullsUrl           string      `json:"pulls_url,omitempty"`
	PushedAt           string      `json:"pushed_at,omitempty"`
	ReleasesUrl        string      `json:"releases_url,omitempty"`
	Size               json.Number `json:"size,omitempty"`
	SshUrl             string      `json:"ssh_url,omitempty"`
	StargazersCount    int64       `json:"stargazers_count,omitempty"`
	StargazersUrl      string      `json:"stargazers_url,omitempty"`
	StatusesUrl        string      `json:"statuses_url,omitempty"`
	SubscribersCount   int64       `json:"subscribers_count,omitempty"`
	SubscribersUrl     string      `json:"subscribers_url,omitempty"`
	SubscriptionUrl    string      `json:"subscription_url,omitempty"`
	SvnUrl             string      `json:"svn_url,omitempty"`
	TagsUrl            string      `json:"tags_url,omitempty"`
	TeamsUrl           string      `json:"teams_url,omitempty"`
	TempCloneToken     string      `json:"temp_clone_token,omitempty"`
	TemplateRepository interface{} `json:"template_repository,omitempty"`
	Topics             []string    `json:"topics,omitempty"`
	TreesUrl           string      `json:"trees_url,omitempty"`
	UpdatedAt          string      `json:"updated_at,omitempty"`
	Url                string      `json:"url,omitempty"`
	Visibility         string      `json:"visibility,omitempty"`
	WatchersCount      int64       `json:"watchers_count,omitempty"`
}

type PullRequestHeadRepoOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type PullRequestHeadRepoPermissions struct {
	Admin bool `json:"admin,omitempty"`
	Pull  bool `json:"pull,omitempty"`
	Push  bool `json:"push,omitempty"`
}

type PullRequestHeadUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type PullRequestLabel struct {
	Color       string `json:"color,omitempty"`
	Default     bool   `json:"default,omitempty"`
	Description string `json:"description,omitempty"`
	Id          int64  `json:"id,omitempty"`
	Name        string `json:"name,omitempty"`
	NodeId      string `json:"node_id,omitempty"`
	Url         string `json:"url,omitempty"`
}

type PullRequestMergeResult struct {
	Merged  bool   `json:"merged,omitempty"`
	Message string `json:"message,omitempty"`
	Sha     string `json:"sha,omitempty"`
}

type PullRequestMergedBy struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type PullRequestMilestone struct {
	ClosedAt     string `json:"closed_at,omitempty"`
	ClosedIssues int64  `json:"closed_issues,omitempty"`
	CreatedAt    string `json:"created_at,omitempty"`
	Creator      struct {
		PullRequestMilestoneCreator
	} `json:"creator,omitempty"`
	Description string `json:"description,omitempty"`
	DueOn       string `json:"due_on,omitempty"`
	HtmlUrl     string `json:"html_url,omitempty"`
	Id          int64  `json:"id,omitempty"`
	LabelsUrl   string `json:"labels_url,omitempty"`
	NodeId      string `json:"node_id,omitempty"`
	Number      int64  `json:"number,omitempty"`
	OpenIssues  int64  `json:"open_issues,omitempty"`
	State       string `json:"state,omitempty"`
	Title       string `json:"title,omitempty"`
	UpdatedAt   string `json:"updated_at,omitempty"`
	Url         string `json:"url,omitempty"`
}

type PullRequestMilestoneCreator struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type PullRequestRequestedReviewer struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type PullRequestRequestedTeam struct {
	Description     string      `json:"description,omitempty"`
	HtmlUrl         string      `json:"html_url,omitempty"`
	Id              int64       `json:"id,omitempty"`
	MembersUrl      string      `json:"members_url,omitempty"`
	Name            string      `json:"name,omitempty"`
	NodeId          string      `json:"node_id,omitempty"`
	Parent          interface{} `json:"parent,omitempty"`
	Permission      string      `json:"permission,omitempty"`
	Privacy         string      `json:"privacy,omitempty"`
	RepositoriesUrl string      `json:"repositories_url,omitempty"`
	Slug            string      `json:"slug,omitempty"`
	Url             string      `json:"url,omitempty"`
}

type PullRequestReview struct {
	Links struct {
		PullRequestReviewLinks
	} `json:"_links,omitempty"`
	Body           string `json:"body,omitempty"`
	CommitId       string `json:"commit_id,omitempty"`
	HtmlUrl        string `json:"html_url,omitempty"`
	Id             int64  `json:"id,omitempty"`
	NodeId         string `json:"node_id,omitempty"`
	PullRequestUrl string `json:"pull_request_url,omitempty"`
	State          string `json:"state,omitempty"`
	SubmittedAt    string `json:"submitted_at,omitempty"`
	User           struct {
		PullRequestReviewUser
	} `json:"user,omitempty"`
}

type PullRequestReview2 struct {
	Links struct {
		PullRequestReview2Links
	} `json:"_links,omitempty"`
	Body           string `json:"body,omitempty"`
	CommitId       string `json:"commit_id,omitempty"`
	HtmlUrl        string `json:"html_url,omitempty"`
	Id             int64  `json:"id,omitempty"`
	NodeId         string `json:"node_id,omitempty"`
	PullRequestUrl string `json:"pull_request_url,omitempty"`
	State          string `json:"state,omitempty"`
	User           struct {
		PullRequestReview2User
	} `json:"user,omitempty"`
}

type PullRequestReview2Links struct {
	Html struct {
		PullRequestReview2LinksHtml
	} `json:"html,omitempty"`
	PullRequest struct {
		PullRequestReview2LinksPullRequest
	} `json:"pull_request,omitempty"`
}

type PullRequestReview2LinksHtml struct {
	Href string `json:"href,omitempty"`
}

type PullRequestReview2LinksPullRequest struct {
	Href string `json:"href,omitempty"`
}

type PullRequestReview2User struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type PullRequestReviewLinks struct {
	Html struct {
		PullRequestReviewLinksHtml
	} `json:"html,omitempty"`
	PullRequest struct {
		PullRequestReviewLinksPullRequest
	} `json:"pull_request,omitempty"`
}

type PullRequestReviewLinksHtml struct {
	Href string `json:"href,omitempty"`
}

type PullRequestReviewLinksPullRequest struct {
	Href string `json:"href,omitempty"`
}

type PullRequestReviewComment struct {
	Links struct {
		PullRequestReviewCommentLinks
	} `json:"_links,omitempty"`
	AuthorAssociation   string `json:"author_association,omitempty"`
	Body                string `json:"body,omitempty"`
	CommitId            string `json:"commit_id,omitempty"`
	CreatedAt           string `json:"created_at,omitempty"`
	DiffHunk            string `json:"diff_hunk,omitempty"`
	HtmlUrl             string `json:"html_url,omitempty"`
	Id                  int64  `json:"id,omitempty"`
	InReplyToId         int64  `json:"in_reply_to_id,omitempty"`
	Line                int64  `json:"line,omitempty"`
	NodeId              string `json:"node_id,omitempty"`
	OriginalCommitId    string `json:"original_commit_id,omitempty"`
	OriginalLine        int64  `json:"original_line,omitempty"`
	OriginalPosition    int64  `json:"original_position,omitempty"`
	OriginalStartLine   int64  `json:"original_start_line,omitempty"`
	Path                string `json:"path,omitempty"`
	Position            int64  `json:"position,omitempty"`
	PullRequestReviewId int64  `json:"pull_request_review_id,omitempty"`
	PullRequestUrl      string `json:"pull_request_url,omitempty"`
	Side                string `json:"side,omitempty"`
	StartLine           int64  `json:"start_line,omitempty"`
	StartSide           string `json:"start_side,omitempty"`
	UpdatedAt           string `json:"updated_at,omitempty"`
	Url                 string `json:"url,omitempty"`
	User                struct {
		PullRequestReviewCommentUser
	} `json:"user,omitempty"`
}

type PullRequestReviewCommentLinks struct {
	Html struct {
		PullRequestReviewCommentLinksHtml
	} `json:"html,omitempty"`
	PullRequest struct {
		PullRequestReviewCommentLinksPullRequest
	} `json:"pull_request,omitempty"`
	Self struct {
		PullRequestReviewCommentLinksSelf
	} `json:"self,omitempty"`
}

type PullRequestReviewCommentLinksHtml struct {
	Href string `json:"href,omitempty"`
}

type PullRequestReviewCommentLinksPullRequest struct {
	Href string `json:"href,omitempty"`
}

type PullRequestReviewCommentLinksSelf struct {
	Href string `json:"href,omitempty"`
}

type PullRequestReviewCommentUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type PullRequestReviewRequest struct {
	Links struct {
		PullRequestReviewRequestLinks
	} `json:"_links,omitempty"`
	ActiveLockReason string `json:"active_lock_reason,omitempty"`
	Assignee         struct {
		PullRequestReviewRequestAssignee
	} `json:"assignee,omitempty"`
	Assignees []struct {
		PullRequestReviewRequestAssignee
	} `json:"assignees,omitempty"`
	AuthorAssociation string `json:"author_association,omitempty"`
	Base              struct {
		PullRequestReviewRequestBase
	} `json:"base,omitempty"`
	Body        string `json:"body,omitempty"`
	ClosedAt    string `json:"closed_at,omitempty"`
	CommentsUrl string `json:"comments_url,omitempty"`
	CommitsUrl  string `json:"commits_url,omitempty"`
	CreatedAt   string `json:"created_at,omitempty"`
	DiffUrl     string `json:"diff_url,omitempty"`
	Draft       bool   `json:"draft,omitempty"`
	Head        struct {
		PullRequestReviewRequestHead
	} `json:"head,omitempty"`
	HtmlUrl  string `json:"html_url,omitempty"`
	Id       int64  `json:"id,omitempty"`
	IssueUrl string `json:"issue_url,omitempty"`
	Labels   []struct {
		PullRequestReviewRequestLabel
	} `json:"labels,omitempty"`
	Locked         bool   `json:"locked,omitempty"`
	MergeCommitSha string `json:"merge_commit_sha,omitempty"`
	MergedAt       string `json:"merged_at,omitempty"`
	Milestone      struct {
		PullRequestReviewRequestMilestone
	} `json:"milestone,omitempty"`
	NodeId             string `json:"node_id,omitempty"`
	Number             int64  `json:"number,omitempty"`
	PatchUrl           string `json:"patch_url,omitempty"`
	RequestedReviewers []struct {
		PullRequestReviewRequestRequestedReviewer
	} `json:"requested_reviewers,omitempty"`
	RequestedTeams []struct {
		PullRequestReviewRequestRequestedTeam
	} `json:"requested_teams,omitempty"`
	ReviewCommentUrl  string `json:"review_comment_url,omitempty"`
	ReviewCommentsUrl string `json:"review_comments_url,omitempty"`
	State             string `json:"state,omitempty"`
	StatusesUrl       string `json:"statuses_url,omitempty"`
	Title             string `json:"title,omitempty"`
	UpdatedAt         string `json:"updated_at,omitempty"`
	Url               string `json:"url,omitempty"`
	User              struct {
		PullRequestReviewRequestUser
	} `json:"user,omitempty"`
}

type PullRequestReviewRequestLinks struct {
	Comments struct {
		PullRequestReviewRequestLinksComments
	} `json:"comments,omitempty"`
	Commits struct {
		PullRequestReviewRequestLinksCommits
	} `json:"commits,omitempty"`
	Html struct {
		PullRequestReviewRequestLinksHtml
	} `json:"html,omitempty"`
	Issue struct {
		PullRequestReviewRequestLinksIssue
	} `json:"issue,omitempty"`
	ReviewComment struct {
		PullRequestReviewRequestLinksReviewComment
	} `json:"review_comment,omitempty"`
	ReviewComments struct {
		PullRequestReviewRequestLinksReviewComments
	} `json:"review_comments,omitempty"`
	Self struct {
		PullRequestReviewRequestLinksSelf
	} `json:"self,omitempty"`
	Statuses struct {
		PullRequestReviewRequestLinksStatuses
	} `json:"statuses,omitempty"`
}

type PullRequestReviewRequestLinksComments struct {
	Href string `json:"href,omitempty"`
}

type PullRequestReviewRequestLinksCommits struct {
	Href string `json:"href,omitempty"`
}

type PullRequestReviewRequestLinksHtml struct {
	Href string `json:"href,omitempty"`
}

type PullRequestReviewRequestLinksIssue struct {
	Href string `json:"href,omitempty"`
}

type PullRequestReviewRequestLinksReviewComment struct {
	Href string `json:"href,omitempty"`
}

type PullRequestReviewRequestLinksReviewComments struct {
	Href string `json:"href,omitempty"`
}

type PullRequestReviewRequestLinksSelf struct {
	Href string `json:"href,omitempty"`
}

type PullRequestReviewRequestLinksStatuses struct {
	Href string `json:"href,omitempty"`
}

type PullRequestReviewRequestAssignee struct {
	AvatarUrl         string `json:"avatar_url"`
	EventsUrl         string `json:"events_url"`
	FollowersUrl      string `json:"followers_url"`
	FollowingUrl      string `json:"following_url"`
	GistsUrl          string `json:"gists_url"`
	GravatarId        string `json:"gravatar_id"`
	HtmlUrl           string `json:"html_url"`
	Id                int64  `json:"id"`
	Login             string `json:"login"`
	NodeId            string `json:"node_id"`
	OrganizationsUrl  string `json:"organizations_url"`
	ReceivedEventsUrl string `json:"received_events_url"`
	ReposUrl          string `json:"repos_url"`
	SiteAdmin         bool   `json:"site_admin"`
	StarredUrl        string `json:"starred_url"`
	SubscriptionsUrl  string `json:"subscriptions_url"`
	Type              string `json:"type"`
	Url               string `json:"url"`
}

type PullRequestReviewRequestBase struct {
	Label string `json:"label,omitempty"`
	Ref   string `json:"ref,omitempty"`
	Repo  struct {
		PullRequestReviewRequestBaseRepo
	} `json:"repo,omitempty"`
	Sha  string `json:"sha,omitempty"`
	User struct {
		PullRequestReviewRequestBaseUser
	} `json:"user,omitempty"`
}

type PullRequestReviewRequestBaseRepo struct {
	AllowMergeCommit    bool   `json:"allow_merge_commit,omitempty"`
	AllowRebaseMerge    bool   `json:"allow_rebase_merge,omitempty"`
	AllowSquashMerge    bool   `json:"allow_squash_merge,omitempty"`
	ArchiveUrl          string `json:"archive_url,omitempty"`
	Archived            bool   `json:"archived,omitempty"`
	AssigneesUrl        string `json:"assignees_url,omitempty"`
	BlobsUrl            string `json:"blobs_url,omitempty"`
	BranchesUrl         string `json:"branches_url,omitempty"`
	CloneUrl            string `json:"clone_url,omitempty"`
	CollaboratorsUrl    string `json:"collaborators_url,omitempty"`
	CommentsUrl         string `json:"comments_url,omitempty"`
	CommitsUrl          string `json:"commits_url,omitempty"`
	CompareUrl          string `json:"compare_url,omitempty"`
	ContentsUrl         string `json:"contents_url,omitempty"`
	ContributorsUrl     string `json:"contributors_url,omitempty"`
	CreatedAt           string `json:"created_at,omitempty"`
	DefaultBranch       string `json:"default_branch,omitempty"`
	DeleteBranchOnMerge bool   `json:"delete_branch_on_merge,omitempty"`
	DeploymentsUrl      string `json:"deployments_url,omitempty"`
	Description         string `json:"description,omitempty"`
	Disabled            bool   `json:"disabled,omitempty"`
	DownloadsUrl        string `json:"downloads_url,omitempty"`
	EventsUrl           string `json:"events_url,omitempty"`
	Fork                bool   `json:"fork,omitempty"`
	ForksCount          int64  `json:"forks_count,omitempty"`
	ForksUrl            string `json:"forks_url,omitempty"`
	FullName            string `json:"full_name,omitempty"`
	GitCommitsUrl       string `json:"git_commits_url,omitempty"`
	GitRefsUrl          string `json:"git_refs_url,omitempty"`
	GitTagsUrl          string `json:"git_tags_url,omitempty"`
	GitUrl              string `json:"git_url,omitempty"`
	HasDownloads        bool   `json:"has_downloads,omitempty"`
	HasIssues           bool   `json:"has_issues,omitempty"`
	HasPages            bool   `json:"has_pages,omitempty"`
	HasProjects         bool   `json:"has_projects,omitempty"`
	HasWiki             bool   `json:"has_wiki,omitempty"`
	Homepage            string `json:"homepage,omitempty"`
	HooksUrl            string `json:"hooks_url,omitempty"`
	HtmlUrl             string `json:"html_url,omitempty"`
	Id                  int64  `json:"id,omitempty"`
	IsTemplate          bool   `json:"is_template,omitempty"`
	IssueCommentUrl     string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl      string `json:"issue_events_url,omitempty"`
	IssuesUrl           string `json:"issues_url,omitempty"`
	KeysUrl             string `json:"keys_url,omitempty"`
	LabelsUrl           string `json:"labels_url,omitempty"`
	Language            string `json:"language,omitempty"`
	LanguagesUrl        string `json:"languages_url,omitempty"`
	MergesUrl           string `json:"merges_url,omitempty"`
	MilestonesUrl       string `json:"milestones_url,omitempty"`
	MirrorUrl           string `json:"mirror_url,omitempty"`
	Name                string `json:"name,omitempty"`
	NetworkCount        int64  `json:"network_count,omitempty"`
	NodeId              string `json:"node_id,omitempty"`
	NotificationsUrl    string `json:"notifications_url,omitempty"`
	OpenIssuesCount     int64  `json:"open_issues_count,omitempty"`
	Owner               struct {
		PullRequestReviewRequestBaseRepoOwner
	} `json:"owner,omitempty"`
	Permissions struct {
		PullRequestReviewRequestBaseRepoPermissions
	} `json:"permissions,omitempty"`
	Private            bool        `json:"private,omitempty"`
	PullsUrl           string      `json:"pulls_url,omitempty"`
	PushedAt           string      `json:"pushed_at,omitempty"`
	ReleasesUrl        string      `json:"releases_url,omitempty"`
	Size               json.Number `json:"size,omitempty"`
	SshUrl             string      `json:"ssh_url,omitempty"`
	StargazersCount    int64       `json:"stargazers_count,omitempty"`
	StargazersUrl      string      `json:"stargazers_url,omitempty"`
	StatusesUrl        string      `json:"statuses_url,omitempty"`
	SubscribersCount   int64       `json:"subscribers_count,omitempty"`
	SubscribersUrl     string      `json:"subscribers_url,omitempty"`
	SubscriptionUrl    string      `json:"subscription_url,omitempty"`
	SvnUrl             string      `json:"svn_url,omitempty"`
	TagsUrl            string      `json:"tags_url,omitempty"`
	TeamsUrl           string      `json:"teams_url,omitempty"`
	TempCloneToken     string      `json:"temp_clone_token,omitempty"`
	TemplateRepository interface{} `json:"template_repository,omitempty"`
	Topics             []string    `json:"topics,omitempty"`
	TreesUrl           string      `json:"trees_url,omitempty"`
	UpdatedAt          string      `json:"updated_at,omitempty"`
	Url                string      `json:"url,omitempty"`
	Visibility         string      `json:"visibility,omitempty"`
	WatchersCount      int64       `json:"watchers_count,omitempty"`
}

type PullRequestReviewRequestBaseRepoOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type PullRequestReviewRequestBaseRepoPermissions struct {
	Admin bool `json:"admin,omitempty"`
	Pull  bool `json:"pull,omitempty"`
	Push  bool `json:"push,omitempty"`
}

type PullRequestReviewRequestBaseUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type PullRequestReviewRequestHead struct {
	Label string `json:"label,omitempty"`
	Ref   string `json:"ref,omitempty"`
	Repo  struct {
		PullRequestReviewRequestHeadRepo
	} `json:"repo,omitempty"`
	Sha  string `json:"sha,omitempty"`
	User struct {
		PullRequestReviewRequestHeadUser
	} `json:"user,omitempty"`
}

type PullRequestReviewRequestHeadRepo struct {
	AllowMergeCommit    bool   `json:"allow_merge_commit,omitempty"`
	AllowRebaseMerge    bool   `json:"allow_rebase_merge,omitempty"`
	AllowSquashMerge    bool   `json:"allow_squash_merge,omitempty"`
	ArchiveUrl          string `json:"archive_url,omitempty"`
	Archived            bool   `json:"archived,omitempty"`
	AssigneesUrl        string `json:"assignees_url,omitempty"`
	BlobsUrl            string `json:"blobs_url,omitempty"`
	BranchesUrl         string `json:"branches_url,omitempty"`
	CloneUrl            string `json:"clone_url,omitempty"`
	CollaboratorsUrl    string `json:"collaborators_url,omitempty"`
	CommentsUrl         string `json:"comments_url,omitempty"`
	CommitsUrl          string `json:"commits_url,omitempty"`
	CompareUrl          string `json:"compare_url,omitempty"`
	ContentsUrl         string `json:"contents_url,omitempty"`
	ContributorsUrl     string `json:"contributors_url,omitempty"`
	CreatedAt           string `json:"created_at,omitempty"`
	DefaultBranch       string `json:"default_branch,omitempty"`
	DeleteBranchOnMerge bool   `json:"delete_branch_on_merge,omitempty"`
	DeploymentsUrl      string `json:"deployments_url,omitempty"`
	Description         string `json:"description,omitempty"`
	Disabled            bool   `json:"disabled,omitempty"`
	DownloadsUrl        string `json:"downloads_url,omitempty"`
	EventsUrl           string `json:"events_url,omitempty"`
	Fork                bool   `json:"fork,omitempty"`
	ForksCount          int64  `json:"forks_count,omitempty"`
	ForksUrl            string `json:"forks_url,omitempty"`
	FullName            string `json:"full_name,omitempty"`
	GitCommitsUrl       string `json:"git_commits_url,omitempty"`
	GitRefsUrl          string `json:"git_refs_url,omitempty"`
	GitTagsUrl          string `json:"git_tags_url,omitempty"`
	GitUrl              string `json:"git_url,omitempty"`
	HasDownloads        bool   `json:"has_downloads,omitempty"`
	HasIssues           bool   `json:"has_issues,omitempty"`
	HasPages            bool   `json:"has_pages,omitempty"`
	HasProjects         bool   `json:"has_projects,omitempty"`
	HasWiki             bool   `json:"has_wiki,omitempty"`
	Homepage            string `json:"homepage,omitempty"`
	HooksUrl            string `json:"hooks_url,omitempty"`
	HtmlUrl             string `json:"html_url,omitempty"`
	Id                  int64  `json:"id,omitempty"`
	IsTemplate          bool   `json:"is_template,omitempty"`
	IssueCommentUrl     string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl      string `json:"issue_events_url,omitempty"`
	IssuesUrl           string `json:"issues_url,omitempty"`
	KeysUrl             string `json:"keys_url,omitempty"`
	LabelsUrl           string `json:"labels_url,omitempty"`
	Language            string `json:"language,omitempty"`
	LanguagesUrl        string `json:"languages_url,omitempty"`
	MergesUrl           string `json:"merges_url,omitempty"`
	MilestonesUrl       string `json:"milestones_url,omitempty"`
	MirrorUrl           string `json:"mirror_url,omitempty"`
	Name                string `json:"name,omitempty"`
	NetworkCount        int64  `json:"network_count,omitempty"`
	NodeId              string `json:"node_id,omitempty"`
	NotificationsUrl    string `json:"notifications_url,omitempty"`
	OpenIssuesCount     int64  `json:"open_issues_count,omitempty"`
	Owner               struct {
		PullRequestReviewRequestHeadRepoOwner
	} `json:"owner,omitempty"`
	Permissions struct {
		PullRequestReviewRequestHeadRepoPermissions
	} `json:"permissions,omitempty"`
	Private            bool        `json:"private,omitempty"`
	PullsUrl           string      `json:"pulls_url,omitempty"`
	PushedAt           string      `json:"pushed_at,omitempty"`
	ReleasesUrl        string      `json:"releases_url,omitempty"`
	Size               json.Number `json:"size,omitempty"`
	SshUrl             string      `json:"ssh_url,omitempty"`
	StargazersCount    int64       `json:"stargazers_count,omitempty"`
	StargazersUrl      string      `json:"stargazers_url,omitempty"`
	StatusesUrl        string      `json:"statuses_url,omitempty"`
	SubscribersCount   int64       `json:"subscribers_count,omitempty"`
	SubscribersUrl     string      `json:"subscribers_url,omitempty"`
	SubscriptionUrl    string      `json:"subscription_url,omitempty"`
	SvnUrl             string      `json:"svn_url,omitempty"`
	TagsUrl            string      `json:"tags_url,omitempty"`
	TeamsUrl           string      `json:"teams_url,omitempty"`
	TempCloneToken     string      `json:"temp_clone_token,omitempty"`
	TemplateRepository interface{} `json:"template_repository,omitempty"`
	Topics             []string    `json:"topics,omitempty"`
	TreesUrl           string      `json:"trees_url,omitempty"`
	UpdatedAt          string      `json:"updated_at,omitempty"`
	Url                string      `json:"url,omitempty"`
	Visibility         string      `json:"visibility,omitempty"`
	WatchersCount      int64       `json:"watchers_count,omitempty"`
}

type PullRequestReviewRequestHeadRepoOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type PullRequestReviewRequestHeadRepoPermissions struct {
	Admin bool `json:"admin,omitempty"`
	Pull  bool `json:"pull,omitempty"`
	Push  bool `json:"push,omitempty"`
}

type PullRequestReviewRequestHeadUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type PullRequestReviewRequestLabel struct {
	Color       string `json:"color,omitempty"`
	Default     bool   `json:"default,omitempty"`
	Description string `json:"description,omitempty"`
	Id          int64  `json:"id,omitempty"`
	Name        string `json:"name,omitempty"`
	NodeId      string `json:"node_id,omitempty"`
	Url         string `json:"url,omitempty"`
}

type PullRequestReviewRequestMilestone struct {
	ClosedAt     string `json:"closed_at,omitempty"`
	ClosedIssues int64  `json:"closed_issues,omitempty"`
	CreatedAt    string `json:"created_at,omitempty"`
	Creator      struct {
		PullRequestReviewRequestMilestoneCreator
	} `json:"creator,omitempty"`
	Description string `json:"description,omitempty"`
	DueOn       string `json:"due_on,omitempty"`
	HtmlUrl     string `json:"html_url,omitempty"`
	Id          int64  `json:"id,omitempty"`
	LabelsUrl   string `json:"labels_url,omitempty"`
	NodeId      string `json:"node_id,omitempty"`
	Number      int64  `json:"number,omitempty"`
	OpenIssues  int64  `json:"open_issues,omitempty"`
	State       string `json:"state,omitempty"`
	Title       string `json:"title,omitempty"`
	UpdatedAt   string `json:"updated_at,omitempty"`
	Url         string `json:"url,omitempty"`
}

type PullRequestReviewRequestMilestoneCreator struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type PullRequestReviewRequestRequestedReviewer struct {
	AvatarUrl         string `json:"avatar_url"`
	EventsUrl         string `json:"events_url"`
	FollowersUrl      string `json:"followers_url"`
	FollowingUrl      string `json:"following_url"`
	GistsUrl          string `json:"gists_url"`
	GravatarId        string `json:"gravatar_id"`
	HtmlUrl           string `json:"html_url"`
	Id                int64  `json:"id"`
	Login             string `json:"login"`
	NodeId            string `json:"node_id"`
	OrganizationsUrl  string `json:"organizations_url"`
	ReceivedEventsUrl string `json:"received_events_url"`
	ReposUrl          string `json:"repos_url"`
	SiteAdmin         bool   `json:"site_admin"`
	StarredUrl        string `json:"starred_url"`
	SubscriptionsUrl  string `json:"subscriptions_url"`
	Type              string `json:"type"`
	Url               string `json:"url"`
}

type PullRequestReviewRequestRequestedTeam struct {
	Description     string      `json:"description,omitempty"`
	HtmlUrl         string      `json:"html_url,omitempty"`
	Id              int64       `json:"id,omitempty"`
	MembersUrl      string      `json:"members_url,omitempty"`
	Name            string      `json:"name,omitempty"`
	NodeId          string      `json:"node_id,omitempty"`
	Parent          interface{} `json:"parent,omitempty"`
	Permission      string      `json:"permission,omitempty"`
	Privacy         string      `json:"privacy,omitempty"`
	RepositoriesUrl string      `json:"repositories_url,omitempty"`
	Slug            string      `json:"slug,omitempty"`
	Url             string      `json:"url,omitempty"`
}

type PullRequestReviewRequestUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type PullRequestReviewUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type PullRequestSimple struct {
	Links struct {
		PullRequestSimpleLinks
	} `json:"_links,omitempty"`
	ActiveLockReason string `json:"active_lock_reason,omitempty"`
	Assignee         struct {
		PullRequestSimpleAssignee
	} `json:"assignee,omitempty"`
	Assignees []struct {
		PullRequestSimpleAssignee
	} `json:"assignees,omitempty"`
	AuthorAssociation string `json:"author_association,omitempty"`
	Base              struct {
		PullRequestSimpleBase
	} `json:"base,omitempty"`
	Body        string `json:"body,omitempty"`
	ClosedAt    string `json:"closed_at,omitempty"`
	CommentsUrl string `json:"comments_url,omitempty"`
	CommitsUrl  string `json:"commits_url,omitempty"`
	CreatedAt   string `json:"created_at,omitempty"`
	DiffUrl     string `json:"diff_url,omitempty"`
	Draft       bool   `json:"draft,omitempty"`
	Head        struct {
		PullRequestSimpleHead
	} `json:"head,omitempty"`
	HtmlUrl  string `json:"html_url,omitempty"`
	Id       int64  `json:"id,omitempty"`
	IssueUrl string `json:"issue_url,omitempty"`
	Labels   []struct {
		PullRequestSimpleLabel
	} `json:"labels,omitempty"`
	Locked         bool   `json:"locked,omitempty"`
	MergeCommitSha string `json:"merge_commit_sha,omitempty"`
	MergedAt       string `json:"merged_at,omitempty"`
	Milestone      struct {
		PullRequestSimpleMilestone
	} `json:"milestone,omitempty"`
	NodeId             string `json:"node_id,omitempty"`
	Number             int64  `json:"number,omitempty"`
	PatchUrl           string `json:"patch_url,omitempty"`
	RequestedReviewers []struct {
		PullRequestSimpleRequestedReviewer
	} `json:"requested_reviewers,omitempty"`
	RequestedTeams []struct {
		PullRequestSimpleRequestedTeam
	} `json:"requested_teams,omitempty"`
	ReviewCommentUrl  string `json:"review_comment_url,omitempty"`
	ReviewCommentsUrl string `json:"review_comments_url,omitempty"`
	State             string `json:"state,omitempty"`
	StatusesUrl       string `json:"statuses_url,omitempty"`
	Title             string `json:"title,omitempty"`
	UpdatedAt         string `json:"updated_at,omitempty"`
	Url               string `json:"url,omitempty"`
	User              struct {
		PullRequestSimpleUser
	} `json:"user,omitempty"`
}

type PullRequestSimpleLinks struct {
	Comments struct {
		PullRequestSimpleLinksComments
	} `json:"comments,omitempty"`
	Commits struct {
		PullRequestSimpleLinksCommits
	} `json:"commits,omitempty"`
	Html struct {
		PullRequestSimpleLinksHtml
	} `json:"html,omitempty"`
	Issue struct {
		PullRequestSimpleLinksIssue
	} `json:"issue,omitempty"`
	ReviewComment struct {
		PullRequestSimpleLinksReviewComment
	} `json:"review_comment,omitempty"`
	ReviewComments struct {
		PullRequestSimpleLinksReviewComments
	} `json:"review_comments,omitempty"`
	Self struct {
		PullRequestSimpleLinksSelf
	} `json:"self,omitempty"`
	Statuses struct {
		PullRequestSimpleLinksStatuses
	} `json:"statuses,omitempty"`
}

type PullRequestSimpleLinksComments struct {
	Href string `json:"href,omitempty"`
}

type PullRequestSimpleLinksCommits struct {
	Href string `json:"href,omitempty"`
}

type PullRequestSimpleLinksHtml struct {
	Href string `json:"href,omitempty"`
}

type PullRequestSimpleLinksIssue struct {
	Href string `json:"href,omitempty"`
}

type PullRequestSimpleLinksReviewComment struct {
	Href string `json:"href,omitempty"`
}

type PullRequestSimpleLinksReviewComments struct {
	Href string `json:"href,omitempty"`
}

type PullRequestSimpleLinksSelf struct {
	Href string `json:"href,omitempty"`
}

type PullRequestSimpleLinksStatuses struct {
	Href string `json:"href,omitempty"`
}

type PullRequestSimpleAssignee struct {
	AvatarUrl         string `json:"avatar_url"`
	EventsUrl         string `json:"events_url"`
	FollowersUrl      string `json:"followers_url"`
	FollowingUrl      string `json:"following_url"`
	GistsUrl          string `json:"gists_url"`
	GravatarId        string `json:"gravatar_id"`
	HtmlUrl           string `json:"html_url"`
	Id                int64  `json:"id"`
	Login             string `json:"login"`
	NodeId            string `json:"node_id"`
	OrganizationsUrl  string `json:"organizations_url"`
	ReceivedEventsUrl string `json:"received_events_url"`
	ReposUrl          string `json:"repos_url"`
	SiteAdmin         bool   `json:"site_admin"`
	StarredUrl        string `json:"starred_url"`
	SubscriptionsUrl  string `json:"subscriptions_url"`
	Type              string `json:"type"`
	Url               string `json:"url"`
}

type PullRequestSimpleBase struct {
	Label string `json:"label,omitempty"`
	Ref   string `json:"ref,omitempty"`
	Repo  struct {
		PullRequestSimpleBaseRepo
	} `json:"repo,omitempty"`
	Sha  string `json:"sha,omitempty"`
	User struct {
		PullRequestSimpleBaseUser
	} `json:"user,omitempty"`
}

type PullRequestSimpleBaseRepo struct {
	AllowMergeCommit    bool   `json:"allow_merge_commit,omitempty"`
	AllowRebaseMerge    bool   `json:"allow_rebase_merge,omitempty"`
	AllowSquashMerge    bool   `json:"allow_squash_merge,omitempty"`
	ArchiveUrl          string `json:"archive_url,omitempty"`
	Archived            bool   `json:"archived,omitempty"`
	AssigneesUrl        string `json:"assignees_url,omitempty"`
	BlobsUrl            string `json:"blobs_url,omitempty"`
	BranchesUrl         string `json:"branches_url,omitempty"`
	CloneUrl            string `json:"clone_url,omitempty"`
	CollaboratorsUrl    string `json:"collaborators_url,omitempty"`
	CommentsUrl         string `json:"comments_url,omitempty"`
	CommitsUrl          string `json:"commits_url,omitempty"`
	CompareUrl          string `json:"compare_url,omitempty"`
	ContentsUrl         string `json:"contents_url,omitempty"`
	ContributorsUrl     string `json:"contributors_url,omitempty"`
	CreatedAt           string `json:"created_at,omitempty"`
	DefaultBranch       string `json:"default_branch,omitempty"`
	DeleteBranchOnMerge bool   `json:"delete_branch_on_merge,omitempty"`
	DeploymentsUrl      string `json:"deployments_url,omitempty"`
	Description         string `json:"description,omitempty"`
	Disabled            bool   `json:"disabled,omitempty"`
	DownloadsUrl        string `json:"downloads_url,omitempty"`
	EventsUrl           string `json:"events_url,omitempty"`
	Fork                bool   `json:"fork,omitempty"`
	ForksCount          int64  `json:"forks_count,omitempty"`
	ForksUrl            string `json:"forks_url,omitempty"`
	FullName            string `json:"full_name,omitempty"`
	GitCommitsUrl       string `json:"git_commits_url,omitempty"`
	GitRefsUrl          string `json:"git_refs_url,omitempty"`
	GitTagsUrl          string `json:"git_tags_url,omitempty"`
	GitUrl              string `json:"git_url,omitempty"`
	HasDownloads        bool   `json:"has_downloads,omitempty"`
	HasIssues           bool   `json:"has_issues,omitempty"`
	HasPages            bool   `json:"has_pages,omitempty"`
	HasProjects         bool   `json:"has_projects,omitempty"`
	HasWiki             bool   `json:"has_wiki,omitempty"`
	Homepage            string `json:"homepage,omitempty"`
	HooksUrl            string `json:"hooks_url,omitempty"`
	HtmlUrl             string `json:"html_url,omitempty"`
	Id                  int64  `json:"id,omitempty"`
	IsTemplate          bool   `json:"is_template,omitempty"`
	IssueCommentUrl     string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl      string `json:"issue_events_url,omitempty"`
	IssuesUrl           string `json:"issues_url,omitempty"`
	KeysUrl             string `json:"keys_url,omitempty"`
	LabelsUrl           string `json:"labels_url,omitempty"`
	Language            string `json:"language,omitempty"`
	LanguagesUrl        string `json:"languages_url,omitempty"`
	MergesUrl           string `json:"merges_url,omitempty"`
	MilestonesUrl       string `json:"milestones_url,omitempty"`
	MirrorUrl           string `json:"mirror_url,omitempty"`
	Name                string `json:"name,omitempty"`
	NetworkCount        int64  `json:"network_count,omitempty"`
	NodeId              string `json:"node_id,omitempty"`
	NotificationsUrl    string `json:"notifications_url,omitempty"`
	OpenIssuesCount     int64  `json:"open_issues_count,omitempty"`
	Owner               struct {
		PullRequestSimpleBaseRepoOwner
	} `json:"owner,omitempty"`
	Permissions struct {
		PullRequestSimpleBaseRepoPermissions
	} `json:"permissions,omitempty"`
	Private            bool        `json:"private,omitempty"`
	PullsUrl           string      `json:"pulls_url,omitempty"`
	PushedAt           string      `json:"pushed_at,omitempty"`
	ReleasesUrl        string      `json:"releases_url,omitempty"`
	Size               json.Number `json:"size,omitempty"`
	SshUrl             string      `json:"ssh_url,omitempty"`
	StargazersCount    int64       `json:"stargazers_count,omitempty"`
	StargazersUrl      string      `json:"stargazers_url,omitempty"`
	StatusesUrl        string      `json:"statuses_url,omitempty"`
	SubscribersCount   int64       `json:"subscribers_count,omitempty"`
	SubscribersUrl     string      `json:"subscribers_url,omitempty"`
	SubscriptionUrl    string      `json:"subscription_url,omitempty"`
	SvnUrl             string      `json:"svn_url,omitempty"`
	TagsUrl            string      `json:"tags_url,omitempty"`
	TeamsUrl           string      `json:"teams_url,omitempty"`
	TempCloneToken     string      `json:"temp_clone_token,omitempty"`
	TemplateRepository interface{} `json:"template_repository,omitempty"`
	Topics             []string    `json:"topics,omitempty"`
	TreesUrl           string      `json:"trees_url,omitempty"`
	UpdatedAt          string      `json:"updated_at,omitempty"`
	Url                string      `json:"url,omitempty"`
	Visibility         string      `json:"visibility,omitempty"`
	WatchersCount      int64       `json:"watchers_count,omitempty"`
}

type PullRequestSimpleBaseRepoOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type PullRequestSimpleBaseRepoPermissions struct {
	Admin bool `json:"admin,omitempty"`
	Pull  bool `json:"pull,omitempty"`
	Push  bool `json:"push,omitempty"`
}

type PullRequestSimpleBaseUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type PullRequestSimpleHead struct {
	Label string `json:"label,omitempty"`
	Ref   string `json:"ref,omitempty"`
	Repo  struct {
		PullRequestSimpleHeadRepo
	} `json:"repo,omitempty"`
	Sha  string `json:"sha,omitempty"`
	User struct {
		PullRequestSimpleHeadUser
	} `json:"user,omitempty"`
}

type PullRequestSimpleHeadRepo struct {
	AllowMergeCommit    bool   `json:"allow_merge_commit,omitempty"`
	AllowRebaseMerge    bool   `json:"allow_rebase_merge,omitempty"`
	AllowSquashMerge    bool   `json:"allow_squash_merge,omitempty"`
	ArchiveUrl          string `json:"archive_url,omitempty"`
	Archived            bool   `json:"archived,omitempty"`
	AssigneesUrl        string `json:"assignees_url,omitempty"`
	BlobsUrl            string `json:"blobs_url,omitempty"`
	BranchesUrl         string `json:"branches_url,omitempty"`
	CloneUrl            string `json:"clone_url,omitempty"`
	CollaboratorsUrl    string `json:"collaborators_url,omitempty"`
	CommentsUrl         string `json:"comments_url,omitempty"`
	CommitsUrl          string `json:"commits_url,omitempty"`
	CompareUrl          string `json:"compare_url,omitempty"`
	ContentsUrl         string `json:"contents_url,omitempty"`
	ContributorsUrl     string `json:"contributors_url,omitempty"`
	CreatedAt           string `json:"created_at,omitempty"`
	DefaultBranch       string `json:"default_branch,omitempty"`
	DeleteBranchOnMerge bool   `json:"delete_branch_on_merge,omitempty"`
	DeploymentsUrl      string `json:"deployments_url,omitempty"`
	Description         string `json:"description,omitempty"`
	Disabled            bool   `json:"disabled,omitempty"`
	DownloadsUrl        string `json:"downloads_url,omitempty"`
	EventsUrl           string `json:"events_url,omitempty"`
	Fork                bool   `json:"fork,omitempty"`
	ForksCount          int64  `json:"forks_count,omitempty"`
	ForksUrl            string `json:"forks_url,omitempty"`
	FullName            string `json:"full_name,omitempty"`
	GitCommitsUrl       string `json:"git_commits_url,omitempty"`
	GitRefsUrl          string `json:"git_refs_url,omitempty"`
	GitTagsUrl          string `json:"git_tags_url,omitempty"`
	GitUrl              string `json:"git_url,omitempty"`
	HasDownloads        bool   `json:"has_downloads,omitempty"`
	HasIssues           bool   `json:"has_issues,omitempty"`
	HasPages            bool   `json:"has_pages,omitempty"`
	HasProjects         bool   `json:"has_projects,omitempty"`
	HasWiki             bool   `json:"has_wiki,omitempty"`
	Homepage            string `json:"homepage,omitempty"`
	HooksUrl            string `json:"hooks_url,omitempty"`
	HtmlUrl             string `json:"html_url,omitempty"`
	Id                  int64  `json:"id,omitempty"`
	IsTemplate          bool   `json:"is_template,omitempty"`
	IssueCommentUrl     string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl      string `json:"issue_events_url,omitempty"`
	IssuesUrl           string `json:"issues_url,omitempty"`
	KeysUrl             string `json:"keys_url,omitempty"`
	LabelsUrl           string `json:"labels_url,omitempty"`
	Language            string `json:"language,omitempty"`
	LanguagesUrl        string `json:"languages_url,omitempty"`
	MergesUrl           string `json:"merges_url,omitempty"`
	MilestonesUrl       string `json:"milestones_url,omitempty"`
	MirrorUrl           string `json:"mirror_url,omitempty"`
	Name                string `json:"name,omitempty"`
	NetworkCount        int64  `json:"network_count,omitempty"`
	NodeId              string `json:"node_id,omitempty"`
	NotificationsUrl    string `json:"notifications_url,omitempty"`
	OpenIssuesCount     int64  `json:"open_issues_count,omitempty"`
	Owner               struct {
		PullRequestSimpleHeadRepoOwner
	} `json:"owner,omitempty"`
	Permissions struct {
		PullRequestSimpleHeadRepoPermissions
	} `json:"permissions,omitempty"`
	Private            bool        `json:"private,omitempty"`
	PullsUrl           string      `json:"pulls_url,omitempty"`
	PushedAt           string      `json:"pushed_at,omitempty"`
	ReleasesUrl        string      `json:"releases_url,omitempty"`
	Size               json.Number `json:"size,omitempty"`
	SshUrl             string      `json:"ssh_url,omitempty"`
	StargazersCount    int64       `json:"stargazers_count,omitempty"`
	StargazersUrl      string      `json:"stargazers_url,omitempty"`
	StatusesUrl        string      `json:"statuses_url,omitempty"`
	SubscribersCount   int64       `json:"subscribers_count,omitempty"`
	SubscribersUrl     string      `json:"subscribers_url,omitempty"`
	SubscriptionUrl    string      `json:"subscription_url,omitempty"`
	SvnUrl             string      `json:"svn_url,omitempty"`
	TagsUrl            string      `json:"tags_url,omitempty"`
	TeamsUrl           string      `json:"teams_url,omitempty"`
	TempCloneToken     string      `json:"temp_clone_token,omitempty"`
	TemplateRepository interface{} `json:"template_repository,omitempty"`
	Topics             []string    `json:"topics,omitempty"`
	TreesUrl           string      `json:"trees_url,omitempty"`
	UpdatedAt          string      `json:"updated_at,omitempty"`
	Url                string      `json:"url,omitempty"`
	Visibility         string      `json:"visibility,omitempty"`
	WatchersCount      int64       `json:"watchers_count,omitempty"`
}

type PullRequestSimpleHeadRepoOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type PullRequestSimpleHeadRepoPermissions struct {
	Admin bool `json:"admin,omitempty"`
	Pull  bool `json:"pull,omitempty"`
	Push  bool `json:"push,omitempty"`
}

type PullRequestSimpleHeadUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type PullRequestSimpleLabel struct {
	Color       string `json:"color,omitempty"`
	Default     bool   `json:"default,omitempty"`
	Description string `json:"description,omitempty"`
	Id          int64  `json:"id,omitempty"`
	Name        string `json:"name,omitempty"`
	NodeId      string `json:"node_id,omitempty"`
	Url         string `json:"url,omitempty"`
}

type PullRequestSimpleMilestone struct {
	ClosedAt     string `json:"closed_at,omitempty"`
	ClosedIssues int64  `json:"closed_issues,omitempty"`
	CreatedAt    string `json:"created_at,omitempty"`
	Creator      struct {
		PullRequestSimpleMilestoneCreator
	} `json:"creator,omitempty"`
	Description string `json:"description,omitempty"`
	DueOn       string `json:"due_on,omitempty"`
	HtmlUrl     string `json:"html_url,omitempty"`
	Id          int64  `json:"id,omitempty"`
	LabelsUrl   string `json:"labels_url,omitempty"`
	NodeId      string `json:"node_id,omitempty"`
	Number      int64  `json:"number,omitempty"`
	OpenIssues  int64  `json:"open_issues,omitempty"`
	State       string `json:"state,omitempty"`
	Title       string `json:"title,omitempty"`
	UpdatedAt   string `json:"updated_at,omitempty"`
	Url         string `json:"url,omitempty"`
}

type PullRequestSimpleMilestoneCreator struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type PullRequestSimpleRequestedReviewer struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type PullRequestSimpleRequestedTeam struct {
	Description     string      `json:"description,omitempty"`
	HtmlUrl         string      `json:"html_url,omitempty"`
	Id              int64       `json:"id,omitempty"`
	MembersUrl      string      `json:"members_url,omitempty"`
	Name            string      `json:"name,omitempty"`
	NodeId          string      `json:"node_id,omitempty"`
	Parent          interface{} `json:"parent,omitempty"`
	Permission      string      `json:"permission,omitempty"`
	Privacy         string      `json:"privacy,omitempty"`
	RepositoriesUrl string      `json:"repositories_url,omitempty"`
	Slug            string      `json:"slug,omitempty"`
	Url             string      `json:"url,omitempty"`
}

type PullRequestSimpleUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type PullRequestUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type RateLimitOverview struct {
	Rate struct {
		RateLimitOverviewRate
	} `json:"rate,omitempty"`
	Resources struct {
		RateLimitOverviewResources
	} `json:"resources,omitempty"`
}

type RateLimitOverviewRate struct {
	Limit     int64 `json:"limit,omitempty"`
	Remaining int64 `json:"remaining,omitempty"`
	Reset     int64 `json:"reset,omitempty"`
}

type RateLimitOverviewResources struct {
	Core struct {
		RateLimitOverviewResourcesCore
	} `json:"core,omitempty"`
	Graphql struct {
		RateLimitOverviewResourcesGraphql
	} `json:"graphql,omitempty"`
	IntegrationManifest struct {
		RateLimitOverviewResourcesIntegrationManifest
	} `json:"integration_manifest,omitempty"`
	Search struct {
		RateLimitOverviewResourcesSearch
	} `json:"search,omitempty"`
}

type RateLimitOverviewResourcesCore struct {
	Limit     int64 `json:"limit,omitempty"`
	Remaining int64 `json:"remaining,omitempty"`
	Reset     int64 `json:"reset,omitempty"`
}

type RateLimitOverviewResourcesGraphql struct {
	Limit     int64 `json:"limit,omitempty"`
	Remaining int64 `json:"remaining,omitempty"`
	Reset     int64 `json:"reset,omitempty"`
}

type RateLimitOverviewResourcesIntegrationManifest struct {
	Limit     int64 `json:"limit,omitempty"`
	Remaining int64 `json:"remaining,omitempty"`
	Reset     int64 `json:"reset,omitempty"`
}

type RateLimitOverviewResourcesSearch struct {
	Limit     int64 `json:"limit,omitempty"`
	Remaining int64 `json:"remaining,omitempty"`
	Reset     int64 `json:"reset,omitempty"`
}

type Reaction struct {
	Content   string `json:"content,omitempty"`
	CreatedAt string `json:"created_at,omitempty"`
	Id        int64  `json:"id,omitempty"`
	NodeId    string `json:"node_id,omitempty"`
	User      struct {
		ReactionUser
	} `json:"user,omitempty"`
}

type ReactionUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type ReferrerTraffic struct {
	Count    int64  `json:"count,omitempty"`
	Referrer string `json:"referrer,omitempty"`
	Uniques  int64  `json:"uniques,omitempty"`
}

type Release struct {
	Assets    []interface{} `json:"assets,omitempty"`
	AssetsUrl string        `json:"assets_url,omitempty"`
	Author    struct {
		ReleaseAuthor
	} `json:"author,omitempty"`
	Body            string `json:"body,omitempty"`
	CreatedAt       string `json:"created_at,omitempty"`
	Draft           bool   `json:"draft,omitempty"`
	HtmlUrl         string `json:"html_url,omitempty"`
	Id              int64  `json:"id,omitempty"`
	Name            string `json:"name,omitempty"`
	NodeId          string `json:"node_id,omitempty"`
	Prerelease      bool   `json:"prerelease,omitempty"`
	PublishedAt     string `json:"published_at,omitempty"`
	TagName         string `json:"tag_name,omitempty"`
	TarballUrl      string `json:"tarball_url,omitempty"`
	TargetCommitish string `json:"target_commitish,omitempty"`
	UploadUrl       string `json:"upload_url,omitempty"`
	Url             string `json:"url,omitempty"`
	ZipballUrl      string `json:"zipball_url,omitempty"`
}

type Release2 struct {
	Assets []struct {
		Release2Asset
	} `json:"assets,omitempty"`
	AssetsUrl string `json:"assets_url,omitempty"`
	Author    struct {
		Release2Author
	} `json:"author,omitempty"`
	Body            string `json:"body,omitempty"`
	CreatedAt       string `json:"created_at,omitempty"`
	Draft           bool   `json:"draft,omitempty"`
	HtmlUrl         string `json:"html_url,omitempty"`
	Id              int64  `json:"id,omitempty"`
	Name            string `json:"name,omitempty"`
	NodeId          string `json:"node_id,omitempty"`
	Prerelease      bool   `json:"prerelease,omitempty"`
	PublishedAt     string `json:"published_at,omitempty"`
	TagName         string `json:"tag_name,omitempty"`
	TarballUrl      string `json:"tarball_url,omitempty"`
	TargetCommitish string `json:"target_commitish,omitempty"`
	UploadUrl       string `json:"upload_url,omitempty"`
	Url             string `json:"url,omitempty"`
	ZipballUrl      string `json:"zipball_url,omitempty"`
}

type Release2Asset struct {
	BrowserDownloadUrl string      `json:"browser_download_url,omitempty"`
	ContentType        string      `json:"content_type,omitempty"`
	CreatedAt          string      `json:"created_at,omitempty"`
	DownloadCount      int64       `json:"download_count,omitempty"`
	Id                 int64       `json:"id,omitempty"`
	Label              string      `json:"label,omitempty"`
	Name               string      `json:"name,omitempty"`
	NodeId             string      `json:"node_id,omitempty"`
	Size               json.Number `json:"size,omitempty"`
	State              string      `json:"state,omitempty"`
	UpdatedAt          string      `json:"updated_at,omitempty"`
	Uploader           struct {
		Release2AssetUploader
	} `json:"uploader,omitempty"`
	Url string `json:"url,omitempty"`
}

type Release2AssetUploader struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type Release2Author struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type ReleaseAsset struct {
	BrowserDownloadUrl string      `json:"browser_download_url,omitempty"`
	ContentType        string      `json:"content_type,omitempty"`
	CreatedAt          string      `json:"created_at,omitempty"`
	DownloadCount      int64       `json:"download_count,omitempty"`
	Id                 int64       `json:"id,omitempty"`
	Label              string      `json:"label,omitempty"`
	Name               string      `json:"name,omitempty"`
	NodeId             string      `json:"node_id,omitempty"`
	Size               json.Number `json:"size,omitempty"`
	State              string      `json:"state,omitempty"`
	UpdatedAt          string      `json:"updated_at,omitempty"`
	Uploader           struct {
		ReleaseAssetUploader
	} `json:"uploader,omitempty"`
	Url string `json:"url,omitempty"`
}

type ReleaseAssetUploader struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type ReleaseAuthor struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type RepoSearchResultItem struct {
	CreatedAt       string `json:"created_at,omitempty"`
	DefaultBranch   string `json:"default_branch,omitempty"`
	Description     string `json:"description,omitempty"`
	Fork            bool   `json:"fork,omitempty"`
	ForksCount      int64  `json:"forks_count,omitempty"`
	FullName        string `json:"full_name,omitempty"`
	Homepage        string `json:"homepage,omitempty"`
	HtmlUrl         string `json:"html_url,omitempty"`
	Id              int64  `json:"id,omitempty"`
	Language        string `json:"language,omitempty"`
	MasterBranch    string `json:"master_branch,omitempty"`
	Name            string `json:"name,omitempty"`
	NodeId          string `json:"node_id,omitempty"`
	OpenIssuesCount int64  `json:"open_issues_count,omitempty"`
	Owner           struct {
		RepoSearchResultItemOwner
	} `json:"owner,omitempty"`
	Private         bool        `json:"private,omitempty"`
	PushedAt        string      `json:"pushed_at,omitempty"`
	Score           json.Number `json:"score,omitempty"`
	Size            json.Number `json:"size,omitempty"`
	StargazersCount int64       `json:"stargazers_count,omitempty"`
	UpdatedAt       string      `json:"updated_at,omitempty"`
	Url             string      `json:"url,omitempty"`
	WatchersCount   int64       `json:"watchers_count,omitempty"`
}

type RepoSearchResultItemOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type Repository struct {
	AllowMergeCommit    bool   `json:"allow_merge_commit,omitempty"`
	AllowRebaseMerge    bool   `json:"allow_rebase_merge,omitempty"`
	AllowSquashMerge    bool   `json:"allow_squash_merge,omitempty"`
	ArchiveUrl          string `json:"archive_url,omitempty"`
	Archived            bool   `json:"archived,omitempty"`
	AssigneesUrl        string `json:"assignees_url,omitempty"`
	BlobsUrl            string `json:"blobs_url,omitempty"`
	BranchesUrl         string `json:"branches_url,omitempty"`
	CloneUrl            string `json:"clone_url,omitempty"`
	CollaboratorsUrl    string `json:"collaborators_url,omitempty"`
	CommentsUrl         string `json:"comments_url,omitempty"`
	CommitsUrl          string `json:"commits_url,omitempty"`
	CompareUrl          string `json:"compare_url,omitempty"`
	ContentsUrl         string `json:"contents_url,omitempty"`
	ContributorsUrl     string `json:"contributors_url,omitempty"`
	CreatedAt           string `json:"created_at,omitempty"`
	DefaultBranch       string `json:"default_branch,omitempty"`
	DeleteBranchOnMerge bool   `json:"delete_branch_on_merge,omitempty"`
	DeploymentsUrl      string `json:"deployments_url,omitempty"`
	Description         string `json:"description,omitempty"`
	Disabled            bool   `json:"disabled,omitempty"`
	DownloadsUrl        string `json:"downloads_url,omitempty"`
	EventsUrl           string `json:"events_url,omitempty"`
	Fork                bool   `json:"fork,omitempty"`
	ForksCount          int64  `json:"forks_count,omitempty"`
	ForksUrl            string `json:"forks_url,omitempty"`
	FullName            string `json:"full_name,omitempty"`
	GitCommitsUrl       string `json:"git_commits_url,omitempty"`
	GitRefsUrl          string `json:"git_refs_url,omitempty"`
	GitTagsUrl          string `json:"git_tags_url,omitempty"`
	GitUrl              string `json:"git_url,omitempty"`
	HasDownloads        bool   `json:"has_downloads,omitempty"`
	HasIssues           bool   `json:"has_issues,omitempty"`
	HasPages            bool   `json:"has_pages,omitempty"`
	HasProjects         bool   `json:"has_projects,omitempty"`
	HasWiki             bool   `json:"has_wiki,omitempty"`
	Homepage            string `json:"homepage,omitempty"`
	HooksUrl            string `json:"hooks_url,omitempty"`
	HtmlUrl             string `json:"html_url,omitempty"`
	Id                  int64  `json:"id,omitempty"`
	IsTemplate          bool   `json:"is_template,omitempty"`
	IssueCommentUrl     string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl      string `json:"issue_events_url,omitempty"`
	IssuesUrl           string `json:"issues_url,omitempty"`
	KeysUrl             string `json:"keys_url,omitempty"`
	LabelsUrl           string `json:"labels_url,omitempty"`
	Language            string `json:"language,omitempty"`
	LanguagesUrl        string `json:"languages_url,omitempty"`
	MergesUrl           string `json:"merges_url,omitempty"`
	MilestonesUrl       string `json:"milestones_url,omitempty"`
	MirrorUrl           string `json:"mirror_url,omitempty"`
	Name                string `json:"name,omitempty"`
	NetworkCount        int64  `json:"network_count,omitempty"`
	NodeId              string `json:"node_id,omitempty"`
	NotificationsUrl    string `json:"notifications_url,omitempty"`
	OpenIssuesCount     int64  `json:"open_issues_count,omitempty"`
	Owner               struct {
		RepositoryOwner
	} `json:"owner,omitempty"`
	Permissions struct {
		RepositoryPermissions
	} `json:"permissions,omitempty"`
	Private            bool        `json:"private,omitempty"`
	PullsUrl           string      `json:"pulls_url,omitempty"`
	PushedAt           string      `json:"pushed_at,omitempty"`
	ReleasesUrl        string      `json:"releases_url,omitempty"`
	Size               json.Number `json:"size,omitempty"`
	SshUrl             string      `json:"ssh_url,omitempty"`
	StargazersCount    int64       `json:"stargazers_count,omitempty"`
	StargazersUrl      string      `json:"stargazers_url,omitempty"`
	StatusesUrl        string      `json:"statuses_url,omitempty"`
	SubscribersCount   int64       `json:"subscribers_count,omitempty"`
	SubscribersUrl     string      `json:"subscribers_url,omitempty"`
	SubscriptionUrl    string      `json:"subscription_url,omitempty"`
	SvnUrl             string      `json:"svn_url,omitempty"`
	TagsUrl            string      `json:"tags_url,omitempty"`
	TeamsUrl           string      `json:"teams_url,omitempty"`
	TempCloneToken     string      `json:"temp_clone_token,omitempty"`
	TemplateRepository interface{} `json:"template_repository,omitempty"`
	Topics             []string    `json:"topics,omitempty"`
	TreesUrl           string      `json:"trees_url,omitempty"`
	UpdatedAt          string      `json:"updated_at,omitempty"`
	Url                string      `json:"url,omitempty"`
	Visibility         string      `json:"visibility,omitempty"`
	WatchersCount      int64       `json:"watchers_count,omitempty"`
}

type Repository2 struct {
	AllowMergeCommit    bool   `json:"allow_merge_commit,omitempty"`
	AllowRebaseMerge    bool   `json:"allow_rebase_merge,omitempty"`
	AllowSquashMerge    bool   `json:"allow_squash_merge,omitempty"`
	ArchiveUrl          string `json:"archive_url,omitempty"`
	Archived            bool   `json:"archived,omitempty"`
	AssigneesUrl        string `json:"assignees_url,omitempty"`
	BlobsUrl            string `json:"blobs_url,omitempty"`
	BranchesUrl         string `json:"branches_url,omitempty"`
	CloneUrl            string `json:"clone_url,omitempty"`
	CollaboratorsUrl    string `json:"collaborators_url,omitempty"`
	CommentsUrl         string `json:"comments_url,omitempty"`
	CommitsUrl          string `json:"commits_url,omitempty"`
	CompareUrl          string `json:"compare_url,omitempty"`
	ContentsUrl         string `json:"contents_url,omitempty"`
	ContributorsUrl     string `json:"contributors_url,omitempty"`
	CreatedAt           string `json:"created_at,omitempty"`
	DefaultBranch       string `json:"default_branch,omitempty"`
	DeleteBranchOnMerge bool   `json:"delete_branch_on_merge,omitempty"`
	DeploymentsUrl      string `json:"deployments_url,omitempty"`
	Description         string `json:"description,omitempty"`
	Disabled            bool   `json:"disabled,omitempty"`
	DownloadsUrl        string `json:"downloads_url,omitempty"`
	EventsUrl           string `json:"events_url,omitempty"`
	Fork                bool   `json:"fork,omitempty"`
	ForksCount          int64  `json:"forks_count,omitempty"`
	ForksUrl            string `json:"forks_url,omitempty"`
	FullName            string `json:"full_name,omitempty"`
	GitCommitsUrl       string `json:"git_commits_url,omitempty"`
	GitRefsUrl          string `json:"git_refs_url,omitempty"`
	GitTagsUrl          string `json:"git_tags_url,omitempty"`
	GitUrl              string `json:"git_url,omitempty"`
	HasDownloads        bool   `json:"has_downloads,omitempty"`
	HasIssues           bool   `json:"has_issues,omitempty"`
	HasPages            bool   `json:"has_pages,omitempty"`
	HasProjects         bool   `json:"has_projects,omitempty"`
	HasWiki             bool   `json:"has_wiki,omitempty"`
	Homepage            string `json:"homepage,omitempty"`
	HooksUrl            string `json:"hooks_url,omitempty"`
	HtmlUrl             string `json:"html_url,omitempty"`
	Id                  int64  `json:"id,omitempty"`
	IsTemplate          bool   `json:"is_template,omitempty"`
	IssueCommentUrl     string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl      string `json:"issue_events_url,omitempty"`
	IssuesUrl           string `json:"issues_url,omitempty"`
	KeysUrl             string `json:"keys_url,omitempty"`
	LabelsUrl           string `json:"labels_url,omitempty"`
	Language            string `json:"language,omitempty"`
	LanguagesUrl        string `json:"languages_url,omitempty"`
	MergesUrl           string `json:"merges_url,omitempty"`
	MilestonesUrl       string `json:"milestones_url,omitempty"`
	MirrorUrl           string `json:"mirror_url,omitempty"`
	Name                string `json:"name,omitempty"`
	NetworkCount        int64  `json:"network_count,omitempty"`
	NodeId              string `json:"node_id,omitempty"`
	NotificationsUrl    string `json:"notifications_url,omitempty"`
	OpenIssuesCount     int64  `json:"open_issues_count,omitempty"`
	Owner               struct {
		Repository2Owner
	} `json:"owner,omitempty"`
	Private            bool        `json:"private,omitempty"`
	PullsUrl           string      `json:"pulls_url,omitempty"`
	PushedAt           string      `json:"pushed_at,omitempty"`
	ReleasesUrl        string      `json:"releases_url,omitempty"`
	Size               json.Number `json:"size,omitempty"`
	SshUrl             string      `json:"ssh_url,omitempty"`
	StargazersCount    int64       `json:"stargazers_count,omitempty"`
	StargazersUrl      string      `json:"stargazers_url,omitempty"`
	StatusesUrl        string      `json:"statuses_url,omitempty"`
	SubscribersCount   int64       `json:"subscribers_count,omitempty"`
	SubscribersUrl     string      `json:"subscribers_url,omitempty"`
	SubscriptionUrl    string      `json:"subscription_url,omitempty"`
	SvnUrl             string      `json:"svn_url,omitempty"`
	TagsUrl            string      `json:"tags_url,omitempty"`
	TeamsUrl           string      `json:"teams_url,omitempty"`
	TempCloneToken     string      `json:"temp_clone_token,omitempty"`
	TemplateRepository interface{} `json:"template_repository,omitempty"`
	Topics             []string    `json:"topics,omitempty"`
	TreesUrl           string      `json:"trees_url,omitempty"`
	UpdatedAt          string      `json:"updated_at,omitempty"`
	Url                string      `json:"url,omitempty"`
	Visibility         string      `json:"visibility,omitempty"`
	WatchersCount      int64       `json:"watchers_count,omitempty"`
}

type Repository2Owner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type Repository3 struct {
	AllowMergeCommit    bool   `json:"allow_merge_commit,omitempty"`
	AllowRebaseMerge    bool   `json:"allow_rebase_merge,omitempty"`
	AllowSquashMerge    bool   `json:"allow_squash_merge,omitempty"`
	ArchiveUrl          string `json:"archive_url,omitempty"`
	Archived            bool   `json:"archived,omitempty"`
	AssigneesUrl        string `json:"assignees_url,omitempty"`
	BlobsUrl            string `json:"blobs_url,omitempty"`
	BranchesUrl         string `json:"branches_url,omitempty"`
	CloneUrl            string `json:"clone_url,omitempty"`
	CollaboratorsUrl    string `json:"collaborators_url,omitempty"`
	CommentsUrl         string `json:"comments_url,omitempty"`
	CommitsUrl          string `json:"commits_url,omitempty"`
	CompareUrl          string `json:"compare_url,omitempty"`
	ContentsUrl         string `json:"contents_url,omitempty"`
	ContributorsUrl     string `json:"contributors_url,omitempty"`
	CreatedAt           string `json:"created_at,omitempty"`
	DefaultBranch       string `json:"default_branch,omitempty"`
	DeleteBranchOnMerge bool   `json:"delete_branch_on_merge,omitempty"`
	DeploymentsUrl      string `json:"deployments_url,omitempty"`
	Description         string `json:"description,omitempty"`
	Disabled            bool   `json:"disabled,omitempty"`
	DownloadsUrl        string `json:"downloads_url,omitempty"`
	EventsUrl           string `json:"events_url,omitempty"`
	Fork                bool   `json:"fork,omitempty"`
	ForksCount          int64  `json:"forks_count,omitempty"`
	ForksUrl            string `json:"forks_url,omitempty"`
	FullName            string `json:"full_name,omitempty"`
	GitCommitsUrl       string `json:"git_commits_url,omitempty"`
	GitRefsUrl          string `json:"git_refs_url,omitempty"`
	GitTagsUrl          string `json:"git_tags_url,omitempty"`
	GitUrl              string `json:"git_url,omitempty"`
	HasDownloads        bool   `json:"has_downloads,omitempty"`
	HasIssues           bool   `json:"has_issues,omitempty"`
	HasPages            bool   `json:"has_pages,omitempty"`
	HasProjects         bool   `json:"has_projects,omitempty"`
	HasWiki             bool   `json:"has_wiki,omitempty"`
	Homepage            string `json:"homepage,omitempty"`
	HooksUrl            string `json:"hooks_url,omitempty"`
	HtmlUrl             string `json:"html_url,omitempty"`
	Id                  int64  `json:"id,omitempty"`
	IsTemplate          bool   `json:"is_template,omitempty"`
	IssueCommentUrl     string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl      string `json:"issue_events_url,omitempty"`
	IssuesUrl           string `json:"issues_url,omitempty"`
	KeysUrl             string `json:"keys_url,omitempty"`
	LabelsUrl           string `json:"labels_url,omitempty"`
	Language            string `json:"language,omitempty"`
	LanguagesUrl        string `json:"languages_url,omitempty"`
	MergesUrl           string `json:"merges_url,omitempty"`
	MilestonesUrl       string `json:"milestones_url,omitempty"`
	MirrorUrl           string `json:"mirror_url,omitempty"`
	Name                string `json:"name,omitempty"`
	NetworkCount        int64  `json:"network_count,omitempty"`
	NodeId              string `json:"node_id,omitempty"`
	NotificationsUrl    string `json:"notifications_url,omitempty"`
	OpenIssuesCount     int64  `json:"open_issues_count,omitempty"`
	Owner               struct {
		Repository3Owner
	} `json:"owner,omitempty"`
	Permissions struct {
		Repository3Permissions
	} `json:"permissions,omitempty"`
	Private            bool        `json:"private,omitempty"`
	PullsUrl           string      `json:"pulls_url,omitempty"`
	PushedAt           string      `json:"pushed_at,omitempty"`
	ReleasesUrl        string      `json:"releases_url,omitempty"`
	Size               json.Number `json:"size,omitempty"`
	SshUrl             string      `json:"ssh_url,omitempty"`
	StargazersCount    int64       `json:"stargazers_count,omitempty"`
	StargazersUrl      string      `json:"stargazers_url,omitempty"`
	StatusesUrl        string      `json:"statuses_url,omitempty"`
	SubscribersCount   int64       `json:"subscribers_count,omitempty"`
	SubscribersUrl     string      `json:"subscribers_url,omitempty"`
	SubscriptionUrl    string      `json:"subscription_url,omitempty"`
	SvnUrl             string      `json:"svn_url,omitempty"`
	TagsUrl            string      `json:"tags_url,omitempty"`
	TeamsUrl           string      `json:"teams_url,omitempty"`
	TempCloneToken     string      `json:"temp_clone_token,omitempty"`
	TemplateRepository struct {
		Repository3TemplateRepository
	} `json:"template_repository,omitempty"`
	Topics        []string `json:"topics,omitempty"`
	TreesUrl      string   `json:"trees_url,omitempty"`
	UpdatedAt     string   `json:"updated_at,omitempty"`
	Url           string   `json:"url,omitempty"`
	Visibility    string   `json:"visibility,omitempty"`
	WatchersCount int64    `json:"watchers_count,omitempty"`
}

type Repository3Owner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type Repository3Permissions struct {
	Admin bool `json:"admin,omitempty"`
	Pull  bool `json:"pull,omitempty"`
	Push  bool `json:"push,omitempty"`
}

type Repository3TemplateRepository struct {
	AllowMergeCommit    bool   `json:"allow_merge_commit,omitempty"`
	AllowRebaseMerge    bool   `json:"allow_rebase_merge,omitempty"`
	AllowSquashMerge    bool   `json:"allow_squash_merge,omitempty"`
	ArchiveUrl          string `json:"archive_url,omitempty"`
	Archived            bool   `json:"archived,omitempty"`
	AssigneesUrl        string `json:"assignees_url,omitempty"`
	BlobsUrl            string `json:"blobs_url,omitempty"`
	BranchesUrl         string `json:"branches_url,omitempty"`
	CloneUrl            string `json:"clone_url,omitempty"`
	CollaboratorsUrl    string `json:"collaborators_url,omitempty"`
	CommentsUrl         string `json:"comments_url,omitempty"`
	CommitsUrl          string `json:"commits_url,omitempty"`
	CompareUrl          string `json:"compare_url,omitempty"`
	ContentsUrl         string `json:"contents_url,omitempty"`
	ContributorsUrl     string `json:"contributors_url,omitempty"`
	CreatedAt           string `json:"created_at,omitempty"`
	DefaultBranch       string `json:"default_branch,omitempty"`
	DeleteBranchOnMerge bool   `json:"delete_branch_on_merge,omitempty"`
	DeploymentsUrl      string `json:"deployments_url,omitempty"`
	Description         string `json:"description,omitempty"`
	Disabled            bool   `json:"disabled,omitempty"`
	DownloadsUrl        string `json:"downloads_url,omitempty"`
	EventsUrl           string `json:"events_url,omitempty"`
	Fork                bool   `json:"fork,omitempty"`
	ForksCount          int64  `json:"forks_count,omitempty"`
	ForksUrl            string `json:"forks_url,omitempty"`
	FullName            string `json:"full_name,omitempty"`
	GitCommitsUrl       string `json:"git_commits_url,omitempty"`
	GitRefsUrl          string `json:"git_refs_url,omitempty"`
	GitTagsUrl          string `json:"git_tags_url,omitempty"`
	GitUrl              string `json:"git_url,omitempty"`
	HasDownloads        bool   `json:"has_downloads,omitempty"`
	HasIssues           bool   `json:"has_issues,omitempty"`
	HasPages            bool   `json:"has_pages,omitempty"`
	HasProjects         bool   `json:"has_projects,omitempty"`
	HasWiki             bool   `json:"has_wiki,omitempty"`
	Homepage            string `json:"homepage,omitempty"`
	HooksUrl            string `json:"hooks_url,omitempty"`
	HtmlUrl             string `json:"html_url,omitempty"`
	Id                  int64  `json:"id,omitempty"`
	IsTemplate          bool   `json:"is_template,omitempty"`
	IssueCommentUrl     string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl      string `json:"issue_events_url,omitempty"`
	IssuesUrl           string `json:"issues_url,omitempty"`
	KeysUrl             string `json:"keys_url,omitempty"`
	LabelsUrl           string `json:"labels_url,omitempty"`
	Language            string `json:"language,omitempty"`
	LanguagesUrl        string `json:"languages_url,omitempty"`
	MergesUrl           string `json:"merges_url,omitempty"`
	MilestonesUrl       string `json:"milestones_url,omitempty"`
	MirrorUrl           string `json:"mirror_url,omitempty"`
	Name                string `json:"name,omitempty"`
	NetworkCount        int64  `json:"network_count,omitempty"`
	NodeId              string `json:"node_id,omitempty"`
	NotificationsUrl    string `json:"notifications_url,omitempty"`
	OpenIssuesCount     int64  `json:"open_issues_count,omitempty"`
	Owner               struct {
		Repository3TemplateRepositoryOwner
	} `json:"owner,omitempty"`
	Permissions struct {
		Repository3TemplateRepositoryPermissions
	} `json:"permissions,omitempty"`
	Private            bool        `json:"private,omitempty"`
	PullsUrl           string      `json:"pulls_url,omitempty"`
	PushedAt           string      `json:"pushed_at,omitempty"`
	ReleasesUrl        string      `json:"releases_url,omitempty"`
	Size               json.Number `json:"size,omitempty"`
	SshUrl             string      `json:"ssh_url,omitempty"`
	StargazersCount    int64       `json:"stargazers_count,omitempty"`
	StargazersUrl      string      `json:"stargazers_url,omitempty"`
	StatusesUrl        string      `json:"statuses_url,omitempty"`
	SubscribersCount   int64       `json:"subscribers_count,omitempty"`
	SubscribersUrl     string      `json:"subscribers_url,omitempty"`
	SubscriptionUrl    string      `json:"subscription_url,omitempty"`
	SvnUrl             string      `json:"svn_url,omitempty"`
	TagsUrl            string      `json:"tags_url,omitempty"`
	TeamsUrl           string      `json:"teams_url,omitempty"`
	TempCloneToken     string      `json:"temp_clone_token,omitempty"`
	TemplateRepository interface{} `json:"template_repository,omitempty"`
	Topics             []string    `json:"topics,omitempty"`
	TreesUrl           string      `json:"trees_url,omitempty"`
	UpdatedAt          string      `json:"updated_at,omitempty"`
	Url                string      `json:"url,omitempty"`
	Visibility         string      `json:"visibility,omitempty"`
	WatchersCount      int64       `json:"watchers_count,omitempty"`
}

type Repository3TemplateRepositoryOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type Repository3TemplateRepositoryPermissions struct {
	Admin bool `json:"admin,omitempty"`
	Pull  bool `json:"pull,omitempty"`
	Push  bool `json:"push,omitempty"`
}

type RepositoryCollaboratorPermission struct {
	Permission string `json:"permission,omitempty"`
	User       struct {
		RepositoryCollaboratorPermissionUser
	} `json:"user,omitempty"`
}

type RepositoryCollaboratorPermissionUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type RepositoryInvitation struct {
	CreatedAt string `json:"created_at,omitempty"`
	HtmlUrl   string `json:"html_url,omitempty"`
	Id        int64  `json:"id,omitempty"`
	Invitee   struct {
		RepositoryInvitationInvitee
	} `json:"invitee,omitempty"`
	Inviter struct {
		RepositoryInvitationInviter
	} `json:"inviter,omitempty"`
	Permissions string `json:"permissions,omitempty"`
	Repository  struct {
		RepositoryInvitationRepository
	} `json:"repository,omitempty"`
	Url string `json:"url,omitempty"`
}

type RepositoryInvitationInvitee struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type RepositoryInvitationInviter struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type RepositoryInvitationRepository struct {
	ArchiveUrl       string `json:"archive_url,omitempty"`
	AssigneesUrl     string `json:"assignees_url,omitempty"`
	BlobsUrl         string `json:"blobs_url,omitempty"`
	BranchesUrl      string `json:"branches_url,omitempty"`
	CollaboratorsUrl string `json:"collaborators_url,omitempty"`
	CommentsUrl      string `json:"comments_url,omitempty"`
	CommitsUrl       string `json:"commits_url,omitempty"`
	CompareUrl       string `json:"compare_url,omitempty"`
	ContentsUrl      string `json:"contents_url,omitempty"`
	ContributorsUrl  string `json:"contributors_url,omitempty"`
	DeploymentsUrl   string `json:"deployments_url,omitempty"`
	Description      string `json:"description,omitempty"`
	DownloadsUrl     string `json:"downloads_url,omitempty"`
	EventsUrl        string `json:"events_url,omitempty"`
	Fork             bool   `json:"fork,omitempty"`
	ForksUrl         string `json:"forks_url,omitempty"`
	FullName         string `json:"full_name,omitempty"`
	GitCommitsUrl    string `json:"git_commits_url,omitempty"`
	GitRefsUrl       string `json:"git_refs_url,omitempty"`
	GitTagsUrl       string `json:"git_tags_url,omitempty"`
	GitUrl           string `json:"git_url,omitempty"`
	HtmlUrl          string `json:"html_url,omitempty"`
	Id               int64  `json:"id,omitempty"`
	IssueCommentUrl  string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl   string `json:"issue_events_url,omitempty"`
	IssuesUrl        string `json:"issues_url,omitempty"`
	KeysUrl          string `json:"keys_url,omitempty"`
	LabelsUrl        string `json:"labels_url,omitempty"`
	LanguagesUrl     string `json:"languages_url,omitempty"`
	MergesUrl        string `json:"merges_url,omitempty"`
	MilestonesUrl    string `json:"milestones_url,omitempty"`
	Name             string `json:"name,omitempty"`
	NodeId           string `json:"node_id,omitempty"`
	NotificationsUrl string `json:"notifications_url,omitempty"`
	Owner            struct {
		RepositoryInvitationRepositoryOwner
	} `json:"owner,omitempty"`
	Private         bool   `json:"private,omitempty"`
	PullsUrl        string `json:"pulls_url,omitempty"`
	ReleasesUrl     string `json:"releases_url,omitempty"`
	SshUrl          string `json:"ssh_url,omitempty"`
	StargazersUrl   string `json:"stargazers_url,omitempty"`
	StatusesUrl     string `json:"statuses_url,omitempty"`
	SubscribersUrl  string `json:"subscribers_url,omitempty"`
	SubscriptionUrl string `json:"subscription_url,omitempty"`
	TagsUrl         string `json:"tags_url,omitempty"`
	TeamsUrl        string `json:"teams_url,omitempty"`
	TreesUrl        string `json:"trees_url,omitempty"`
	Url             string `json:"url,omitempty"`
}

type RepositoryInvitationRepositoryOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type RepositoryOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type RepositoryPermissions struct {
	Admin bool `json:"admin,omitempty"`
	Pull  bool `json:"pull,omitempty"`
	Push  bool `json:"push,omitempty"`
}

type RepositorySubscription struct {
	CreatedAt     string `json:"created_at,omitempty"`
	Ignored       bool   `json:"ignored,omitempty"`
	Reason        string `json:"reason,omitempty"`
	RepositoryUrl string `json:"repository_url,omitempty"`
	Subscribed    bool   `json:"subscribed,omitempty"`
	Url           string `json:"url,omitempty"`
}

type Runner struct {
	Busy   bool   `json:"busy,omitempty"`
	Id     int64  `json:"id,omitempty"`
	Name   string `json:"name,omitempty"`
	Os     string `json:"os,omitempty"`
	Status string `json:"status,omitempty"`
}

type Runner2 struct {
	Busy   bool   `json:"busy"`
	Id     int64  `json:"id"`
	Name   string `json:"name"`
	Os     string `json:"os"`
	Status string `json:"status"`
}

type RunnerApplication struct {
	Architecture string `json:"architecture,omitempty"`
	DownloadUrl  string `json:"download_url,omitempty"`
	Filename     string `json:"filename,omitempty"`
	Os           string `json:"os,omitempty"`
}

type ScimUser struct {
	Active bool `json:"active,omitempty"`
	Emails []struct {
		ScimUserEmail
	} `json:"emails,omitempty"`
	ExternalId string `json:"externalId,omitempty"`
	Id         string `json:"id,omitempty"`
	Meta       struct {
		ScimUserMeta
	} `json:"meta,omitempty"`
	Name struct {
		ScimUserName
	} `json:"name,omitempty"`
	Schemas  []string `json:"schemas,omitempty"`
	UserName string   `json:"userName,omitempty"`
}

type ScimUser2 struct {
	Active bool `json:"active,omitempty"`
	Emails []struct {
		ScimUser2Email
	} `json:"emails,omitempty"`
	ExternalId string `json:"externalId,omitempty"`
	Id         string `json:"id,omitempty"`
	Meta       struct {
		ScimUser2Meta
	} `json:"meta,omitempty"`
	Name struct {
		ScimUser2Name
	} `json:"name,omitempty"`
	Schemas  []string `json:"schemas,omitempty"`
	UserName string   `json:"userName,omitempty"`
}

type ScimUser2Email struct {
	Primary bool   `json:"primary,omitempty"`
	Type    string `json:"type"`
	Value   string `json:"value"`
}

type ScimUser2Meta struct {
	Created      string `json:"created,omitempty"`
	LastModified string `json:"lastModified,omitempty"`
	Location     string `json:"location,omitempty"`
	ResourceType string `json:"resourceType,omitempty"`
}

type ScimUser2Name struct {
	FamilyName string `json:"familyName,omitempty"`
	GivenName  string `json:"givenName,omitempty"`
}

type ScimUserEmail struct {
	Primary bool   `json:"primary,omitempty"`
	Type    string `json:"type,omitempty"`
	Value   string `json:"value,omitempty"`
}

type ScimUserList struct {
	Resources []struct {
		ScimUserListResource
	} `json:"Resources,omitempty"`
	ItemsPerPage int64    `json:"itemsPerPage,omitempty"`
	Schemas      []string `json:"schemas,omitempty"`
	StartIndex   int64    `json:"startIndex,omitempty"`
	TotalResults int64    `json:"totalResults,omitempty"`
}

type ScimUserListResource struct {
	Active bool `json:"active,omitempty"`
	Emails []struct {
		ScimUserListResourceEmail
	} `json:"emails,omitempty"`
	ExternalId string `json:"externalId,omitempty"`
	Id         string `json:"id,omitempty"`
	Meta       struct {
		ScimUserListResourceMeta
	} `json:"meta,omitempty"`
	Name struct {
		ScimUserListResourceName
	} `json:"name,omitempty"`
	Schemas  []string `json:"schemas,omitempty"`
	UserName string   `json:"userName,omitempty"`
}

type ScimUserListResourceEmail struct {
	Primary bool   `json:"primary,omitempty"`
	Type    string `json:"type,omitempty"`
	Value   string `json:"value,omitempty"`
}

type ScimUserListResourceMeta struct {
	Created      string `json:"created,omitempty"`
	LastModified string `json:"lastModified,omitempty"`
	Location     string `json:"location,omitempty"`
	ResourceType string `json:"resourceType,omitempty"`
}

type ScimUserListResourceName struct {
	FamilyName string `json:"familyName,omitempty"`
	GivenName  string `json:"givenName,omitempty"`
}

type ScimUserMeta struct {
	Created      string `json:"created,omitempty"`
	LastModified string `json:"lastModified,omitempty"`
	Location     string `json:"location,omitempty"`
	ResourceType string `json:"resourceType,omitempty"`
}

type ScimUserName struct {
	FamilyName string `json:"familyName,omitempty"`
	GivenName  string `json:"givenName,omitempty"`
}

type ShortBlob struct {
	Sha string `json:"sha,omitempty"`
	Url string `json:"url,omitempty"`
}

type ShortBranchWithProtection struct {
	Commit struct {
		ShortBranchWithProtectionCommit
	} `json:"commit,omitempty"`
	Name       string `json:"name,omitempty"`
	Protected  bool   `json:"protected,omitempty"`
	Protection struct {
		ShortBranchWithProtectionProtection
	} `json:"protection,omitempty"`
	ProtectionUrl string `json:"protection_url,omitempty"`
}

type ShortBranchWithProtectionCommit struct {
	Sha string `json:"sha,omitempty"`
	Url string `json:"url,omitempty"`
}

type ShortBranchWithProtectionProtection struct {
	Enabled              bool `json:"enabled,omitempty"`
	RequiredStatusChecks struct {
		ShortBranchWithProtectionProtectionRequiredStatusChecks
	} `json:"required_status_checks,omitempty"`
}

type ShortBranchWithProtectionProtectionRequiredStatusChecks struct {
	Contexts         []string `json:"contexts,omitempty"`
	EnforcementLevel string   `json:"enforcement_level,omitempty"`
}

type SimpleCommit struct {
	Author struct {
		SimpleCommitAuthor
	} `json:"author,omitempty"`
	CommentsUrl string `json:"comments_url,omitempty"`
	Commit      struct {
		SimpleCommitCommit
	} `json:"commit,omitempty"`
	Committer struct {
		SimpleCommitCommitter
	} `json:"committer,omitempty"`
	HtmlUrl string `json:"html_url,omitempty"`
	NodeId  string `json:"node_id,omitempty"`
	Parents []struct {
		SimpleCommitParent
	} `json:"parents,omitempty"`
	Sha string `json:"sha,omitempty"`
	Url string `json:"url,omitempty"`
}

type SimpleCommit2 struct {
	Author struct {
		SimpleCommit2Author
	} `json:"author,omitempty"`
	CommentsUrl string `json:"comments_url,omitempty"`
	Commit      struct {
		SimpleCommit2Commit
	} `json:"commit,omitempty"`
	Committer struct {
		SimpleCommit2Committer
	} `json:"committer,omitempty"`
	HtmlUrl string `json:"html_url,omitempty"`
	NodeId  string `json:"node_id,omitempty"`
	Parents []struct {
		SimpleCommit2Parent
	} `json:"parents,omitempty"`
	Sha string `json:"sha,omitempty"`
	Url string `json:"url,omitempty"`
}

type SimpleCommit2Author struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type SimpleCommit2Commit struct {
	Author struct {
		SimpleCommit2CommitAuthor
	} `json:"author,omitempty"`
	CommentCount int64 `json:"comment_count,omitempty"`
	Committer    struct {
		SimpleCommit2CommitCommitter
	} `json:"committer,omitempty"`
	Message string `json:"message,omitempty"`
	Tree    struct {
		SimpleCommit2CommitTree
	} `json:"tree,omitempty"`
	Url          string `json:"url,omitempty"`
	Verification struct {
		SimpleCommit2CommitVerification
	} `json:"verification,omitempty"`
}

type SimpleCommit2CommitAuthor struct {
	Date  string `json:"date,omitempty"`
	Email string `json:"email,omitempty"`
	Name  string `json:"name,omitempty"`
}

type SimpleCommit2CommitCommitter struct {
	Date  string `json:"date,omitempty"`
	Email string `json:"email,omitempty"`
	Name  string `json:"name,omitempty"`
}

type SimpleCommit2CommitTree struct {
	Sha string `json:"sha,omitempty"`
	Url string `json:"url,omitempty"`
}

type SimpleCommit2CommitVerification struct {
	Payload   string `json:"payload,omitempty"`
	Reason    string `json:"reason,omitempty"`
	Signature string `json:"signature,omitempty"`
	Verified  bool   `json:"verified,omitempty"`
}

type SimpleCommit2Committer struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type SimpleCommit2Parent struct {
	Sha string `json:"sha"`
	Url string `json:"url"`
}

type SimpleCommitAuthor struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type SimpleCommitCommit struct {
	Author struct {
		SimpleCommitCommitAuthor
	} `json:"author,omitempty"`
	CommentCount int64 `json:"comment_count,omitempty"`
	Committer    struct {
		SimpleCommitCommitCommitter
	} `json:"committer,omitempty"`
	Message string `json:"message,omitempty"`
	Tree    struct {
		SimpleCommitCommitTree
	} `json:"tree,omitempty"`
	Url          string `json:"url,omitempty"`
	Verification struct {
		SimpleCommitCommitVerification
	} `json:"verification,omitempty"`
}

type SimpleCommitCommitAuthor struct {
	Date  string `json:"date,omitempty"`
	Email string `json:"email,omitempty"`
	Name  string `json:"name,omitempty"`
}

type SimpleCommitCommitCommitter struct {
	Date  string `json:"date,omitempty"`
	Email string `json:"email,omitempty"`
	Name  string `json:"name,omitempty"`
}

type SimpleCommitCommitTree struct {
	Sha string `json:"sha,omitempty"`
	Url string `json:"url,omitempty"`
}

type SimpleCommitCommitVerification struct {
	Payload   string `json:"payload,omitempty"`
	Reason    string `json:"reason,omitempty"`
	Signature string `json:"signature,omitempty"`
	Verified  bool   `json:"verified,omitempty"`
}

type SimpleCommitCommitter struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type SimpleCommitParent struct {
	Sha string `json:"sha,omitempty"`
	Url string `json:"url,omitempty"`
}

type SimplePullRequestReviewRequest struct {
	Teams []struct {
		SimplePullRequestReviewRequestTeam
	} `json:"teams,omitempty"`
	Users []struct {
		SimplePullRequestReviewRequestUser
	} `json:"users,omitempty"`
}

type SimplePullRequestReviewRequestTeam struct {
	Description     string      `json:"description,omitempty"`
	HtmlUrl         string      `json:"html_url,omitempty"`
	Id              int64       `json:"id,omitempty"`
	MembersUrl      string      `json:"members_url,omitempty"`
	Name            string      `json:"name,omitempty"`
	NodeId          string      `json:"node_id,omitempty"`
	Parent          interface{} `json:"parent,omitempty"`
	Permission      string      `json:"permission,omitempty"`
	Privacy         string      `json:"privacy,omitempty"`
	RepositoriesUrl string      `json:"repositories_url,omitempty"`
	Slug            string      `json:"slug,omitempty"`
	Url             string      `json:"url,omitempty"`
}

type SimplePullRequestReviewRequestUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type SimpleUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type Stargazer struct {
	StarredAt string `json:"starred_at,omitempty"`
	User      struct {
		StargazerUser
	} `json:"user,omitempty"`
}

type StargazerUser struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type StarredRepository struct {
	Repo struct {
		StarredRepositoryRepo
	} `json:"repo,omitempty"`
	StarredAt string `json:"starred_at,omitempty"`
}

type StarredRepositoryRepo struct {
	AllowMergeCommit    bool   `json:"allow_merge_commit,omitempty"`
	AllowRebaseMerge    bool   `json:"allow_rebase_merge,omitempty"`
	AllowSquashMerge    bool   `json:"allow_squash_merge,omitempty"`
	ArchiveUrl          string `json:"archive_url,omitempty"`
	Archived            bool   `json:"archived,omitempty"`
	AssigneesUrl        string `json:"assignees_url,omitempty"`
	BlobsUrl            string `json:"blobs_url,omitempty"`
	BranchesUrl         string `json:"branches_url,omitempty"`
	CloneUrl            string `json:"clone_url,omitempty"`
	CollaboratorsUrl    string `json:"collaborators_url,omitempty"`
	CommentsUrl         string `json:"comments_url,omitempty"`
	CommitsUrl          string `json:"commits_url,omitempty"`
	CompareUrl          string `json:"compare_url,omitempty"`
	ContentsUrl         string `json:"contents_url,omitempty"`
	ContributorsUrl     string `json:"contributors_url,omitempty"`
	CreatedAt           string `json:"created_at,omitempty"`
	DefaultBranch       string `json:"default_branch,omitempty"`
	DeleteBranchOnMerge bool   `json:"delete_branch_on_merge,omitempty"`
	DeploymentsUrl      string `json:"deployments_url,omitempty"`
	Description         string `json:"description,omitempty"`
	Disabled            bool   `json:"disabled,omitempty"`
	DownloadsUrl        string `json:"downloads_url,omitempty"`
	EventsUrl           string `json:"events_url,omitempty"`
	Fork                bool   `json:"fork,omitempty"`
	ForksCount          int64  `json:"forks_count,omitempty"`
	ForksUrl            string `json:"forks_url,omitempty"`
	FullName            string `json:"full_name,omitempty"`
	GitCommitsUrl       string `json:"git_commits_url,omitempty"`
	GitRefsUrl          string `json:"git_refs_url,omitempty"`
	GitTagsUrl          string `json:"git_tags_url,omitempty"`
	GitUrl              string `json:"git_url,omitempty"`
	HasDownloads        bool   `json:"has_downloads,omitempty"`
	HasIssues           bool   `json:"has_issues,omitempty"`
	HasPages            bool   `json:"has_pages,omitempty"`
	HasProjects         bool   `json:"has_projects,omitempty"`
	HasWiki             bool   `json:"has_wiki,omitempty"`
	Homepage            string `json:"homepage,omitempty"`
	HooksUrl            string `json:"hooks_url,omitempty"`
	HtmlUrl             string `json:"html_url,omitempty"`
	Id                  int64  `json:"id,omitempty"`
	IsTemplate          bool   `json:"is_template,omitempty"`
	IssueCommentUrl     string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl      string `json:"issue_events_url,omitempty"`
	IssuesUrl           string `json:"issues_url,omitempty"`
	KeysUrl             string `json:"keys_url,omitempty"`
	LabelsUrl           string `json:"labels_url,omitempty"`
	Language            string `json:"language,omitempty"`
	LanguagesUrl        string `json:"languages_url,omitempty"`
	MergesUrl           string `json:"merges_url,omitempty"`
	MilestonesUrl       string `json:"milestones_url,omitempty"`
	MirrorUrl           string `json:"mirror_url,omitempty"`
	Name                string `json:"name,omitempty"`
	NetworkCount        int64  `json:"network_count,omitempty"`
	NodeId              string `json:"node_id,omitempty"`
	NotificationsUrl    string `json:"notifications_url,omitempty"`
	OpenIssuesCount     int64  `json:"open_issues_count,omitempty"`
	Owner               struct {
		StarredRepositoryRepoOwner
	} `json:"owner,omitempty"`
	Permissions struct {
		StarredRepositoryRepoPermissions
	} `json:"permissions,omitempty"`
	Private            bool        `json:"private,omitempty"`
	PullsUrl           string      `json:"pulls_url,omitempty"`
	PushedAt           string      `json:"pushed_at,omitempty"`
	ReleasesUrl        string      `json:"releases_url,omitempty"`
	Size               json.Number `json:"size,omitempty"`
	SshUrl             string      `json:"ssh_url,omitempty"`
	StargazersCount    int64       `json:"stargazers_count,omitempty"`
	StargazersUrl      string      `json:"stargazers_url,omitempty"`
	StatusesUrl        string      `json:"statuses_url,omitempty"`
	SubscribersCount   int64       `json:"subscribers_count,omitempty"`
	SubscribersUrl     string      `json:"subscribers_url,omitempty"`
	SubscriptionUrl    string      `json:"subscription_url,omitempty"`
	SvnUrl             string      `json:"svn_url,omitempty"`
	TagsUrl            string      `json:"tags_url,omitempty"`
	TeamsUrl           string      `json:"teams_url,omitempty"`
	TempCloneToken     string      `json:"temp_clone_token,omitempty"`
	TemplateRepository interface{} `json:"template_repository,omitempty"`
	Topics             []string    `json:"topics,omitempty"`
	TreesUrl           string      `json:"trees_url,omitempty"`
	UpdatedAt          string      `json:"updated_at,omitempty"`
	Url                string      `json:"url,omitempty"`
	Visibility         string      `json:"visibility,omitempty"`
	WatchersCount      int64       `json:"watchers_count,omitempty"`
}

type StarredRepositoryRepoOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type StarredRepositoryRepoPermissions struct {
	Admin bool `json:"admin,omitempty"`
	Pull  bool `json:"pull,omitempty"`
	Push  bool `json:"push,omitempty"`
}

type Status struct {
	AvatarUrl string `json:"avatar_url,omitempty"`
	Context   string `json:"context,omitempty"`
	CreatedAt string `json:"created_at,omitempty"`
	Creator   struct {
		StatusCreator
	} `json:"creator,omitempty"`
	Description string `json:"description,omitempty"`
	Id          int64  `json:"id,omitempty"`
	NodeId      string `json:"node_id,omitempty"`
	State       string `json:"state,omitempty"`
	TargetUrl   string `json:"target_url,omitempty"`
	UpdatedAt   string `json:"updated_at,omitempty"`
	Url         string `json:"url,omitempty"`
}

type StatusCheckPolicy struct {
	Contexts    []string `json:"contexts,omitempty"`
	ContextsUrl string   `json:"contexts_url,omitempty"`
	Strict      bool     `json:"strict,omitempty"`
	Url         string   `json:"url,omitempty"`
}

type StatusCreator struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type Tag struct {
	Commit struct {
		TagCommit
	} `json:"commit,omitempty"`
	Name       string `json:"name,omitempty"`
	TarballUrl string `json:"tarball_url,omitempty"`
	ZipballUrl string `json:"zipball_url,omitempty"`
}

type TagCommit struct {
	Sha string `json:"sha,omitempty"`
	Url string `json:"url,omitempty"`
}

type Team struct {
	Description     string      `json:"description,omitempty"`
	HtmlUrl         string      `json:"html_url,omitempty"`
	Id              int64       `json:"id,omitempty"`
	MembersUrl      string      `json:"members_url,omitempty"`
	Name            string      `json:"name,omitempty"`
	NodeId          string      `json:"node_id,omitempty"`
	Parent          interface{} `json:"parent,omitempty"`
	Permission      string      `json:"permission,omitempty"`
	Privacy         string      `json:"privacy,omitempty"`
	RepositoriesUrl string      `json:"repositories_url,omitempty"`
	Slug            string      `json:"slug,omitempty"`
	Url             string      `json:"url,omitempty"`
}

type Team2 struct {
	Description string `json:"description,omitempty"`
	Id          int64  `json:"id,omitempty"`
	MembersUrl  string `json:"members_url,omitempty"`
	Name        string `json:"name,omitempty"`
	NodeId      string `json:"node_id,omitempty"`
	Parent      struct {
		Team2Parent
	} `json:"parent,omitempty"`
	Permission      string `json:"permission,omitempty"`
	Privacy         string `json:"privacy,omitempty"`
	RepositoriesUrl string `json:"repositories_url,omitempty"`
	Slug            string `json:"slug,omitempty"`
	Url             string `json:"url,omitempty"`
}

type Team2Parent struct {
	Description     string `json:"description,omitempty"`
	HtmlUrl         string `json:"html_url,omitempty"`
	Id              int64  `json:"id,omitempty"`
	MembersUrl      string `json:"members_url,omitempty"`
	Name            string `json:"name,omitempty"`
	NodeId          string `json:"node_id,omitempty"`
	Permission      string `json:"permission,omitempty"`
	Privacy         string `json:"privacy,omitempty"`
	RepositoriesUrl string `json:"repositories_url,omitempty"`
	Slug            string `json:"slug,omitempty"`
	Url             string `json:"url,omitempty"`
}

type TeamDiscussion struct {
	Author struct {
		TeamDiscussionAuthor
	} `json:"author,omitempty"`
	Body          string `json:"body,omitempty"`
	BodyHtml      string `json:"body_html,omitempty"`
	BodyVersion   string `json:"body_version,omitempty"`
	CommentsCount int64  `json:"comments_count,omitempty"`
	CommentsUrl   string `json:"comments_url,omitempty"`
	CreatedAt     string `json:"created_at,omitempty"`
	HtmlUrl       string `json:"html_url,omitempty"`
	LastEditedAt  string `json:"last_edited_at,omitempty"`
	NodeId        string `json:"node_id,omitempty"`
	Number        int64  `json:"number,omitempty"`
	Pinned        bool   `json:"pinned,omitempty"`
	Private       bool   `json:"private,omitempty"`
	Reactions     struct {
		TeamDiscussionReactions
	} `json:"reactions,omitempty"`
	TeamUrl   string `json:"team_url,omitempty"`
	Title     string `json:"title,omitempty"`
	UpdatedAt string `json:"updated_at,omitempty"`
	Url       string `json:"url,omitempty"`
}

type TeamDiscussionAuthor struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type TeamDiscussionComment struct {
	Author struct {
		TeamDiscussionCommentAuthor
	} `json:"author,omitempty"`
	Body          string `json:"body,omitempty"`
	BodyHtml      string `json:"body_html,omitempty"`
	BodyVersion   string `json:"body_version,omitempty"`
	CreatedAt     string `json:"created_at,omitempty"`
	DiscussionUrl string `json:"discussion_url,omitempty"`
	HtmlUrl       string `json:"html_url,omitempty"`
	LastEditedAt  string `json:"last_edited_at,omitempty"`
	NodeId        string `json:"node_id,omitempty"`
	Number        int64  `json:"number,omitempty"`
	Reactions     struct {
		TeamDiscussionCommentReactions
	} `json:"reactions,omitempty"`
	UpdatedAt string `json:"updated_at,omitempty"`
	Url       string `json:"url,omitempty"`
}

type TeamDiscussionCommentAuthor struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type TeamDiscussionCommentReactions struct {
	PlusOne    json.Number `json:"+1,omitempty"`
	MinusOne   json.Number `json:"-1,omitempty"`
	Confused   json.Number `json:"confused,omitempty"`
	Heart      json.Number `json:"heart,omitempty"`
	Hooray     json.Number `json:"hooray,omitempty"`
	Laugh      json.Number `json:"laugh,omitempty"`
	TotalCount int64       `json:"total_count,omitempty"`
	Url        string      `json:"url,omitempty"`
}

type TeamDiscussionReactions struct {
	PlusOne    json.Number `json:"+1,omitempty"`
	MinusOne   json.Number `json:"-1,omitempty"`
	Confused   json.Number `json:"confused,omitempty"`
	Heart      json.Number `json:"heart,omitempty"`
	Hooray     json.Number `json:"hooray,omitempty"`
	Laugh      json.Number `json:"laugh,omitempty"`
	TotalCount int64       `json:"total_count,omitempty"`
	Url        string      `json:"url,omitempty"`
}

type TeamFull struct {
	CreatedAt    string `json:"created_at,omitempty"`
	Description  string `json:"description,omitempty"`
	HtmlUrl      string `json:"html_url,omitempty"`
	Id           int64  `json:"id,omitempty"`
	MembersCount int64  `json:"members_count,omitempty"`
	MembersUrl   string `json:"members_url,omitempty"`
	Name         string `json:"name,omitempty"`
	NodeId       string `json:"node_id,omitempty"`
	Organization struct {
		TeamFullOrganization
	} `json:"organization,omitempty"`
	Parent          interface{} `json:"parent,omitempty"`
	Permission      string      `json:"permission,omitempty"`
	Privacy         string      `json:"privacy,omitempty"`
	ReposCount      int64       `json:"repos_count,omitempty"`
	RepositoriesUrl string      `json:"repositories_url,omitempty"`
	Slug            string      `json:"slug,omitempty"`
	UpdatedAt       string      `json:"updated_at,omitempty"`
	Url             string      `json:"url,omitempty"`
}

type TeamFullOrganization struct {
	AvatarUrl               string `json:"avatar_url,omitempty"`
	Blog                    string `json:"blog,omitempty"`
	Company                 string `json:"company,omitempty"`
	CreatedAt               string `json:"created_at,omitempty"`
	Description             string `json:"description,omitempty"`
	Email                   string `json:"email,omitempty"`
	EventsUrl               string `json:"events_url,omitempty"`
	Followers               int64  `json:"followers,omitempty"`
	Following               int64  `json:"following,omitempty"`
	HasOrganizationProjects bool   `json:"has_organization_projects,omitempty"`
	HasRepositoryProjects   bool   `json:"has_repository_projects,omitempty"`
	HooksUrl                string `json:"hooks_url,omitempty"`
	HtmlUrl                 string `json:"html_url,omitempty"`
	Id                      int64  `json:"id,omitempty"`
	IsVerified              bool   `json:"is_verified,omitempty"`
	IssuesUrl               string `json:"issues_url,omitempty"`
	Location                string `json:"location,omitempty"`
	Login                   string `json:"login,omitempty"`
	MembersUrl              string `json:"members_url,omitempty"`
	Name                    string `json:"name,omitempty"`
	NodeId                  string `json:"node_id,omitempty"`
	PublicGists             int64  `json:"public_gists,omitempty"`
	PublicMembersUrl        string `json:"public_members_url,omitempty"`
	PublicRepos             int64  `json:"public_repos,omitempty"`
	ReposUrl                string `json:"repos_url,omitempty"`
	TwitterUsername         string `json:"twitter_username,omitempty"`
	Type                    string `json:"type,omitempty"`
	Url                     string `json:"url,omitempty"`
}

type TeamMembership struct {
	Role  string `json:"role,omitempty"`
	State string `json:"state,omitempty"`
	Url   string `json:"url,omitempty"`
}

type TeamProject struct {
	Body       string `json:"body,omitempty"`
	ColumnsUrl string `json:"columns_url,omitempty"`
	CreatedAt  string `json:"created_at,omitempty"`
	Creator    struct {
		TeamProjectCreator
	} `json:"creator,omitempty"`
	HtmlUrl                string `json:"html_url,omitempty"`
	Id                     int64  `json:"id,omitempty"`
	Name                   string `json:"name,omitempty"`
	NodeId                 string `json:"node_id,omitempty"`
	Number                 int64  `json:"number,omitempty"`
	OrganizationPermission string `json:"organization_permission,omitempty"`
	OwnerUrl               string `json:"owner_url,omitempty"`
	Permissions            struct {
		TeamProjectPermissions
	} `json:"permissions,omitempty"`
	Private   bool   `json:"private,omitempty"`
	State     string `json:"state,omitempty"`
	UpdatedAt string `json:"updated_at,omitempty"`
	Url       string `json:"url,omitempty"`
}

type TeamProjectCreator struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type TeamProjectPermissions struct {
	Admin bool `json:"admin,omitempty"`
	Read  bool `json:"read,omitempty"`
	Write bool `json:"write,omitempty"`
}

type TeamRepository struct {
	Organization struct {
		TeamRepositoryOrganization
	} `json:"organization,omitempty"`
	Parent struct {
		TeamRepositoryParent
	} `json:"parent,omitempty"`
	Permissions struct {
		TeamRepositoryPermissions
	} `json:"permissions,omitempty"`
	Source struct {
		TeamRepositorySource
	} `json:"source,omitempty"`
}

type TeamRepositoryOrganization struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type TeamRepositoryParent struct {
	AllowMergeCommit    bool   `json:"allow_merge_commit,omitempty"`
	AllowRebaseMerge    bool   `json:"allow_rebase_merge,omitempty"`
	AllowSquashMerge    bool   `json:"allow_squash_merge,omitempty"`
	ArchiveUrl          string `json:"archive_url,omitempty"`
	Archived            bool   `json:"archived,omitempty"`
	AssigneesUrl        string `json:"assignees_url,omitempty"`
	BlobsUrl            string `json:"blobs_url,omitempty"`
	BranchesUrl         string `json:"branches_url,omitempty"`
	CloneUrl            string `json:"clone_url,omitempty"`
	CollaboratorsUrl    string `json:"collaborators_url,omitempty"`
	CommentsUrl         string `json:"comments_url,omitempty"`
	CommitsUrl          string `json:"commits_url,omitempty"`
	CompareUrl          string `json:"compare_url,omitempty"`
	ContentsUrl         string `json:"contents_url,omitempty"`
	ContributorsUrl     string `json:"contributors_url,omitempty"`
	CreatedAt           string `json:"created_at,omitempty"`
	DefaultBranch       string `json:"default_branch,omitempty"`
	DeleteBranchOnMerge bool   `json:"delete_branch_on_merge,omitempty"`
	DeploymentsUrl      string `json:"deployments_url,omitempty"`
	Description         string `json:"description,omitempty"`
	Disabled            bool   `json:"disabled,omitempty"`
	DownloadsUrl        string `json:"downloads_url,omitempty"`
	EventsUrl           string `json:"events_url,omitempty"`
	Fork                bool   `json:"fork,omitempty"`
	ForksCount          int64  `json:"forks_count,omitempty"`
	ForksUrl            string `json:"forks_url,omitempty"`
	FullName            string `json:"full_name,omitempty"`
	GitCommitsUrl       string `json:"git_commits_url,omitempty"`
	GitRefsUrl          string `json:"git_refs_url,omitempty"`
	GitTagsUrl          string `json:"git_tags_url,omitempty"`
	GitUrl              string `json:"git_url,omitempty"`
	HasDownloads        bool   `json:"has_downloads,omitempty"`
	HasIssues           bool   `json:"has_issues,omitempty"`
	HasPages            bool   `json:"has_pages,omitempty"`
	HasProjects         bool   `json:"has_projects,omitempty"`
	HasWiki             bool   `json:"has_wiki,omitempty"`
	Homepage            string `json:"homepage,omitempty"`
	HooksUrl            string `json:"hooks_url,omitempty"`
	HtmlUrl             string `json:"html_url,omitempty"`
	Id                  int64  `json:"id,omitempty"`
	IsTemplate          bool   `json:"is_template,omitempty"`
	IssueCommentUrl     string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl      string `json:"issue_events_url,omitempty"`
	IssuesUrl           string `json:"issues_url,omitempty"`
	KeysUrl             string `json:"keys_url,omitempty"`
	LabelsUrl           string `json:"labels_url,omitempty"`
	Language            string `json:"language,omitempty"`
	LanguagesUrl        string `json:"languages_url,omitempty"`
	MergesUrl           string `json:"merges_url,omitempty"`
	MilestonesUrl       string `json:"milestones_url,omitempty"`
	MirrorUrl           string `json:"mirror_url,omitempty"`
	Name                string `json:"name,omitempty"`
	NetworkCount        int64  `json:"network_count,omitempty"`
	NodeId              string `json:"node_id,omitempty"`
	NotificationsUrl    string `json:"notifications_url,omitempty"`
	OpenIssuesCount     int64  `json:"open_issues_count,omitempty"`
	Owner               struct {
		TeamRepositoryParentOwner
	} `json:"owner,omitempty"`
	Permissions struct {
		TeamRepositoryParentPermissions
	} `json:"permissions,omitempty"`
	Private            bool        `json:"private,omitempty"`
	PullsUrl           string      `json:"pulls_url,omitempty"`
	PushedAt           string      `json:"pushed_at,omitempty"`
	ReleasesUrl        string      `json:"releases_url,omitempty"`
	Size               json.Number `json:"size,omitempty"`
	SshUrl             string      `json:"ssh_url,omitempty"`
	StargazersCount    int64       `json:"stargazers_count,omitempty"`
	StargazersUrl      string      `json:"stargazers_url,omitempty"`
	StatusesUrl        string      `json:"statuses_url,omitempty"`
	SubscribersCount   int64       `json:"subscribers_count,omitempty"`
	SubscribersUrl     string      `json:"subscribers_url,omitempty"`
	SubscriptionUrl    string      `json:"subscription_url,omitempty"`
	SvnUrl             string      `json:"svn_url,omitempty"`
	TagsUrl            string      `json:"tags_url,omitempty"`
	TeamsUrl           string      `json:"teams_url,omitempty"`
	TempCloneToken     string      `json:"temp_clone_token,omitempty"`
	TemplateRepository interface{} `json:"template_repository,omitempty"`
	Topics             []string    `json:"topics,omitempty"`
	TreesUrl           string      `json:"trees_url,omitempty"`
	UpdatedAt          string      `json:"updated_at,omitempty"`
	Url                string      `json:"url,omitempty"`
	Visibility         string      `json:"visibility,omitempty"`
	WatchersCount      int64       `json:"watchers_count,omitempty"`
}

type TeamRepositoryParentOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type TeamRepositoryParentPermissions struct {
	Admin bool `json:"admin,omitempty"`
	Pull  bool `json:"pull,omitempty"`
	Push  bool `json:"push,omitempty"`
}

type TeamRepositoryPermissions struct {
	Admin    bool `json:"admin,omitempty"`
	Maintain bool `json:"maintain,omitempty"`
	Pull     bool `json:"pull,omitempty"`
	Push     bool `json:"push,omitempty"`
	Triage   bool `json:"triage,omitempty"`
}

type TeamRepositorySource struct {
	AllowMergeCommit    bool   `json:"allow_merge_commit,omitempty"`
	AllowRebaseMerge    bool   `json:"allow_rebase_merge,omitempty"`
	AllowSquashMerge    bool   `json:"allow_squash_merge,omitempty"`
	ArchiveUrl          string `json:"archive_url,omitempty"`
	Archived            bool   `json:"archived,omitempty"`
	AssigneesUrl        string `json:"assignees_url,omitempty"`
	BlobsUrl            string `json:"blobs_url,omitempty"`
	BranchesUrl         string `json:"branches_url,omitempty"`
	CloneUrl            string `json:"clone_url,omitempty"`
	CollaboratorsUrl    string `json:"collaborators_url,omitempty"`
	CommentsUrl         string `json:"comments_url,omitempty"`
	CommitsUrl          string `json:"commits_url,omitempty"`
	CompareUrl          string `json:"compare_url,omitempty"`
	ContentsUrl         string `json:"contents_url,omitempty"`
	ContributorsUrl     string `json:"contributors_url,omitempty"`
	CreatedAt           string `json:"created_at,omitempty"`
	DefaultBranch       string `json:"default_branch,omitempty"`
	DeleteBranchOnMerge bool   `json:"delete_branch_on_merge,omitempty"`
	DeploymentsUrl      string `json:"deployments_url,omitempty"`
	Description         string `json:"description,omitempty"`
	Disabled            bool   `json:"disabled,omitempty"`
	DownloadsUrl        string `json:"downloads_url,omitempty"`
	EventsUrl           string `json:"events_url,omitempty"`
	Fork                bool   `json:"fork,omitempty"`
	ForksCount          int64  `json:"forks_count,omitempty"`
	ForksUrl            string `json:"forks_url,omitempty"`
	FullName            string `json:"full_name,omitempty"`
	GitCommitsUrl       string `json:"git_commits_url,omitempty"`
	GitRefsUrl          string `json:"git_refs_url,omitempty"`
	GitTagsUrl          string `json:"git_tags_url,omitempty"`
	GitUrl              string `json:"git_url,omitempty"`
	HasDownloads        bool   `json:"has_downloads,omitempty"`
	HasIssues           bool   `json:"has_issues,omitempty"`
	HasPages            bool   `json:"has_pages,omitempty"`
	HasProjects         bool   `json:"has_projects,omitempty"`
	HasWiki             bool   `json:"has_wiki,omitempty"`
	Homepage            string `json:"homepage,omitempty"`
	HooksUrl            string `json:"hooks_url,omitempty"`
	HtmlUrl             string `json:"html_url,omitempty"`
	Id                  int64  `json:"id,omitempty"`
	IsTemplate          bool   `json:"is_template,omitempty"`
	IssueCommentUrl     string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl      string `json:"issue_events_url,omitempty"`
	IssuesUrl           string `json:"issues_url,omitempty"`
	KeysUrl             string `json:"keys_url,omitempty"`
	LabelsUrl           string `json:"labels_url,omitempty"`
	Language            string `json:"language,omitempty"`
	LanguagesUrl        string `json:"languages_url,omitempty"`
	MergesUrl           string `json:"merges_url,omitempty"`
	MilestonesUrl       string `json:"milestones_url,omitempty"`
	MirrorUrl           string `json:"mirror_url,omitempty"`
	Name                string `json:"name,omitempty"`
	NetworkCount        int64  `json:"network_count,omitempty"`
	NodeId              string `json:"node_id,omitempty"`
	NotificationsUrl    string `json:"notifications_url,omitempty"`
	OpenIssuesCount     int64  `json:"open_issues_count,omitempty"`
	Owner               struct {
		TeamRepositorySourceOwner
	} `json:"owner,omitempty"`
	Permissions struct {
		TeamRepositorySourcePermissions
	} `json:"permissions,omitempty"`
	Private            bool        `json:"private,omitempty"`
	PullsUrl           string      `json:"pulls_url,omitempty"`
	PushedAt           string      `json:"pushed_at,omitempty"`
	ReleasesUrl        string      `json:"releases_url,omitempty"`
	Size               json.Number `json:"size,omitempty"`
	SshUrl             string      `json:"ssh_url,omitempty"`
	StargazersCount    int64       `json:"stargazers_count,omitempty"`
	StargazersUrl      string      `json:"stargazers_url,omitempty"`
	StatusesUrl        string      `json:"statuses_url,omitempty"`
	SubscribersCount   int64       `json:"subscribers_count,omitempty"`
	SubscribersUrl     string      `json:"subscribers_url,omitempty"`
	SubscriptionUrl    string      `json:"subscription_url,omitempty"`
	SvnUrl             string      `json:"svn_url,omitempty"`
	TagsUrl            string      `json:"tags_url,omitempty"`
	TeamsUrl           string      `json:"teams_url,omitempty"`
	TempCloneToken     string      `json:"temp_clone_token,omitempty"`
	TemplateRepository interface{} `json:"template_repository,omitempty"`
	Topics             []string    `json:"topics,omitempty"`
	TreesUrl           string      `json:"trees_url,omitempty"`
	UpdatedAt          string      `json:"updated_at,omitempty"`
	Url                string      `json:"url,omitempty"`
	Visibility         string      `json:"visibility,omitempty"`
	WatchersCount      int64       `json:"watchers_count,omitempty"`
}

type TeamRepositorySourceOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type TeamRepositorySourcePermissions struct {
	Admin bool `json:"admin,omitempty"`
	Pull  bool `json:"pull,omitempty"`
	Push  bool `json:"push,omitempty"`
}

type Thread struct {
	Id         string `json:"id,omitempty"`
	LastReadAt string `json:"last_read_at,omitempty"`
	Reason     string `json:"reason,omitempty"`
	Repository struct {
		ThreadRepository
	} `json:"repository,omitempty"`
	Subject struct {
		ThreadSubject
	} `json:"subject,omitempty"`
	Unread    bool   `json:"unread,omitempty"`
	UpdatedAt string `json:"updated_at,omitempty"`
	Url       string `json:"url,omitempty"`
}

type ThreadRepository struct {
	ArchiveUrl       string `json:"archive_url,omitempty"`
	AssigneesUrl     string `json:"assignees_url,omitempty"`
	BlobsUrl         string `json:"blobs_url,omitempty"`
	BranchesUrl      string `json:"branches_url,omitempty"`
	CollaboratorsUrl string `json:"collaborators_url,omitempty"`
	CommentsUrl      string `json:"comments_url,omitempty"`
	CommitsUrl       string `json:"commits_url,omitempty"`
	CompareUrl       string `json:"compare_url,omitempty"`
	ContentsUrl      string `json:"contents_url,omitempty"`
	ContributorsUrl  string `json:"contributors_url,omitempty"`
	DeploymentsUrl   string `json:"deployments_url,omitempty"`
	Description      string `json:"description,omitempty"`
	DownloadsUrl     string `json:"downloads_url,omitempty"`
	EventsUrl        string `json:"events_url,omitempty"`
	Fork             bool   `json:"fork,omitempty"`
	ForksUrl         string `json:"forks_url,omitempty"`
	FullName         string `json:"full_name,omitempty"`
	GitCommitsUrl    string `json:"git_commits_url,omitempty"`
	GitRefsUrl       string `json:"git_refs_url,omitempty"`
	GitTagsUrl       string `json:"git_tags_url,omitempty"`
	GitUrl           string `json:"git_url,omitempty"`
	HtmlUrl          string `json:"html_url,omitempty"`
	Id               int64  `json:"id,omitempty"`
	IssueCommentUrl  string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl   string `json:"issue_events_url,omitempty"`
	IssuesUrl        string `json:"issues_url,omitempty"`
	KeysUrl          string `json:"keys_url,omitempty"`
	LabelsUrl        string `json:"labels_url,omitempty"`
	LanguagesUrl     string `json:"languages_url,omitempty"`
	MergesUrl        string `json:"merges_url,omitempty"`
	MilestonesUrl    string `json:"milestones_url,omitempty"`
	Name             string `json:"name,omitempty"`
	NodeId           string `json:"node_id,omitempty"`
	NotificationsUrl string `json:"notifications_url,omitempty"`
	Owner            struct {
		ThreadRepositoryOwner
	} `json:"owner,omitempty"`
	Private         bool   `json:"private,omitempty"`
	PullsUrl        string `json:"pulls_url,omitempty"`
	ReleasesUrl     string `json:"releases_url,omitempty"`
	SshUrl          string `json:"ssh_url,omitempty"`
	StargazersUrl   string `json:"stargazers_url,omitempty"`
	StatusesUrl     string `json:"statuses_url,omitempty"`
	SubscribersUrl  string `json:"subscribers_url,omitempty"`
	SubscriptionUrl string `json:"subscription_url,omitempty"`
	TagsUrl         string `json:"tags_url,omitempty"`
	TeamsUrl        string `json:"teams_url,omitempty"`
	TreesUrl        string `json:"trees_url,omitempty"`
	Url             string `json:"url,omitempty"`
}

type ThreadRepositoryOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type ThreadSubject struct {
	LatestCommentUrl string `json:"latest_comment_url,omitempty"`
	Title            string `json:"title,omitempty"`
	Type             string `json:"type,omitempty"`
	Url              string `json:"url,omitempty"`
}

type ThreadSubscription struct {
	CreatedAt  string `json:"created_at,omitempty"`
	Ignored    bool   `json:"ignored,omitempty"`
	Reason     string `json:"reason,omitempty"`
	Subscribed bool   `json:"subscribed,omitempty"`
	ThreadUrl  string `json:"thread_url,omitempty"`
	Url        string `json:"url,omitempty"`
}

type Topic struct {
	Names []string `json:"names,omitempty"`
}

type TopicSearchResultItem struct {
	CreatedAt        string      `json:"created_at"`
	CreatedBy        string      `json:"created_by"`
	Curated          bool        `json:"curated"`
	Description      string      `json:"description"`
	DisplayName      string      `json:"display_name"`
	Featured         bool        `json:"featured"`
	Name             string      `json:"name"`
	Released         string      `json:"released"`
	Score            json.Number `json:"score"`
	ShortDescription string      `json:"short_description"`
	UpdatedAt        string      `json:"updated_at"`
}

type UserMarketplacePurchase struct {
	Account struct {
		UserMarketplacePurchaseAccount
	} `json:"account,omitempty"`
	BillingCycle    string `json:"billing_cycle,omitempty"`
	FreeTrialEndsOn string `json:"free_trial_ends_on,omitempty"`
	NextBillingDate string `json:"next_billing_date,omitempty"`
	OnFreeTrial     bool   `json:"on_free_trial,omitempty"`
	Plan            struct {
		UserMarketplacePurchasePlan
	} `json:"plan,omitempty"`
	UnitCount int64  `json:"unit_count,omitempty"`
	UpdatedAt string `json:"updated_at,omitempty"`
}

type UserMarketplacePurchaseAccount struct {
	Email                    string `json:"email,omitempty"`
	Id                       int64  `json:"id,omitempty"`
	Login                    string `json:"login,omitempty"`
	OrganizationBillingEmail string `json:"organization_billing_email,omitempty"`
	Type                     string `json:"type,omitempty"`
	Url                      string `json:"url,omitempty"`
}

type UserMarketplacePurchasePlan struct {
	AccountsUrl         string   `json:"accounts_url,omitempty"`
	Bullets             []string `json:"bullets,omitempty"`
	Description         string   `json:"description,omitempty"`
	HasFreeTrial        bool     `json:"has_free_trial,omitempty"`
	Id                  int64    `json:"id,omitempty"`
	MonthlyPriceInCents int64    `json:"monthly_price_in_cents,omitempty"`
	Name                string   `json:"name,omitempty"`
	Number              int64    `json:"number,omitempty"`
	PriceModel          string   `json:"price_model,omitempty"`
	State               string   `json:"state,omitempty"`
	UnitName            string   `json:"unit_name,omitempty"`
	Url                 string   `json:"url,omitempty"`
	YearlyPriceInCents  int64    `json:"yearly_price_in_cents,omitempty"`
}

type UserSearchResultItem struct {
	AvatarUrl         string      `json:"avatar_url,omitempty"`
	FollowersUrl      string      `json:"followers_url,omitempty"`
	GravatarId        string      `json:"gravatar_id,omitempty"`
	HtmlUrl           string      `json:"html_url,omitempty"`
	Id                int64       `json:"id,omitempty"`
	Login             string      `json:"login,omitempty"`
	NodeId            string      `json:"node_id,omitempty"`
	OrganizationsUrl  string      `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string      `json:"received_events_url,omitempty"`
	ReposUrl          string      `json:"repos_url,omitempty"`
	Score             json.Number `json:"score,omitempty"`
	SubscriptionsUrl  string      `json:"subscriptions_url,omitempty"`
	Type              string      `json:"type,omitempty"`
	Url               string      `json:"url,omitempty"`
}

type ViewTraffic struct {
	Count   int64 `json:"count,omitempty"`
	Uniques int64 `json:"uniques,omitempty"`
	Views   []struct {
		ViewTrafficView
	} `json:"views,omitempty"`
}

type ViewTrafficView struct {
	Count     int64  `json:"count"`
	Timestamp string `json:"timestamp"`
	Uniques   int64  `json:"uniques"`
}

type Workflow struct {
	BadgeUrl  string `json:"badge_url,omitempty"`
	CreatedAt string `json:"created_at,omitempty"`
	HtmlUrl   string `json:"html_url,omitempty"`
	Id        int64  `json:"id,omitempty"`
	Name      string `json:"name,omitempty"`
	NodeId    string `json:"node_id,omitempty"`
	Path      string `json:"path,omitempty"`
	State     string `json:"state,omitempty"`
	UpdatedAt string `json:"updated_at,omitempty"`
	Url       string `json:"url,omitempty"`
}

type Workflow2 struct {
	BadgeUrl  string `json:"badge_url"`
	CreatedAt string `json:"created_at"`
	HtmlUrl   string `json:"html_url"`
	Id        int64  `json:"id"`
	Name      string `json:"name"`
	NodeId    string `json:"node_id"`
	Path      string `json:"path"`
	State     string `json:"state"`
	UpdatedAt string `json:"updated_at"`
	Url       string `json:"url"`
}

type WorkflowRun struct {
	ArtifactsUrl  string `json:"artifacts_url,omitempty"`
	CancelUrl     string `json:"cancel_url,omitempty"`
	CheckSuiteUrl string `json:"check_suite_url,omitempty"`
	Conclusion    string `json:"conclusion,omitempty"`
	CreatedAt     string `json:"created_at,omitempty"`
	Event         string `json:"event,omitempty"`
	HeadBranch    string `json:"head_branch,omitempty"`
	HeadCommit    struct {
		WorkflowRunHeadCommit
	} `json:"head_commit,omitempty"`
	HeadRepository struct {
		WorkflowRunHeadRepository
	} `json:"head_repository,omitempty"`
	HeadSha      string        `json:"head_sha,omitempty"`
	HtmlUrl      string        `json:"html_url,omitempty"`
	Id           int64         `json:"id,omitempty"`
	JobsUrl      string        `json:"jobs_url,omitempty"`
	LogsUrl      string        `json:"logs_url,omitempty"`
	NodeId       string        `json:"node_id,omitempty"`
	PullRequests []interface{} `json:"pull_requests,omitempty"`
	Repository   struct {
		WorkflowRunRepository
	} `json:"repository,omitempty"`
	RerunUrl    string `json:"rerun_url,omitempty"`
	RunNumber   int64  `json:"run_number,omitempty"`
	Status      string `json:"status,omitempty"`
	UpdatedAt   string `json:"updated_at,omitempty"`
	Url         string `json:"url,omitempty"`
	WorkflowId  int64  `json:"workflow_id,omitempty"`
	WorkflowUrl string `json:"workflow_url,omitempty"`
}

type WorkflowRunHeadCommit struct {
	Author struct {
		WorkflowRunHeadCommitAuthor
	} `json:"author,omitempty"`
	Committer struct {
		WorkflowRunHeadCommitCommitter
	} `json:"committer,omitempty"`
	Id        string `json:"id,omitempty"`
	Message   string `json:"message,omitempty"`
	Timestamp string `json:"timestamp,omitempty"`
	TreeId    string `json:"tree_id,omitempty"`
}

type WorkflowRunHeadCommitAuthor struct {
	Email string `json:"email,omitempty"`
	Name  string `json:"name,omitempty"`
}

type WorkflowRunHeadCommitCommitter struct {
	Email string `json:"email,omitempty"`
	Name  string `json:"name,omitempty"`
}

type WorkflowRunHeadRepository struct {
	ArchiveUrl       string `json:"archive_url,omitempty"`
	AssigneesUrl     string `json:"assignees_url,omitempty"`
	BlobsUrl         string `json:"blobs_url,omitempty"`
	BranchesUrl      string `json:"branches_url,omitempty"`
	CollaboratorsUrl string `json:"collaborators_url,omitempty"`
	CommentsUrl      string `json:"comments_url,omitempty"`
	CommitsUrl       string `json:"commits_url,omitempty"`
	CompareUrl       string `json:"compare_url,omitempty"`
	ContentsUrl      string `json:"contents_url,omitempty"`
	ContributorsUrl  string `json:"contributors_url,omitempty"`
	DeploymentsUrl   string `json:"deployments_url,omitempty"`
	Description      string `json:"description,omitempty"`
	DownloadsUrl     string `json:"downloads_url,omitempty"`
	EventsUrl        string `json:"events_url,omitempty"`
	Fork             bool   `json:"fork,omitempty"`
	ForksUrl         string `json:"forks_url,omitempty"`
	FullName         string `json:"full_name,omitempty"`
	GitCommitsUrl    string `json:"git_commits_url,omitempty"`
	GitRefsUrl       string `json:"git_refs_url,omitempty"`
	GitTagsUrl       string `json:"git_tags_url,omitempty"`
	HooksUrl         string `json:"hooks_url,omitempty"`
	HtmlUrl          string `json:"html_url,omitempty"`
	Id               int64  `json:"id,omitempty"`
	IssueCommentUrl  string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl   string `json:"issue_events_url,omitempty"`
	IssuesUrl        string `json:"issues_url,omitempty"`
	KeysUrl          string `json:"keys_url,omitempty"`
	LabelsUrl        string `json:"labels_url,omitempty"`
	LanguagesUrl     string `json:"languages_url,omitempty"`
	MergesUrl        string `json:"merges_url,omitempty"`
	MilestonesUrl    string `json:"milestones_url,omitempty"`
	Name             string `json:"name,omitempty"`
	NodeId           string `json:"node_id,omitempty"`
	NotificationsUrl string `json:"notifications_url,omitempty"`
	Owner            struct {
		WorkflowRunHeadRepositoryOwner
	} `json:"owner,omitempty"`
	Private         bool   `json:"private,omitempty"`
	PullsUrl        string `json:"pulls_url,omitempty"`
	ReleasesUrl     string `json:"releases_url,omitempty"`
	StargazersUrl   string `json:"stargazers_url,omitempty"`
	StatusesUrl     string `json:"statuses_url,omitempty"`
	SubscribersUrl  string `json:"subscribers_url,omitempty"`
	SubscriptionUrl string `json:"subscription_url,omitempty"`
	TagsUrl         string `json:"tags_url,omitempty"`
	TeamsUrl        string `json:"teams_url,omitempty"`
	TreesUrl        string `json:"trees_url,omitempty"`
	Url             string `json:"url,omitempty"`
}

type WorkflowRunHeadRepositoryOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type WorkflowRunRepository struct {
	ArchiveUrl       string `json:"archive_url,omitempty"`
	AssigneesUrl     string `json:"assignees_url,omitempty"`
	BlobsUrl         string `json:"blobs_url,omitempty"`
	BranchesUrl      string `json:"branches_url,omitempty"`
	CollaboratorsUrl string `json:"collaborators_url,omitempty"`
	CommentsUrl      string `json:"comments_url,omitempty"`
	CommitsUrl       string `json:"commits_url,omitempty"`
	CompareUrl       string `json:"compare_url,omitempty"`
	ContentsUrl      string `json:"contents_url,omitempty"`
	ContributorsUrl  string `json:"contributors_url,omitempty"`
	DeploymentsUrl   string `json:"deployments_url,omitempty"`
	Description      string `json:"description,omitempty"`
	DownloadsUrl     string `json:"downloads_url,omitempty"`
	EventsUrl        string `json:"events_url,omitempty"`
	Fork             bool   `json:"fork,omitempty"`
	ForksUrl         string `json:"forks_url,omitempty"`
	FullName         string `json:"full_name,omitempty"`
	GitCommitsUrl    string `json:"git_commits_url,omitempty"`
	GitRefsUrl       string `json:"git_refs_url,omitempty"`
	GitTagsUrl       string `json:"git_tags_url,omitempty"`
	GitUrl           string `json:"git_url,omitempty"`
	HtmlUrl          string `json:"html_url,omitempty"`
	Id               int64  `json:"id,omitempty"`
	IssueCommentUrl  string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl   string `json:"issue_events_url,omitempty"`
	IssuesUrl        string `json:"issues_url,omitempty"`
	KeysUrl          string `json:"keys_url,omitempty"`
	LabelsUrl        string `json:"labels_url,omitempty"`
	LanguagesUrl     string `json:"languages_url,omitempty"`
	MergesUrl        string `json:"merges_url,omitempty"`
	MilestonesUrl    string `json:"milestones_url,omitempty"`
	Name             string `json:"name,omitempty"`
	NodeId           string `json:"node_id,omitempty"`
	NotificationsUrl string `json:"notifications_url,omitempty"`
	Owner            struct {
		WorkflowRunRepositoryOwner
	} `json:"owner,omitempty"`
	Private         bool   `json:"private,omitempty"`
	PullsUrl        string `json:"pulls_url,omitempty"`
	ReleasesUrl     string `json:"releases_url,omitempty"`
	SshUrl          string `json:"ssh_url,omitempty"`
	StargazersUrl   string `json:"stargazers_url,omitempty"`
	StatusesUrl     string `json:"statuses_url,omitempty"`
	SubscribersUrl  string `json:"subscribers_url,omitempty"`
	SubscriptionUrl string `json:"subscription_url,omitempty"`
	TagsUrl         string `json:"tags_url,omitempty"`
	TeamsUrl        string `json:"teams_url,omitempty"`
	TreesUrl        string `json:"trees_url,omitempty"`
	Url             string `json:"url,omitempty"`
}

type WorkflowRunRepositoryOwner struct {
	AvatarUrl         string `json:"avatar_url,omitempty"`
	EventsUrl         string `json:"events_url,omitempty"`
	FollowersUrl      string `json:"followers_url,omitempty"`
	FollowingUrl      string `json:"following_url,omitempty"`
	GistsUrl          string `json:"gists_url,omitempty"`
	GravatarId        string `json:"gravatar_id,omitempty"`
	HtmlUrl           string `json:"html_url,omitempty"`
	Id                int64  `json:"id,omitempty"`
	Login             string `json:"login,omitempty"`
	NodeId            string `json:"node_id,omitempty"`
	OrganizationsUrl  string `json:"organizations_url,omitempty"`
	ReceivedEventsUrl string `json:"received_events_url,omitempty"`
	ReposUrl          string `json:"repos_url,omitempty"`
	SiteAdmin         bool   `json:"site_admin,omitempty"`
	StarredUrl        string `json:"starred_url,omitempty"`
	SubscriptionsUrl  string `json:"subscriptions_url,omitempty"`
	Type              string `json:"type,omitempty"`
	Url               string `json:"url,omitempty"`
}

type WorkflowRunUsage struct {
	Billable struct {
		WorkflowRunUsageBillable
	} `json:"billable,omitempty"`
	RunDurationMs int64 `json:"run_duration_ms,omitempty"`
}

type WorkflowRunUsageBillable struct {
	MACOS struct {
		WorkflowRunUsageBillableMACOS
	} `json:"MACOS,omitempty"`
	UBUNTU struct {
		WorkflowRunUsageBillableUBUNTU
	} `json:"UBUNTU,omitempty"`
	WINDOWS struct {
		WorkflowRunUsageBillableWINDOWS
	} `json:"WINDOWS,omitempty"`
}

type WorkflowRunUsageBillableMACOS struct {
	Jobs    int64 `json:"jobs,omitempty"`
	TotalMs int64 `json:"total_ms,omitempty"`
}

type WorkflowRunUsageBillableUBUNTU struct {
	Jobs    int64 `json:"jobs,omitempty"`
	TotalMs int64 `json:"total_ms,omitempty"`
}

type WorkflowRunUsageBillableWINDOWS struct {
	Jobs    int64 `json:"jobs,omitempty"`
	TotalMs int64 `json:"total_ms,omitempty"`
}

type WorkflowUsage struct {
	Billable struct {
		WorkflowUsageBillable
	} `json:"billable,omitempty"`
}

type WorkflowUsageBillable struct {
	MACOS struct {
		WorkflowUsageBillableMACOS
	} `json:"MACOS,omitempty"`
	UBUNTU struct {
		WorkflowUsageBillableUBUNTU
	} `json:"UBUNTU,omitempty"`
	WINDOWS struct {
		WorkflowUsageBillableWINDOWS
	} `json:"WINDOWS,omitempty"`
}

type WorkflowUsageBillableMACOS struct {
	TotalMs int64 `json:"total_ms,omitempty"`
}

type WorkflowUsageBillableUBUNTU struct {
	TotalMs int64 `json:"total_ms,omitempty"`
}

type WorkflowUsageBillableWINDOWS struct {
	TotalMs int64 `json:"total_ms,omitempty"`
}
