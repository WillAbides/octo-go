// Code generated by octo-go; DO NOT EDIT.

package octo

import (
	"context"
	"fmt"
	components "github.com/willabides/octo-go/components"
	"net/http"
	"net/url"
)

/*
GitignoreGetTemplateReq builds requests for "gitignore/get-template"

Get a single template.

  GET /gitignore/templates/{name}

https://developer.github.com/v3/gitignore/#get-a-single-template
*/
type GitignoreGetTemplateReq struct {
	Name string
}

func (r *GitignoreGetTemplateReq) urlPath() string {
	return fmt.Sprintf("/gitignore/templates/%v", r.Name)
}

func (r *GitignoreGetTemplateReq) method() string {
	return "GET"
}

func (r *GitignoreGetTemplateReq) urlQuery() url.Values {
	query := url.Values{}
	return query
}

func (r *GitignoreGetTemplateReq) header(requiredPreviews, allPreviews bool) http.Header {
	headerVals := map[string]*string{}
	previewVals := map[string]bool{}
	return requestHeaders(headerVals, previewVals)
}

func (r *GitignoreGetTemplateReq) body() interface{} {
	return nil
}

// HTTPRequest creates an http request
func (r *GitignoreGetTemplateReq) HTTPRequest(ctx context.Context, opt ...RequestOption) (*http.Request, error) {
	return buildHTTPRequest(ctx, r, opt)
}

/*
GitignoreGetTemplateResponseBody200 is a response body for gitignore/get-template

API documentation: https://developer.github.com/v3/gitignore/#get-a-single-template
*/
type GitignoreGetTemplateResponseBody200 struct {
	components.GitignoreTemplate
}

/*
GitignoreListTemplatesReq builds requests for "gitignore/list-templates"

Listing available templates.

  GET /gitignore/templates

https://developer.github.com/v3/gitignore/#listing-available-templates
*/
type GitignoreListTemplatesReq struct{}

func (r *GitignoreListTemplatesReq) urlPath() string {
	return fmt.Sprintf("/gitignore/templates")
}

func (r *GitignoreListTemplatesReq) method() string {
	return "GET"
}

func (r *GitignoreListTemplatesReq) urlQuery() url.Values {
	query := url.Values{}
	return query
}

func (r *GitignoreListTemplatesReq) header(requiredPreviews, allPreviews bool) http.Header {
	headerVals := map[string]*string{}
	previewVals := map[string]bool{}
	return requestHeaders(headerVals, previewVals)
}

func (r *GitignoreListTemplatesReq) body() interface{} {
	return nil
}

// HTTPRequest creates an http request
func (r *GitignoreListTemplatesReq) HTTPRequest(ctx context.Context, opt ...RequestOption) (*http.Request, error) {
	return buildHTTPRequest(ctx, r, opt)
}

/*
GitignoreListTemplatesResponseBody200 is a response body for gitignore/list-templates

API documentation: https://developer.github.com/v3/gitignore/#listing-available-templates
*/
type GitignoreListTemplatesResponseBody200 []string
